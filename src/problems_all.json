[
  {
    "two-sum": {
      "quesName": "Two Sum",
      "quesLink": "https://leetcode.com/problems/two-sum/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "add-two-numbers": {
      "quesName": "Add Two Numbers",
      "quesLink": "https://leetcode.com/problems/add-two-numbers/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Math", "Recursion"]
    }
  },
  {
    "longest-substring-without-repeating-characters": {
      "quesName": "Longest Substring Without Repeating Characters",
      "quesLink": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "median-of-two-sorted-arrays": {
      "quesName": "Median of Two Sorted Arrays",
      "quesLink": "https://leetcode.com/problems/median-of-two-sorted-arrays/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search", "Divide and Conquer"]
    }
  },
  {
    "longest-palindromic-substring": {
      "quesName": "Longest Palindromic Substring",
      "quesLink": "https://leetcode.com/problems/longest-palindromic-substring/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "zigzag-conversion": {
      "quesName": "Zigzag Conversion",
      "quesLink": "https://leetcode.com/problems/zigzag-conversion/",
      "specialTag": "Medium",
      "tags": ["String"]
    }
  },
  {
    "reverse-integer": {
      "quesName": "Reverse Integer",
      "quesLink": "https://leetcode.com/problems/reverse-integer/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "string-to-integer-atoi": {
      "quesName": "String to Integer (atoi)",
      "quesLink": "https://leetcode.com/problems/string-to-integer-atoi/",
      "specialTag": "Medium",
      "tags": ["String"]
    }
  },
  {
    "palindrome-number": {
      "quesName": "Palindrome Number",
      "quesLink": "https://leetcode.com/problems/palindrome-number/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "regular-expression-matching": {
      "quesName": "Regular Expression Matching",
      "quesLink": "https://leetcode.com/problems/regular-expression-matching/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming", "Recursion"]
    }
  },
  {
    "container-with-most-water": {
      "quesName": "Container With Most Water",
      "quesLink": "https://leetcode.com/problems/container-with-most-water/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Greedy"]
    }
  },
  {
    "integer-to-roman": {
      "quesName": "Integer to Roman",
      "quesLink": "https://leetcode.com/problems/integer-to-roman/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math", "String"]
    }
  },
  {
    "roman-to-integer": {
      "quesName": "Roman to Integer",
      "quesLink": "https://leetcode.com/problems/roman-to-integer/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "Math", "String"]
    }
  },
  {
    "longest-common-prefix": {
      "quesName": "Longest Common Prefix",
      "quesLink": "https://leetcode.com/problems/longest-common-prefix/",
      "specialTag": "Easy",
      "tags": ["String", "Trie"]
    }
  },
  {
    "3sum": {
      "quesName": "3Sum",
      "quesLink": "https://leetcode.com/problems/3sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "3sum-closest": {
      "quesName": "3Sum Closest",
      "quesLink": "https://leetcode.com/problems/3sum-closest/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "letter-combinations-of-a-phone-number": {
      "quesName": "Letter Combinations of a Phone Number",
      "quesLink": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Backtracking"]
    }
  },
  {
    "4sum": {
      "quesName": "4Sum",
      "quesLink": "https://leetcode.com/problems/4sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "remove-nth-node-from-end-of-list": {
      "quesName": "Remove Nth Node From End of List",
      "quesLink": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Two Pointers"]
    }
  },
  {
    "valid-parentheses": {
      "quesName": "Valid Parentheses",
      "quesLink": "https://leetcode.com/problems/valid-parentheses/",
      "specialTag": "Easy",
      "tags": ["String", "Stack"]
    }
  },
  {
    "merge-two-sorted-lists": {
      "quesName": "Merge Two Sorted Lists",
      "quesLink": "https://leetcode.com/problems/merge-two-sorted-lists/",
      "specialTag": "Easy",
      "tags": ["Linked List", "Recursion"]
    }
  },
  {
    "generate-parentheses": {
      "quesName": "Generate Parentheses",
      "quesLink": "https://leetcode.com/problems/generate-parentheses/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming", "Backtracking"]
    }
  },
  {
    "merge-k-sorted-lists": {
      "quesName": "Merge k Sorted Lists",
      "quesLink": "https://leetcode.com/problems/merge-k-sorted-lists/",
      "specialTag": "Hard",
      "tags": [
        "Linked List",
        "Divide and Conquer",
        "Heap (Priority Queue)",
        "Merge Sort"
      ]
    }
  },
  {
    "swap-nodes-in-pairs": {
      "quesName": "Swap Nodes in Pairs",
      "quesLink": "https://leetcode.com/problems/swap-nodes-in-pairs/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Recursion"]
    }
  },
  {
    "reverse-nodes-in-k-group": {
      "quesName": "Reverse Nodes in k-Group",
      "quesLink": "https://leetcode.com/problems/reverse-nodes-in-k-group/",
      "specialTag": "Hard",
      "tags": ["Linked List", "Recursion"]
    }
  },
  {
    "remove-duplicates-from-sorted-array": {
      "quesName": "Remove Duplicates from Sorted Array",
      "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "remove-element": {
      "quesName": "Remove Element",
      "quesLink": "https://leetcode.com/problems/remove-element/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "find-the-index-of-the-first-occurrence-in-a-string": {
      "quesName": "Find the Index of the First Occurrence in a String",
      "quesLink": "https://leetcode.com/problems/find-the-index-of-the-first-occurrence-in-a-string/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String", "String Matching"]
    }
  },
  {
    "divide-two-integers": {
      "quesName": "Divide Two Integers",
      "quesLink": "https://leetcode.com/problems/divide-two-integers/",
      "specialTag": "Medium",
      "tags": ["Math", "Bit Manipulation"]
    }
  },
  {
    "substring-with-concatenation-of-all-words": {
      "quesName": "Substring with Concatenation of All Words",
      "quesLink": "https://leetcode.com/problems/substring-with-concatenation-of-all-words/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "next-permutation": {
      "quesName": "Next Permutation",
      "quesLink": "https://leetcode.com/problems/next-permutation/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "longest-valid-parentheses": {
      "quesName": "Longest Valid Parentheses",
      "quesLink": "https://leetcode.com/problems/longest-valid-parentheses/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming", "Stack"]
    }
  },
  {
    "search-in-rotated-sorted-array": {
      "quesName": "Search in Rotated Sorted Array",
      "quesLink": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "find-first-and-last-position-of-element-in-sorted-array": {
      "quesName": "Find First and Last Position of Element in Sorted Array",
      "quesLink": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "search-insert-position": {
      "quesName": "Search Insert Position",
      "quesLink": "https://leetcode.com/problems/search-insert-position/",
      "specialTag": "Easy",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "valid-sudoku": {
      "quesName": "Valid Sudoku",
      "quesLink": "https://leetcode.com/problems/valid-sudoku/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Matrix"]
    }
  },
  {
    "sudoku-solver": {
      "quesName": "Sudoku Solver",
      "quesLink": "https://leetcode.com/problems/sudoku-solver/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Backtracking", "Matrix"]
    }
  },
  {
    "count-and-say": {
      "quesName": "Count and Say",
      "quesLink": "https://leetcode.com/problems/count-and-say/",
      "specialTag": "Medium",
      "tags": ["String"]
    }
  },
  {
    "combination-sum": {
      "quesName": "Combination Sum",
      "quesLink": "https://leetcode.com/problems/combination-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking"]
    }
  },
  {
    "combination-sum-ii": {
      "quesName": "Combination Sum II",
      "quesLink": "https://leetcode.com/problems/combination-sum-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking"]
    }
  },
  {
    "first-missing-positive": {
      "quesName": "First Missing Positive",
      "quesLink": "https://leetcode.com/problems/first-missing-positive/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "trapping-rain-water": {
      "quesName": "Trapping Rain Water",
      "quesLink": "https://leetcode.com/problems/trapping-rain-water/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Two Pointers",
        "Dynamic Programming",
        "Stack",
        "Monotonic Stack"
      ]
    }
  },
  {
    "multiply-strings": {
      "quesName": "Multiply Strings",
      "quesLink": "https://leetcode.com/problems/multiply-strings/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "wildcard-matching": {
      "quesName": "Wildcard Matching",
      "quesLink": "https://leetcode.com/problems/wildcard-matching/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming", "Greedy", "Recursion"]
    }
  },
  {
    "jump-game-ii": {
      "quesName": "Jump Game II",
      "quesLink": "https://leetcode.com/problems/jump-game-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "permutations": {
      "quesName": "Permutations",
      "quesLink": "https://leetcode.com/problems/permutations/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking"]
    }
  },
  {
    "permutations-ii": {
      "quesName": "Permutations II",
      "quesLink": "https://leetcode.com/problems/permutations-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking"]
    }
  },
  {
    "rotate-image": {
      "quesName": "Rotate Image",
      "quesLink": "https://leetcode.com/problems/rotate-image/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Matrix"]
    }
  },
  {
    "group-anagrams": {
      "quesName": "Group Anagrams",
      "quesLink": "https://leetcode.com/problems/group-anagrams/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Sorting"]
    }
  },
  {
    "powx-n": {
      "quesName": "Pow(x, n)",
      "quesLink": "https://leetcode.com/problems/powx-n/",
      "specialTag": "Medium",
      "tags": ["Math", "Recursion"]
    }
  },
  {
    "n-queens": {
      "quesName": "N-Queens",
      "quesLink": "https://leetcode.com/problems/n-queens/",
      "specialTag": "Hard",
      "tags": ["Array", "Backtracking"]
    }
  },
  {
    "n-queens-ii": {
      "quesName": "N-Queens II",
      "quesLink": "https://leetcode.com/problems/n-queens-ii/",
      "specialTag": "Hard",
      "tags": ["Backtracking"]
    }
  },
  {
    "maximum-subarray": {
      "quesName": "Maximum Subarray",
      "quesLink": "https://leetcode.com/problems/maximum-subarray/",
      "specialTag": "Medium",
      "tags": ["Array", "Divide and Conquer", "Dynamic Programming"]
    }
  },
  {
    "spiral-matrix": {
      "quesName": "Spiral Matrix",
      "quesLink": "https://leetcode.com/problems/spiral-matrix/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "jump-game": {
      "quesName": "Jump Game",
      "quesLink": "https://leetcode.com/problems/jump-game/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "merge-intervals": {
      "quesName": "Merge Intervals",
      "quesLink": "https://leetcode.com/problems/merge-intervals/",
      "specialTag": "Medium",
      "tags": ["Array", "Sorting"]
    }
  },
  {
    "insert-interval": {
      "quesName": "Insert Interval",
      "quesLink": "https://leetcode.com/problems/insert-interval/",
      "specialTag": "Medium",
      "tags": ["Array"]
    }
  },
  {
    "length-of-last-word": {
      "quesName": "Length of Last Word",
      "quesLink": "https://leetcode.com/problems/length-of-last-word/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "spiral-matrix-ii": {
      "quesName": "Spiral Matrix II",
      "quesLink": "https://leetcode.com/problems/spiral-matrix-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "permutation-sequence": {
      "quesName": "Permutation Sequence",
      "quesLink": "https://leetcode.com/problems/permutation-sequence/",
      "specialTag": "Hard",
      "tags": ["Math", "Recursion"]
    }
  },
  {
    "rotate-list": {
      "quesName": "Rotate List",
      "quesLink": "https://leetcode.com/problems/rotate-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Two Pointers"]
    }
  },
  {
    "unique-paths": {
      "quesName": "Unique Paths",
      "quesLink": "https://leetcode.com/problems/unique-paths/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming", "Combinatorics"]
    }
  },
  {
    "unique-paths-ii": {
      "quesName": "Unique Paths II",
      "quesLink": "https://leetcode.com/problems/unique-paths-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "minimum-path-sum": {
      "quesName": "Minimum Path Sum",
      "quesLink": "https://leetcode.com/problems/minimum-path-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "valid-number": {
      "quesName": "Valid Number",
      "quesLink": "https://leetcode.com/problems/valid-number/",
      "specialTag": "Hard",
      "tags": ["String"]
    }
  },
  {
    "plus-one": {
      "quesName": "Plus One",
      "quesLink": "https://leetcode.com/problems/plus-one/",
      "specialTag": "Easy",
      "tags": ["Array", "Math"]
    }
  },
  {
    "add-binary": {
      "quesName": "Add Binary",
      "quesLink": "https://leetcode.com/problems/add-binary/",
      "specialTag": "Easy",
      "tags": ["Math", "String", "Bit Manipulation", "Simulation"]
    }
  },
  {
    "text-justification": {
      "quesName": "Text Justification",
      "quesLink": "https://leetcode.com/problems/text-justification/",
      "specialTag": "Hard",
      "tags": ["Array", "String", "Simulation"]
    }
  },
  {
    "sqrtx": {
      "quesName": "Sqrt(x)",
      "quesLink": "https://leetcode.com/problems/sqrtx/",
      "specialTag": "Easy",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "climbing-stairs": {
      "quesName": "Climbing Stairs",
      "quesLink": "https://leetcode.com/problems/climbing-stairs/",
      "specialTag": "Easy",
      "tags": ["Math", "Dynamic Programming", "Memoization"]
    }
  },
  {
    "simplify-path": {
      "quesName": "Simplify Path",
      "quesLink": "https://leetcode.com/problems/simplify-path/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "edit-distance": {
      "quesName": "Edit Distance",
      "quesLink": "https://leetcode.com/problems/edit-distance/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "set-matrix-zeroes": {
      "quesName": "Set Matrix Zeroes",
      "quesLink": "https://leetcode.com/problems/set-matrix-zeroes/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Matrix"]
    }
  },
  {
    "search-a-2d-matrix": {
      "quesName": "Search a 2D Matrix",
      "quesLink": "https://leetcode.com/problems/search-a-2d-matrix/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Matrix"]
    }
  },
  {
    "sort-colors": {
      "quesName": "Sort Colors",
      "quesLink": "https://leetcode.com/problems/sort-colors/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "minimum-window-substring": {
      "quesName": "Minimum Window Substring",
      "quesLink": "https://leetcode.com/problems/minimum-window-substring/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "combinations": {
      "quesName": "Combinations",
      "quesLink": "https://leetcode.com/problems/combinations/",
      "specialTag": "Medium",
      "tags": ["Backtracking"]
    }
  },
  {
    "subsets": {
      "quesName": "Subsets",
      "quesLink": "https://leetcode.com/problems/subsets/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "word-search": {
      "quesName": "Word Search",
      "quesLink": "https://leetcode.com/problems/word-search/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking", "Matrix"]
    }
  },
  {
    "remove-duplicates-from-sorted-array-ii": {
      "quesName": "Remove Duplicates from Sorted Array II",
      "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "search-in-rotated-sorted-array-ii": {
      "quesName": "Search in Rotated Sorted Array II",
      "quesLink": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "remove-duplicates-from-sorted-list-ii": {
      "quesName": "Remove Duplicates from Sorted List II",
      "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Two Pointers"]
    }
  },
  {
    "remove-duplicates-from-sorted-list": {
      "quesName": "Remove Duplicates from Sorted List",
      "quesLink": "https://leetcode.com/problems/remove-duplicates-from-sorted-list/",
      "specialTag": "Easy",
      "tags": ["Linked List"]
    }
  },
  {
    "largest-rectangle-in-histogram": {
      "quesName": "Largest Rectangle in Histogram",
      "quesLink": "https://leetcode.com/problems/largest-rectangle-in-histogram/",
      "specialTag": "Hard",
      "tags": ["Array", "Stack", "Monotonic Stack"]
    }
  },
  {
    "maximal-rectangle": {
      "quesName": "Maximal Rectangle",
      "quesLink": "https://leetcode.com/problems/maximal-rectangle/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Matrix",
        "Monotonic Stack"
      ]
    }
  },
  {
    "partition-list": {
      "quesName": "Partition List",
      "quesLink": "https://leetcode.com/problems/partition-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Two Pointers"]
    }
  },
  {
    "scramble-string": {
      "quesName": "Scramble String",
      "quesLink": "https://leetcode.com/problems/scramble-string/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "merge-sorted-array": {
      "quesName": "Merge Sorted Array",
      "quesLink": "https://leetcode.com/problems/merge-sorted-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "gray-code": {
      "quesName": "Gray Code",
      "quesLink": "https://leetcode.com/problems/gray-code/",
      "specialTag": "Medium",
      "tags": ["Math", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "subsets-ii": {
      "quesName": "Subsets II",
      "quesLink": "https://leetcode.com/problems/subsets-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "decode-ways": {
      "quesName": "Decode Ways",
      "quesLink": "https://leetcode.com/problems/decode-ways/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "reverse-linked-list-ii": {
      "quesName": "Reverse Linked List II",
      "quesLink": "https://leetcode.com/problems/reverse-linked-list-ii/",
      "specialTag": "Medium",
      "tags": ["Linked List"]
    }
  },
  {
    "restore-ip-addresses": {
      "quesName": "Restore IP Addresses",
      "quesLink": "https://leetcode.com/problems/restore-ip-addresses/",
      "specialTag": "Medium",
      "tags": ["String", "Backtracking"]
    }
  },
  {
    "binary-tree-inorder-traversal": {
      "quesName": "Binary Tree Inorder Traversal",
      "quesLink": "https://leetcode.com/problems/binary-tree-inorder-traversal/",
      "specialTag": "Easy",
      "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "unique-binary-search-trees-ii": {
      "quesName": "Unique Binary Search Trees II",
      "quesLink": "https://leetcode.com/problems/unique-binary-search-trees-ii/",
      "specialTag": "Medium",
      "tags": [
        "Dynamic Programming",
        "Backtracking",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "unique-binary-search-trees": {
      "quesName": "Unique Binary Search Trees",
      "quesLink": "https://leetcode.com/problems/unique-binary-search-trees/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "Dynamic Programming",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "interleaving-string": {
      "quesName": "Interleaving String",
      "quesLink": "https://leetcode.com/problems/interleaving-string/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "validate-binary-search-tree": {
      "quesName": "Validate Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/validate-binary-search-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "recover-binary-search-tree": {
      "quesName": "Recover Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/recover-binary-search-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "same-tree": {
      "quesName": "Same Tree",
      "quesLink": "https://leetcode.com/problems/same-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "symmetric-tree": {
      "quesName": "Symmetric Tree",
      "quesLink": "https://leetcode.com/problems/symmetric-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "binary-tree-level-order-traversal": {
      "quesName": "Binary Tree Level Order Traversal",
      "quesLink": "https://leetcode.com/problems/binary-tree-level-order-traversal/",
      "specialTag": "Medium",
      "tags": ["Tree", "Breadth-First Search", "Binary Tree"]
    }
  },
  {
    "binary-tree-zigzag-level-order-traversal": {
      "quesName": "Binary Tree Zigzag Level Order Traversal",
      "quesLink": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/",
      "specialTag": "Medium",
      "tags": ["Tree", "Breadth-First Search", "Binary Tree"]
    }
  },
  {
    "maximum-depth-of-binary-tree": {
      "quesName": "Maximum Depth of Binary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-depth-of-binary-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "construct-binary-tree-from-preorder-and-inorder-traversal": {
      "quesName": "Construct Binary Tree from Preorder and Inorder Traversal",
      "quesLink": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "construct-binary-tree-from-inorder-and-postorder-traversal": {
      "quesName": "Construct Binary Tree from Inorder and Postorder Traversal",
      "quesLink": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "binary-tree-level-order-traversal-ii": {
      "quesName": "Binary Tree Level Order Traversal II",
      "quesLink": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/",
      "specialTag": "Medium",
      "tags": ["Tree", "Breadth-First Search", "Binary Tree"]
    }
  },
  {
    "convert-sorted-array-to-binary-search-tree": {
      "quesName": "Convert Sorted Array to Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Divide and Conquer",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "convert-sorted-list-to-binary-search-tree": {
      "quesName": "Convert Sorted List to Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",
      "specialTag": "Medium",
      "tags": [
        "Linked List",
        "Divide and Conquer",
        "Tree",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "balanced-binary-tree": {
      "quesName": "Balanced Binary Tree",
      "quesLink": "https://leetcode.com/problems/balanced-binary-tree/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "minimum-depth-of-binary-tree": {
      "quesName": "Minimum Depth of Binary Tree",
      "quesLink": "https://leetcode.com/problems/minimum-depth-of-binary-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "path-sum": {
      "quesName": "Path Sum",
      "quesLink": "https://leetcode.com/problems/path-sum/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "path-sum-ii": {
      "quesName": "Path Sum II",
      "quesLink": "https://leetcode.com/problems/path-sum-ii/",
      "specialTag": "Medium",
      "tags": ["Backtracking", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "flatten-binary-tree-to-linked-list": {
      "quesName": "Flatten Binary Tree to Linked List",
      "quesLink": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
      "specialTag": "Medium",
      "tags": [
        "Linked List",
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "distinct-subsequences": {
      "quesName": "Distinct Subsequences",
      "quesLink": "https://leetcode.com/problems/distinct-subsequences/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "populating-next-right-pointers-in-each-node": {
      "quesName": "Populating Next Right Pointers in Each Node",
      "quesLink": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/",
      "specialTag": "Medium",
      "tags": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "populating-next-right-pointers-in-each-node-ii": {
      "quesName": "Populating Next Right Pointers in Each Node II",
      "quesLink": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/",
      "specialTag": "Medium",
      "tags": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "pascals-triangle": {
      "quesName": "Pascal's Triangle",
      "quesLink": "https://leetcode.com/problems/pascals-triangle/",
      "specialTag": "Easy",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "pascals-triangle-ii": {
      "quesName": "Pascal's Triangle II",
      "quesLink": "https://leetcode.com/problems/pascals-triangle-ii/",
      "specialTag": "Easy",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "triangle": {
      "quesName": "Triangle",
      "quesLink": "https://leetcode.com/problems/triangle/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "best-time-to-buy-and-sell-stock": {
      "quesName": "Best Time to Buy and Sell Stock",
      "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock/",
      "specialTag": "Easy",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "best-time-to-buy-and-sell-stock-ii": {
      "quesName": "Best Time to Buy and Sell Stock II",
      "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "best-time-to-buy-and-sell-stock-iii": {
      "quesName": "Best Time to Buy and Sell Stock III",
      "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "binary-tree-maximum-path-sum": {
      "quesName": "Binary Tree Maximum Path Sum",
      "quesLink": "https://leetcode.com/problems/binary-tree-maximum-path-sum/",
      "specialTag": "Hard",
      "tags": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "valid-palindrome": {
      "quesName": "Valid Palindrome",
      "quesLink": "https://leetcode.com/problems/valid-palindrome/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "word-ladder-ii": {
      "quesName": "Word Ladder II",
      "quesLink": "https://leetcode.com/problems/word-ladder-ii/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Backtracking", "Breadth-First Search"]
    }
  },
  {
    "word-ladder": {
      "quesName": "Word Ladder",
      "quesLink": "https://leetcode.com/problems/word-ladder/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Breadth-First Search"]
    }
  },
  {
    "longest-consecutive-sequence": {
      "quesName": "Longest Consecutive Sequence",
      "quesLink": "https://leetcode.com/problems/longest-consecutive-sequence/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Union Find"]
    }
  },
  {
    "sum-root-to-leaf-numbers": {
      "quesName": "Sum Root to Leaf Numbers",
      "quesLink": "https://leetcode.com/problems/sum-root-to-leaf-numbers/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "surrounded-regions": {
      "quesName": "Surrounded Regions",
      "quesLink": "https://leetcode.com/problems/surrounded-regions/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "palindrome-partitioning": {
      "quesName": "Palindrome Partitioning",
      "quesLink": "https://leetcode.com/problems/palindrome-partitioning/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming", "Backtracking"]
    }
  },
  {
    "palindrome-partitioning-ii": {
      "quesName": "Palindrome Partitioning II",
      "quesLink": "https://leetcode.com/problems/palindrome-partitioning-ii/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "clone-graph": {
      "quesName": "Clone Graph",
      "quesLink": "https://leetcode.com/problems/clone-graph/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    }
  },
  {
    "gas-station": {
      "quesName": "Gas Station",
      "quesLink": "https://leetcode.com/problems/gas-station/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "candy": {
      "quesName": "Candy",
      "quesLink": "https://leetcode.com/problems/candy/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "single-number": {
      "quesName": "Single Number",
      "quesLink": "https://leetcode.com/problems/single-number/",
      "specialTag": "Easy",
      "tags": ["Array", "Bit Manipulation"]
    }
  },
  {
    "single-number-ii": {
      "quesName": "Single Number II",
      "quesLink": "https://leetcode.com/problems/single-number-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Bit Manipulation"]
    }
  },
  {
    "copy-list-with-random-pointer": {
      "quesName": "Copy List with Random Pointer",
      "quesLink": "https://leetcode.com/problems/copy-list-with-random-pointer/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Linked List"]
    }
  },
  {
    "word-break": {
      "quesName": "Word Break",
      "quesLink": "https://leetcode.com/problems/word-break/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Trie",
        "Memoization"
      ]
    }
  },
  {
    "word-break-ii": {
      "quesName": "Word Break II",
      "quesLink": "https://leetcode.com/problems/word-break-ii/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Trie",
        "Memoization"
      ]
    }
  },
  {
    "linked-list-cycle": {
      "quesName": "Linked List Cycle",
      "quesLink": "https://leetcode.com/problems/linked-list-cycle/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "Linked List", "Two Pointers"]
    }
  },
  {
    "linked-list-cycle-ii": {
      "quesName": "Linked List Cycle II",
      "quesLink": "https://leetcode.com/problems/linked-list-cycle-ii/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Linked List", "Two Pointers"]
    }
  },
  {
    "reorder-list": {
      "quesName": "Reorder List",
      "quesLink": "https://leetcode.com/problems/reorder-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"]
    }
  },
  {
    "binary-tree-preorder-traversal": {
      "quesName": "Binary Tree Preorder Traversal",
      "quesLink": "https://leetcode.com/problems/binary-tree-preorder-traversal/",
      "specialTag": "Easy",
      "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "binary-tree-postorder-traversal": {
      "quesName": "Binary Tree Postorder Traversal",
      "quesLink": "https://leetcode.com/problems/binary-tree-postorder-traversal/",
      "specialTag": "Easy",
      "tags": ["Stack", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "lru-cache": {
      "quesName": "LRU Cache",
      "quesLink": "https://leetcode.com/problems/lru-cache/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"]
    }
  },
  {
    "insertion-sort-list": {
      "quesName": "Insertion Sort List",
      "quesLink": "https://leetcode.com/problems/insertion-sort-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Sorting"]
    }
  },
  {
    "sort-list": {
      "quesName": "Sort List",
      "quesLink": "https://leetcode.com/problems/sort-list/",
      "specialTag": "Medium",
      "tags": [
        "Linked List",
        "Two Pointers",
        "Divide and Conquer",
        "Sorting",
        "Merge Sort"
      ]
    }
  },
  {
    "max-points-on-a-line": {
      "quesName": "Max Points on a Line",
      "quesLink": "https://leetcode.com/problems/max-points-on-a-line/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Math", "Geometry"]
    }
  },
  {
    "evaluate-reverse-polish-notation": {
      "quesName": "Evaluate Reverse Polish Notation",
      "quesLink": "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Stack"]
    }
  },
  {
    "reverse-words-in-a-string": {
      "quesName": "Reverse Words in a String",
      "quesLink": "https://leetcode.com/problems/reverse-words-in-a-string/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "maximum-product-subarray": {
      "quesName": "Maximum Product Subarray",
      "quesLink": "https://leetcode.com/problems/maximum-product-subarray/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "find-minimum-in-rotated-sorted-array": {
      "quesName": "Find Minimum in Rotated Sorted Array",
      "quesLink": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "find-minimum-in-rotated-sorted-array-ii": {
      "quesName": "Find Minimum in Rotated Sorted Array II",
      "quesLink": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "min-stack": {
      "quesName": "Min Stack",
      "quesLink": "https://leetcode.com/problems/min-stack/",
      "specialTag": "Medium",
      "tags": ["Stack", "Design"]
    }
  },
  {
    "intersection-of-two-linked-lists": {
      "quesName": "Intersection of Two Linked Lists",
      "quesLink": "https://leetcode.com/problems/intersection-of-two-linked-lists/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "Linked List", "Two Pointers"]
    }
  },
  {
    "find-peak-element": {
      "quesName": "Find Peak Element",
      "quesLink": "https://leetcode.com/problems/find-peak-element/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "maximum-gap": {
      "quesName": "Maximum Gap",
      "quesLink": "https://leetcode.com/problems/maximum-gap/",
      "specialTag": "Medium",
      "tags": ["Array", "Sorting", "Bucket Sort", "Radix Sort"]
    }
  },
  {
    "compare-version-numbers": {
      "quesName": "Compare Version Numbers",
      "quesLink": "https://leetcode.com/problems/compare-version-numbers/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "fraction-to-recurring-decimal": {
      "quesName": "Fraction to Recurring Decimal",
      "quesLink": "https://leetcode.com/problems/fraction-to-recurring-decimal/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math", "String"]
    }
  },
  {
    "two-sum-ii-input-array-is-sorted": {
      "quesName": "Two Sum II - Input Array Is Sorted",
      "quesLink": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Binary Search"]
    }
  },
  {
    "excel-sheet-column-title": {
      "quesName": "Excel Sheet Column Title",
      "quesLink": "https://leetcode.com/problems/excel-sheet-column-title/",
      "specialTag": "Easy",
      "tags": ["Math", "String"]
    }
  },
  {
    "majority-element": {
      "quesName": "Majority Element",
      "quesLink": "https://leetcode.com/problems/majority-element/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Sorting",
        "Counting"
      ]
    }
  },
  {
    "excel-sheet-column-number": {
      "quesName": "Excel Sheet Column Number",
      "quesLink": "https://leetcode.com/problems/excel-sheet-column-number/",
      "specialTag": "Easy",
      "tags": ["Math", "String"]
    }
  },
  {
    "factorial-trailing-zeroes": {
      "quesName": "Factorial Trailing Zeroes",
      "quesLink": "https://leetcode.com/problems/factorial-trailing-zeroes/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "binary-search-tree-iterator": {
      "quesName": "Binary Search Tree Iterator",
      "quesLink": "https://leetcode.com/problems/binary-search-tree-iterator/",
      "specialTag": "Medium",
      "tags": [
        "Stack",
        "Tree",
        "Design",
        "Binary Search Tree",
        "Binary Tree",
        "Iterator"
      ]
    }
  },
  {
    "dungeon-game": {
      "quesName": "Dungeon Game",
      "quesLink": "https://leetcode.com/problems/dungeon-game/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "combine-two-tables": {
      "quesName": "Combine Two Tables",
      "quesLink": "https://leetcode.com/problems/combine-two-tables/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "second-highest-salary": {
      "quesName": "Second Highest Salary",
      "quesLink": "https://leetcode.com/problems/second-highest-salary/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "nth-highest-salary": {
      "quesName": "Nth Highest Salary",
      "quesLink": "https://leetcode.com/problems/nth-highest-salary/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "rank-scores": {
      "quesName": "Rank Scores",
      "quesLink": "https://leetcode.com/problems/rank-scores/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "largest-number": {
      "quesName": "Largest Number",
      "quesLink": "https://leetcode.com/problems/largest-number/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Greedy", "Sorting"]
    }
  },
  {
    "consecutive-numbers": {
      "quesName": "Consecutive Numbers",
      "quesLink": "https://leetcode.com/problems/consecutive-numbers/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "employees-earning-more-than-their-managers": {
      "quesName": "Employees Earning More Than Their Managers",
      "quesLink": "https://leetcode.com/problems/employees-earning-more-than-their-managers/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "duplicate-emails": {
      "quesName": "Duplicate Emails",
      "quesLink": "https://leetcode.com/problems/duplicate-emails/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "customers-who-never-order": {
      "quesName": "Customers Who Never Order",
      "quesLink": "https://leetcode.com/problems/customers-who-never-order/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "department-highest-salary": {
      "quesName": "Department Highest Salary",
      "quesLink": "https://leetcode.com/problems/department-highest-salary/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "department-top-three-salaries": {
      "quesName": "Department Top Three Salaries",
      "quesLink": "https://leetcode.com/problems/department-top-three-salaries/",
      "specialTag": "Hard",
      "tags": ["Database"]
    }
  },
  {
    "repeated-dna-sequences": {
      "quesName": "Repeated DNA Sequences",
      "quesLink": "https://leetcode.com/problems/repeated-dna-sequences/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Sliding Window",
        "Rolling Hash",
        "Hash Function"
      ]
    }
  },
  {
    "best-time-to-buy-and-sell-stock-iv": {
      "quesName": "Best Time to Buy and Sell Stock IV",
      "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "rotate-array": {
      "quesName": "Rotate Array",
      "quesLink": "https://leetcode.com/problems/rotate-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Two Pointers"]
    }
  },
  {
    "reverse-bits": {
      "quesName": "Reverse Bits",
      "quesLink": "https://leetcode.com/problems/reverse-bits/",
      "specialTag": "Easy",
      "tags": ["Divide and Conquer", "Bit Manipulation"]
    }
  },
  {
    "number-of-1-bits": {
      "quesName": "Number of 1 Bits",
      "quesLink": "https://leetcode.com/problems/number-of-1-bits/",
      "specialTag": "Easy",
      "tags": ["Divide and Conquer", "Bit Manipulation"]
    }
  },
  {
    "word-frequency": {
      "quesName": "Word Frequency",
      "quesLink": "https://leetcode.com/problems/word-frequency/",
      "specialTag": "Medium",
      "tags": ["Shell"]
    }
  },
  {
    "valid-phone-numbers": {
      "quesName": "Valid Phone Numbers",
      "quesLink": "https://leetcode.com/problems/valid-phone-numbers/",
      "specialTag": "Easy",
      "tags": ["Shell"]
    }
  },
  {
    "transpose-file": {
      "quesName": "Transpose File",
      "quesLink": "https://leetcode.com/problems/transpose-file/",
      "specialTag": "Medium",
      "tags": ["Shell"]
    }
  },
  {
    "tenth-line": {
      "quesName": "Tenth Line",
      "quesLink": "https://leetcode.com/problems/tenth-line/",
      "specialTag": "Easy",
      "tags": ["Shell"]
    }
  },
  {
    "delete-duplicate-emails": {
      "quesName": "Delete Duplicate Emails",
      "quesLink": "https://leetcode.com/problems/delete-duplicate-emails/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "rising-temperature": {
      "quesName": "Rising Temperature",
      "quesLink": "https://leetcode.com/problems/rising-temperature/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "house-robber": {
      "quesName": "House Robber",
      "quesLink": "https://leetcode.com/problems/house-robber/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "binary-tree-right-side-view": {
      "quesName": "Binary Tree Right Side View",
      "quesLink": "https://leetcode.com/problems/binary-tree-right-side-view/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "number-of-islands": {
      "quesName": "Number of Islands",
      "quesLink": "https://leetcode.com/problems/number-of-islands/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "bitwise-and-of-numbers-range": {
      "quesName": "Bitwise AND of Numbers Range",
      "quesLink": "https://leetcode.com/problems/bitwise-and-of-numbers-range/",
      "specialTag": "Medium",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "happy-number": {
      "quesName": "Happy Number",
      "quesLink": "https://leetcode.com/problems/happy-number/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "Math", "Two Pointers"]
    }
  },
  {
    "remove-linked-list-elements": {
      "quesName": "Remove Linked List Elements",
      "quesLink": "https://leetcode.com/problems/remove-linked-list-elements/",
      "specialTag": "Easy",
      "tags": ["Linked List", "Recursion"]
    }
  },
  {
    "count-primes": {
      "quesName": "Count Primes",
      "quesLink": "https://leetcode.com/problems/count-primes/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Enumeration", "Number Theory"]
    }
  },
  {
    "isomorphic-strings": {
      "quesName": "Isomorphic Strings",
      "quesLink": "https://leetcode.com/problems/isomorphic-strings/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String"]
    }
  },
  {
    "reverse-linked-list": {
      "quesName": "Reverse Linked List",
      "quesLink": "https://leetcode.com/problems/reverse-linked-list/",
      "specialTag": "Easy",
      "tags": ["Linked List", "Recursion"]
    }
  },
  {
    "course-schedule": {
      "quesName": "Course Schedule",
      "quesLink": "https://leetcode.com/problems/course-schedule/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    }
  },
  {
    "implement-trie-prefix-tree": {
      "quesName": "Implement Trie (Prefix Tree)",
      "quesLink": "https://leetcode.com/problems/implement-trie-prefix-tree/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Design", "Trie"]
    }
  },
  {
    "minimum-size-subarray-sum": {
      "quesName": "Minimum Size Subarray Sum",
      "quesLink": "https://leetcode.com/problems/minimum-size-subarray-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"]
    }
  },
  {
    "course-schedule-ii": {
      "quesName": "Course Schedule II",
      "quesLink": "https://leetcode.com/problems/course-schedule-ii/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    }
  },
  {
    "design-add-and-search-words-data-structure": {
      "quesName": "Design Add and Search Words Data Structure",
      "quesLink": "https://leetcode.com/problems/design-add-and-search-words-data-structure/",
      "specialTag": "Medium",
      "tags": ["String", "Depth-First Search", "Design", "Trie"]
    }
  },
  {
    "word-search-ii": {
      "quesName": "Word Search II",
      "quesLink": "https://leetcode.com/problems/word-search-ii/",
      "specialTag": "Hard",
      "tags": ["Array", "String", "Backtracking", "Trie", "Matrix"]
    }
  },
  {
    "house-robber-ii": {
      "quesName": "House Robber II",
      "quesLink": "https://leetcode.com/problems/house-robber-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "shortest-palindrome": {
      "quesName": "Shortest Palindrome",
      "quesLink": "https://leetcode.com/problems/shortest-palindrome/",
      "specialTag": "Hard",
      "tags": ["String", "Rolling Hash", "String Matching", "Hash Function"]
    }
  },
  {
    "kth-largest-element-in-an-array": {
      "quesName": "Kth Largest Element in an Array",
      "quesLink": "https://leetcode.com/problems/kth-largest-element-in-an-array/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Quickselect"
      ]
    }
  },
  {
    "combination-sum-iii": {
      "quesName": "Combination Sum III",
      "quesLink": "https://leetcode.com/problems/combination-sum-iii/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking"]
    }
  },
  {
    "contains-duplicate": {
      "quesName": "Contains Duplicate",
      "quesLink": "https://leetcode.com/problems/contains-duplicate/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Sorting"]
    }
  },
  {
    "the-skyline-problem": {
      "quesName": "The Skyline Problem",
      "quesLink": "https://leetcode.com/problems/the-skyline-problem/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Line Sweep",
        "Heap (Priority Queue)",
        "Ordered Set"
      ]
    }
  },
  {
    "contains-duplicate-ii": {
      "quesName": "Contains Duplicate II",
      "quesLink": "https://leetcode.com/problems/contains-duplicate-ii/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Sliding Window"]
    }
  },
  {
    "contains-duplicate-iii": {
      "quesName": "Contains Duplicate III",
      "quesLink": "https://leetcode.com/problems/contains-duplicate-iii/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Sliding Window",
        "Sorting",
        "Bucket Sort",
        "Ordered Set"
      ]
    }
  },
  {
    "maximal-square": {
      "quesName": "Maximal Square",
      "quesLink": "https://leetcode.com/problems/maximal-square/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "count-complete-tree-nodes": {
      "quesName": "Count Complete Tree Nodes",
      "quesLink": "https://leetcode.com/problems/count-complete-tree-nodes/",
      "specialTag": "Easy",
      "tags": ["Binary Search", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "rectangle-area": {
      "quesName": "Rectangle Area",
      "quesLink": "https://leetcode.com/problems/rectangle-area/",
      "specialTag": "Medium",
      "tags": ["Math", "Geometry"]
    }
  },
  {
    "basic-calculator": {
      "quesName": "Basic Calculator",
      "quesLink": "https://leetcode.com/problems/basic-calculator/",
      "specialTag": "Hard",
      "tags": ["Math", "String", "Stack", "Recursion"]
    }
  },
  {
    "implement-stack-using-queues": {
      "quesName": "Implement Stack using Queues",
      "quesLink": "https://leetcode.com/problems/implement-stack-using-queues/",
      "specialTag": "Easy",
      "tags": ["Stack", "Design", "Queue"]
    }
  },
  {
    "invert-binary-tree": {
      "quesName": "Invert Binary Tree",
      "quesLink": "https://leetcode.com/problems/invert-binary-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "basic-calculator-ii": {
      "quesName": "Basic Calculator II",
      "quesLink": "https://leetcode.com/problems/basic-calculator-ii/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Stack"]
    }
  },
  {
    "summary-ranges": {
      "quesName": "Summary Ranges",
      "quesLink": "https://leetcode.com/problems/summary-ranges/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "majority-element-ii": {
      "quesName": "Majority Element II",
      "quesLink": "https://leetcode.com/problems/majority-element-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Sorting", "Counting"]
    }
  },
  {
    "kth-smallest-element-in-a-bst": {
      "quesName": "Kth Smallest Element in a BST",
      "quesLink": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "power-of-two": {
      "quesName": "Power of Two",
      "quesLink": "https://leetcode.com/problems/power-of-two/",
      "specialTag": "Easy",
      "tags": ["Math", "Bit Manipulation", "Recursion"]
    }
  },
  {
    "implement-queue-using-stacks": {
      "quesName": "Implement Queue using Stacks",
      "quesLink": "https://leetcode.com/problems/implement-queue-using-stacks/",
      "specialTag": "Easy",
      "tags": ["Stack", "Design", "Queue"]
    }
  },
  {
    "number-of-digit-one": {
      "quesName": "Number of Digit One",
      "quesLink": "https://leetcode.com/problems/number-of-digit-one/",
      "specialTag": "Hard",
      "tags": ["Math", "Dynamic Programming", "Recursion"]
    }
  },
  {
    "palindrome-linked-list": {
      "quesName": "Palindrome Linked List",
      "quesLink": "https://leetcode.com/problems/palindrome-linked-list/",
      "specialTag": "Easy",
      "tags": ["Linked List", "Two Pointers", "Stack", "Recursion"]
    }
  },
  {
    "lowest-common-ancestor-of-a-binary-search-tree": {
      "quesName": "Lowest Common Ancestor of a Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "lowest-common-ancestor-of-a-binary-tree": {
      "quesName": "Lowest Common Ancestor of a Binary Tree",
      "quesLink": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "delete-node-in-a-linked-list": {
      "quesName": "Delete Node in a Linked List",
      "quesLink": "https://leetcode.com/problems/delete-node-in-a-linked-list/",
      "specialTag": "Medium",
      "tags": ["Linked List"]
    }
  },
  {
    "product-of-array-except-self": {
      "quesName": "Product of Array Except Self",
      "quesLink": "https://leetcode.com/problems/product-of-array-except-self/",
      "specialTag": "Medium",
      "tags": ["Array", "Prefix Sum"]
    }
  },
  {
    "sliding-window-maximum": {
      "quesName": "Sliding Window Maximum",
      "quesLink": "https://leetcode.com/problems/sliding-window-maximum/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Monotonic Queue"
      ]
    }
  },
  {
    "search-a-2d-matrix-ii": {
      "quesName": "Search a 2D Matrix II",
      "quesLink": "https://leetcode.com/problems/search-a-2d-matrix-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Divide and Conquer", "Matrix"]
    }
  },
  {
    "different-ways-to-add-parentheses": {
      "quesName": "Different Ways to Add Parentheses",
      "quesLink": "https://leetcode.com/problems/different-ways-to-add-parentheses/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "String",
        "Dynamic Programming",
        "Recursion",
        "Memoization"
      ]
    }
  },
  {
    "valid-anagram": {
      "quesName": "Valid Anagram",
      "quesLink": "https://leetcode.com/problems/valid-anagram/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Sorting"]
    }
  },
  {
    "binary-tree-paths": {
      "quesName": "Binary Tree Paths",
      "quesLink": "https://leetcode.com/problems/binary-tree-paths/",
      "specialTag": "Easy",
      "tags": [
        "String",
        "Backtracking",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "add-digits": {
      "quesName": "Add Digits",
      "quesLink": "https://leetcode.com/problems/add-digits/",
      "specialTag": "Easy",
      "tags": ["Math", "Simulation", "Number Theory"]
    }
  },
  {
    "single-number-iii": {
      "quesName": "Single Number III",
      "quesLink": "https://leetcode.com/problems/single-number-iii/",
      "specialTag": "Medium",
      "tags": ["Array", "Bit Manipulation"]
    }
  },
  {
    "trips-and-users": {
      "quesName": "Trips and Users",
      "quesLink": "https://leetcode.com/problems/trips-and-users/",
      "specialTag": "Hard",
      "tags": ["Database"]
    }
  },
  {
    "ugly-number": {
      "quesName": "Ugly Number",
      "quesLink": "https://leetcode.com/problems/ugly-number/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "ugly-number-ii": {
      "quesName": "Ugly Number II",
      "quesLink": "https://leetcode.com/problems/ugly-number-ii/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "Math",
        "Dynamic Programming",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "missing-number": {
      "quesName": "Missing Number",
      "quesLink": "https://leetcode.com/problems/missing-number/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Hash Table",
        "Math",
        "Binary Search",
        "Bit Manipulation",
        "Sorting"
      ]
    }
  },
  {
    "integer-to-english-words": {
      "quesName": "Integer to English Words",
      "quesLink": "https://leetcode.com/problems/integer-to-english-words/",
      "specialTag": "Hard",
      "tags": ["Math", "String", "Recursion"]
    }
  },
  {
    "h-index": {
      "quesName": "H-Index",
      "quesLink": "https://leetcode.com/problems/h-index/",
      "specialTag": "Medium",
      "tags": ["Array", "Sorting", "Counting Sort"]
    }
  },
  {
    "h-index-ii": {
      "quesName": "H-Index II",
      "quesLink": "https://leetcode.com/problems/h-index-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "first-bad-version": {
      "quesName": "First Bad Version",
      "quesLink": "https://leetcode.com/problems/first-bad-version/",
      "specialTag": "Easy",
      "tags": ["Binary Search", "Interactive"]
    }
  },
  {
    "perfect-squares": {
      "quesName": "Perfect Squares",
      "quesLink": "https://leetcode.com/problems/perfect-squares/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming", "Breadth-First Search"]
    }
  },
  {
    "expression-add-operators": {
      "quesName": "Expression Add Operators",
      "quesLink": "https://leetcode.com/problems/expression-add-operators/",
      "specialTag": "Hard",
      "tags": ["Math", "String", "Backtracking"]
    }
  },
  {
    "move-zeroes": {
      "quesName": "Move Zeroes",
      "quesLink": "https://leetcode.com/problems/move-zeroes/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "peeking-iterator": {
      "quesName": "Peeking Iterator",
      "quesLink": "https://leetcode.com/problems/peeking-iterator/",
      "specialTag": "Medium",
      "tags": ["Array", "Design", "Iterator"]
    }
  },
  {
    "find-the-duplicate-number": {
      "quesName": "Find the Duplicate Number",
      "quesLink": "https://leetcode.com/problems/find-the-duplicate-number/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Binary Search", "Bit Manipulation"]
    }
  },
  {
    "game-of-life": {
      "quesName": "Game of Life",
      "quesLink": "https://leetcode.com/problems/game-of-life/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "word-pattern": {
      "quesName": "Word Pattern",
      "quesLink": "https://leetcode.com/problems/word-pattern/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String"]
    }
  },
  {
    "nim-game": {
      "quesName": "Nim Game",
      "quesLink": "https://leetcode.com/problems/nim-game/",
      "specialTag": "Easy",
      "tags": ["Math", "Brainteaser", "Game Theory"]
    }
  },
  {
    "find-median-from-data-stream": {
      "quesName": "Find Median from Data Stream",
      "quesLink": "https://leetcode.com/problems/find-median-from-data-stream/",
      "specialTag": "Hard",
      "tags": [
        "Two Pointers",
        "Design",
        "Sorting",
        "Heap (Priority Queue)",
        "Data Stream"
      ]
    }
  },
  {
    "serialize-and-deserialize-binary-tree": {
      "quesName": "Serialize and Deserialize Binary Tree",
      "quesLink": "https://leetcode.com/problems/serialize-and-deserialize-binary-tree/",
      "specialTag": "Hard",
      "tags": [
        "String",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design",
        "Binary Tree"
      ]
    }
  },
  {
    "bulls-and-cows": {
      "quesName": "Bulls and Cows",
      "quesLink": "https://leetcode.com/problems/bulls-and-cows/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Counting"]
    }
  },
  {
    "longest-increasing-subsequence": {
      "quesName": "Longest Increasing Subsequence",
      "quesLink": "https://leetcode.com/problems/longest-increasing-subsequence/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Dynamic Programming"]
    }
  },
  {
    "remove-invalid-parentheses": {
      "quesName": "Remove Invalid Parentheses",
      "quesLink": "https://leetcode.com/problems/remove-invalid-parentheses/",
      "specialTag": "Hard",
      "tags": ["String", "Backtracking", "Breadth-First Search"]
    }
  },
  {
    "range-sum-query-immutable": {
      "quesName": "Range Sum Query - Immutable",
      "quesLink": "https://leetcode.com/problems/range-sum-query-immutable/",
      "specialTag": "Easy",
      "tags": ["Array", "Design", "Prefix Sum"]
    }
  },
  {
    "range-sum-query-2d-immutable": {
      "quesName": "Range Sum Query 2D - Immutable",
      "quesLink": "https://leetcode.com/problems/range-sum-query-2d-immutable/",
      "specialTag": "Medium",
      "tags": ["Array", "Design", "Matrix", "Prefix Sum"]
    }
  },
  {
    "additive-number": {
      "quesName": "Additive Number",
      "quesLink": "https://leetcode.com/problems/additive-number/",
      "specialTag": "Medium",
      "tags": ["String", "Backtracking"]
    }
  },
  {
    "range-sum-query-mutable": {
      "quesName": "Range Sum Query - Mutable",
      "quesLink": "https://leetcode.com/problems/range-sum-query-mutable/",
      "specialTag": "Medium",
      "tags": ["Array", "Design", "Binary Indexed Tree", "Segment Tree"]
    }
  },
  {
    "best-time-to-buy-and-sell-stock-with-cooldown": {
      "quesName": "Best Time to Buy and Sell Stock with Cooldown",
      "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "minimum-height-trees": {
      "quesName": "Minimum Height Trees",
      "quesLink": "https://leetcode.com/problems/minimum-height-trees/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    }
  },
  {
    "burst-balloons": {
      "quesName": "Burst Balloons",
      "quesLink": "https://leetcode.com/problems/burst-balloons/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "super-ugly-number": {
      "quesName": "Super Ugly Number",
      "quesLink": "https://leetcode.com/problems/super-ugly-number/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Dynamic Programming"]
    }
  },
  {
    "count-of-smaller-numbers-after-self": {
      "quesName": "Count of Smaller Numbers After Self",
      "quesLink": "https://leetcode.com/problems/count-of-smaller-numbers-after-self/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    }
  },
  {
    "remove-duplicate-letters": {
      "quesName": "Remove Duplicate Letters",
      "quesLink": "https://leetcode.com/problems/remove-duplicate-letters/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Greedy", "Monotonic Stack"]
    }
  },
  {
    "maximum-product-of-word-lengths": {
      "quesName": "Maximum Product of Word Lengths",
      "quesLink": "https://leetcode.com/problems/maximum-product-of-word-lengths/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Bit Manipulation"]
    }
  },
  {
    "bulb-switcher": {
      "quesName": "Bulb Switcher",
      "quesLink": "https://leetcode.com/problems/bulb-switcher/",
      "specialTag": "Medium",
      "tags": ["Math", "Brainteaser"]
    }
  },
  {
    "create-maximum-number": {
      "quesName": "Create Maximum Number",
      "quesLink": "https://leetcode.com/problems/create-maximum-number/",
      "specialTag": "Hard",
      "tags": ["Stack", "Greedy", "Monotonic Stack"]
    }
  },
  {
    "coin-change": {
      "quesName": "Coin Change",
      "quesLink": "https://leetcode.com/problems/coin-change/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Breadth-First Search"]
    }
  },
  {
    "wiggle-sort-ii": {
      "quesName": "Wiggle Sort II",
      "quesLink": "https://leetcode.com/problems/wiggle-sort-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Divide and Conquer", "Sorting", "Quickselect"]
    }
  },
  {
    "power-of-three": {
      "quesName": "Power of Three",
      "quesLink": "https://leetcode.com/problems/power-of-three/",
      "specialTag": "Easy",
      "tags": ["Math", "Recursion"]
    }
  },
  {
    "count-of-range-sum": {
      "quesName": "Count of Range Sum",
      "quesLink": "https://leetcode.com/problems/count-of-range-sum/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    }
  },
  {
    "odd-even-linked-list": {
      "quesName": "Odd Even Linked List",
      "quesLink": "https://leetcode.com/problems/odd-even-linked-list/",
      "specialTag": "Medium",
      "tags": ["Linked List"]
    }
  },
  {
    "longest-increasing-path-in-a-matrix": {
      "quesName": "Longest Increasing Path in a Matrix",
      "quesLink": "https://leetcode.com/problems/longest-increasing-path-in-a-matrix/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Matrix"
      ]
    }
  },
  {
    "patching-array": {
      "quesName": "Patching Array",
      "quesLink": "https://leetcode.com/problems/patching-array/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "verify-preorder-serialization-of-a-binary-tree": {
      "quesName": "Verify Preorder Serialization of a Binary Tree",
      "quesLink": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Tree", "Binary Tree"]
    }
  },
  {
    "reconstruct-itinerary": {
      "quesName": "Reconstruct Itinerary",
      "quesLink": "https://leetcode.com/problems/reconstruct-itinerary/",
      "specialTag": "Hard",
      "tags": ["Depth-First Search", "Graph", "Eulerian Circuit"]
    }
  },
  {
    "increasing-triplet-subsequence": {
      "quesName": "Increasing Triplet Subsequence",
      "quesLink": "https://leetcode.com/problems/increasing-triplet-subsequence/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "self-crossing": {
      "quesName": "Self Crossing",
      "quesLink": "https://leetcode.com/problems/self-crossing/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "palindrome-pairs": {
      "quesName": "Palindrome Pairs",
      "quesLink": "https://leetcode.com/problems/palindrome-pairs/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "String", "Trie"]
    }
  },
  {
    "house-robber-iii": {
      "quesName": "House Robber III",
      "quesLink": "https://leetcode.com/problems/house-robber-iii/",
      "specialTag": "Medium",
      "tags": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "counting-bits": {
      "quesName": "Counting Bits",
      "quesLink": "https://leetcode.com/problems/counting-bits/",
      "specialTag": "Easy",
      "tags": ["Dynamic Programming", "Bit Manipulation"]
    }
  },
  {
    "flatten-nested-list-iterator": {
      "quesName": "Flatten Nested List Iterator",
      "quesLink": "https://leetcode.com/problems/flatten-nested-list-iterator/",
      "specialTag": "Medium",
      "tags": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Design",
        "Queue",
        "Iterator"
      ]
    }
  },
  {
    "power-of-four": {
      "quesName": "Power of Four",
      "quesLink": "https://leetcode.com/problems/power-of-four/",
      "specialTag": "Easy",
      "tags": ["Math", "Bit Manipulation", "Recursion"]
    }
  },
  {
    "integer-break": {
      "quesName": "Integer Break",
      "quesLink": "https://leetcode.com/problems/integer-break/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming"]
    }
  },
  {
    "reverse-string": {
      "quesName": "Reverse String",
      "quesLink": "https://leetcode.com/problems/reverse-string/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "reverse-vowels-of-a-string": {
      "quesName": "Reverse Vowels of a String",
      "quesLink": "https://leetcode.com/problems/reverse-vowels-of-a-string/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "top-k-frequent-elements": {
      "quesName": "Top K Frequent Elements",
      "quesLink": "https://leetcode.com/problems/top-k-frequent-elements/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Bucket Sort",
        "Counting",
        "Quickselect"
      ]
    }
  },
  {
    "intersection-of-two-arrays": {
      "quesName": "Intersection of Two Arrays",
      "quesLink": "https://leetcode.com/problems/intersection-of-two-arrays/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    }
  },
  {
    "intersection-of-two-arrays-ii": {
      "quesName": "Intersection of Two Arrays II",
      "quesLink": "https://leetcode.com/problems/intersection-of-two-arrays-ii/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    }
  },
  {
    "data-stream-as-disjoint-intervals": {
      "quesName": "Data Stream as Disjoint Intervals",
      "quesLink": "https://leetcode.com/problems/data-stream-as-disjoint-intervals/",
      "specialTag": "Hard",
      "tags": ["Binary Search", "Design", "Ordered Set"]
    }
  },
  {
    "russian-doll-envelopes": {
      "quesName": "Russian Doll Envelopes",
      "quesLink": "https://leetcode.com/problems/russian-doll-envelopes/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"]
    }
  },
  {
    "design-twitter": {
      "quesName": "Design Twitter",
      "quesLink": "https://leetcode.com/problems/design-twitter/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Linked List", "Design", "Heap (Priority Queue)"]
    }
  },
  {
    "count-numbers-with-unique-digits": {
      "quesName": "Count Numbers with Unique Digits",
      "quesLink": "https://leetcode.com/problems/count-numbers-with-unique-digits/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming", "Backtracking"]
    }
  },
  {
    "max-sum-of-rectangle-no-larger-than-k": {
      "quesName": "Max Sum of Rectangle No Larger Than K",
      "quesLink": "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum", "Ordered Set"]
    }
  },
  {
    "water-and-jug-problem": {
      "quesName": "Water and Jug Problem",
      "quesLink": "https://leetcode.com/problems/water-and-jug-problem/",
      "specialTag": "Medium",
      "tags": ["Math", "Depth-First Search", "Breadth-First Search"]
    }
  },
  {
    "valid-perfect-square": {
      "quesName": "Valid Perfect Square",
      "quesLink": "https://leetcode.com/problems/valid-perfect-square/",
      "specialTag": "Easy",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "largest-divisible-subset": {
      "quesName": "Largest Divisible Subset",
      "quesLink": "https://leetcode.com/problems/largest-divisible-subset/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Dynamic Programming", "Sorting"]
    }
  },
  {
    "sum-of-two-integers": {
      "quesName": "Sum of Two Integers",
      "quesLink": "https://leetcode.com/problems/sum-of-two-integers/",
      "specialTag": "Medium",
      "tags": ["Math", "Bit Manipulation"]
    }
  },
  {
    "super-pow": {
      "quesName": "Super Pow",
      "quesLink": "https://leetcode.com/problems/super-pow/",
      "specialTag": "Medium",
      "tags": ["Math", "Divide and Conquer"]
    }
  },
  {
    "find-k-pairs-with-smallest-sums": {
      "quesName": "Find K Pairs with Smallest Sums",
      "quesLink": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/",
      "specialTag": "Medium",
      "tags": ["Array", "Heap (Priority Queue)"]
    }
  },
  {
    "guess-number-higher-or-lower": {
      "quesName": "Guess Number Higher or Lower",
      "quesLink": "https://leetcode.com/problems/guess-number-higher-or-lower/",
      "specialTag": "Easy",
      "tags": ["Binary Search", "Interactive"]
    }
  },
  {
    "guess-number-higher-or-lower-ii": {
      "quesName": "Guess Number Higher or Lower II",
      "quesLink": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming", "Game Theory"]
    }
  },
  {
    "wiggle-subsequence": {
      "quesName": "Wiggle Subsequence",
      "quesLink": "https://leetcode.com/problems/wiggle-subsequence/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "combination-sum-iv": {
      "quesName": "Combination Sum IV",
      "quesLink": "https://leetcode.com/problems/combination-sum-iv/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "kth-smallest-element-in-a-sorted-matrix": {
      "quesName": "Kth Smallest Element in a Sorted Matrix",
      "quesLink": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Binary Search",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    }
  },
  {
    "insert-delete-getrandom-o1": {
      "quesName": "Insert Delete GetRandom O(1)",
      "quesLink": "https://leetcode.com/problems/insert-delete-getrandom-o1/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"]
    }
  },
  {
    "insert-delete-getrandom-o1-duplicates-allowed": {
      "quesName": "Insert Delete GetRandom O(1) - Duplicates allowed",
      "quesLink": "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Math", "Design", "Randomized"]
    }
  },
  {
    "linked-list-random-node": {
      "quesName": "Linked List Random Node",
      "quesLink": "https://leetcode.com/problems/linked-list-random-node/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Math", "Reservoir Sampling", "Randomized"]
    }
  },
  {
    "ransom-note": {
      "quesName": "Ransom Note",
      "quesLink": "https://leetcode.com/problems/ransom-note/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Counting"]
    }
  },
  {
    "shuffle-an-array": {
      "quesName": "Shuffle an Array",
      "quesLink": "https://leetcode.com/problems/shuffle-an-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Randomized"]
    }
  },
  {
    "mini-parser": {
      "quesName": "Mini Parser",
      "quesLink": "https://leetcode.com/problems/mini-parser/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Depth-First Search"]
    }
  },
  {
    "lexicographical-numbers": {
      "quesName": "Lexicographical Numbers",
      "quesLink": "https://leetcode.com/problems/lexicographical-numbers/",
      "specialTag": "Medium",
      "tags": ["Depth-First Search", "Trie"]
    }
  },
  {
    "first-unique-character-in-a-string": {
      "quesName": "First Unique Character in a String",
      "quesLink": "https://leetcode.com/problems/first-unique-character-in-a-string/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Queue", "Counting"]
    }
  },
  {
    "longest-absolute-file-path": {
      "quesName": "Longest Absolute File Path",
      "quesLink": "https://leetcode.com/problems/longest-absolute-file-path/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Depth-First Search"]
    }
  },
  {
    "find-the-difference": {
      "quesName": "Find the Difference",
      "quesLink": "https://leetcode.com/problems/find-the-difference/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Bit Manipulation", "Sorting"]
    }
  },
  {
    "elimination-game": {
      "quesName": "Elimination Game",
      "quesLink": "https://leetcode.com/problems/elimination-game/",
      "specialTag": "Medium",
      "tags": ["Math", "Recursion"]
    }
  },
  {
    "perfect-rectangle": {
      "quesName": "Perfect Rectangle",
      "quesLink": "https://leetcode.com/problems/perfect-rectangle/",
      "specialTag": "Hard",
      "tags": ["Array", "Line Sweep"]
    }
  },
  {
    "is-subsequence": {
      "quesName": "Is Subsequence",
      "quesLink": "https://leetcode.com/problems/is-subsequence/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String", "Dynamic Programming"]
    }
  },
  {
    "utf-8-validation": {
      "quesName": "UTF-8 Validation",
      "quesLink": "https://leetcode.com/problems/utf-8-validation/",
      "specialTag": "Medium",
      "tags": ["Array", "Bit Manipulation"]
    }
  },
  {
    "decode-string": {
      "quesName": "Decode String",
      "quesLink": "https://leetcode.com/problems/decode-string/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Recursion"]
    }
  },
  {
    "longest-substring-with-at-least-k-repeating-characters": {
      "quesName": "Longest Substring with At Least K Repeating Characters",
      "quesLink": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Divide and Conquer", "Sliding Window"]
    }
  },
  {
    "rotate-function": {
      "quesName": "Rotate Function",
      "quesLink": "https://leetcode.com/problems/rotate-function/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Dynamic Programming"]
    }
  },
  {
    "integer-replacement": {
      "quesName": "Integer Replacement",
      "quesLink": "https://leetcode.com/problems/integer-replacement/",
      "specialTag": "Medium",
      "tags": [
        "Dynamic Programming",
        "Greedy",
        "Bit Manipulation",
        "Memoization"
      ]
    }
  },
  {
    "random-pick-index": {
      "quesName": "Random Pick Index",
      "quesLink": "https://leetcode.com/problems/random-pick-index/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math", "Reservoir Sampling", "Randomized"]
    }
  },
  {
    "evaluate-division": {
      "quesName": "Evaluate Division",
      "quesLink": "https://leetcode.com/problems/evaluate-division/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph",
        "Shortest Path"
      ]
    }
  },
  {
    "nth-digit": {
      "quesName": "Nth Digit",
      "quesLink": "https://leetcode.com/problems/nth-digit/",
      "specialTag": "Medium",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "binary-watch": {
      "quesName": "Binary Watch",
      "quesLink": "https://leetcode.com/problems/binary-watch/",
      "specialTag": "Easy",
      "tags": ["Backtracking", "Bit Manipulation"]
    }
  },
  {
    "remove-k-digits": {
      "quesName": "Remove K Digits",
      "quesLink": "https://leetcode.com/problems/remove-k-digits/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Greedy", "Monotonic Stack"]
    }
  },
  {
    "frog-jump": {
      "quesName": "Frog Jump",
      "quesLink": "https://leetcode.com/problems/frog-jump/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "sum-of-left-leaves": {
      "quesName": "Sum of Left Leaves",
      "quesLink": "https://leetcode.com/problems/sum-of-left-leaves/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "convert-a-number-to-hexadecimal": {
      "quesName": "Convert a Number to Hexadecimal",
      "quesLink": "https://leetcode.com/problems/convert-a-number-to-hexadecimal/",
      "specialTag": "Easy",
      "tags": ["Math", "Bit Manipulation"]
    }
  },
  {
    "queue-reconstruction-by-height": {
      "quesName": "Queue Reconstruction by Height",
      "quesLink": "https://leetcode.com/problems/queue-reconstruction-by-height/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Greedy",
        "Binary Indexed Tree",
        "Segment Tree",
        "Sorting"
      ]
    }
  },
  {
    "trapping-rain-water-ii": {
      "quesName": "Trapping Rain Water II",
      "quesLink": "https://leetcode.com/problems/trapping-rain-water-ii/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Breadth-First Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    }
  },
  {
    "longest-palindrome": {
      "quesName": "Longest Palindrome",
      "quesLink": "https://leetcode.com/problems/longest-palindrome/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Greedy"]
    }
  },
  {
    "split-array-largest-sum": {
      "quesName": "Split Array Largest Sum",
      "quesLink": "https://leetcode.com/problems/split-array-largest-sum/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Greedy",
        "Prefix Sum"
      ]
    }
  },
  {
    "fizz-buzz": {
      "quesName": "Fizz Buzz",
      "quesLink": "https://leetcode.com/problems/fizz-buzz/",
      "specialTag": "Easy",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "arithmetic-slices": {
      "quesName": "Arithmetic Slices",
      "quesLink": "https://leetcode.com/problems/arithmetic-slices/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "third-maximum-number": {
      "quesName": "Third Maximum Number",
      "quesLink": "https://leetcode.com/problems/third-maximum-number/",
      "specialTag": "Easy",
      "tags": ["Array", "Sorting"]
    }
  },
  {
    "add-strings": {
      "quesName": "Add Strings",
      "quesLink": "https://leetcode.com/problems/add-strings/",
      "specialTag": "Easy",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "partition-equal-subset-sum": {
      "quesName": "Partition Equal Subset Sum",
      "quesLink": "https://leetcode.com/problems/partition-equal-subset-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "pacific-atlantic-water-flow": {
      "quesName": "Pacific Atlantic Water Flow",
      "quesLink": "https://leetcode.com/problems/pacific-atlantic-water-flow/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "battleships-in-a-board": {
      "quesName": "Battleships in a Board",
      "quesLink": "https://leetcode.com/problems/battleships-in-a-board/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Matrix"]
    }
  },
  {
    "strong-password-checker": {
      "quesName": "Strong Password Checker",
      "quesLink": "https://leetcode.com/problems/strong-password-checker/",
      "specialTag": "Hard",
      "tags": ["String", "Greedy", "Heap (Priority Queue)"]
    }
  },
  {
    "maximum-xor-of-two-numbers-in-an-array": {
      "quesName": "Maximum XOR of Two Numbers in an Array",
      "quesLink": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Bit Manipulation", "Trie"]
    }
  },
  {
    "reconstruct-original-digits-from-english": {
      "quesName": "Reconstruct Original Digits from English",
      "quesLink": "https://leetcode.com/problems/reconstruct-original-digits-from-english/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math", "String"]
    }
  },
  {
    "longest-repeating-character-replacement": {
      "quesName": "Longest Repeating Character Replacement",
      "quesLink": "https://leetcode.com/problems/longest-repeating-character-replacement/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "construct-quad-tree": {
      "quesName": "Construct Quad Tree",
      "quesLink": "https://leetcode.com/problems/construct-quad-tree/",
      "specialTag": "Medium",
      "tags": ["Array", "Divide and Conquer", "Tree", "Matrix"]
    }
  },
  {
    "n-ary-tree-level-order-traversal": {
      "quesName": "N-ary Tree Level Order Traversal",
      "quesLink": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/",
      "specialTag": "Medium",
      "tags": ["Tree", "Breadth-First Search"]
    }
  },
  {
    "flatten-a-multilevel-doubly-linked-list": {
      "quesName": "Flatten a Multilevel Doubly Linked List",
      "quesLink": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Depth-First Search", "Doubly-Linked List"]
    }
  },
  {
    "all-oone-data-structure": {
      "quesName": "All O`one Data Structure",
      "quesLink": "https://leetcode.com/problems/all-oone-data-structure/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"]
    }
  },
  {
    "minimum-genetic-mutation": {
      "quesName": "Minimum Genetic Mutation",
      "quesLink": "https://leetcode.com/problems/minimum-genetic-mutation/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Breadth-First Search"]
    }
  },
  {
    "number-of-segments-in-a-string": {
      "quesName": "Number of Segments in a String",
      "quesLink": "https://leetcode.com/problems/number-of-segments-in-a-string/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "non-overlapping-intervals": {
      "quesName": "Non-overlapping Intervals",
      "quesLink": "https://leetcode.com/problems/non-overlapping-intervals/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"]
    }
  },
  {
    "find-right-interval": {
      "quesName": "Find Right Interval",
      "quesLink": "https://leetcode.com/problems/find-right-interval/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Sorting"]
    }
  },
  {
    "path-sum-iii": {
      "quesName": "Path Sum III",
      "quesLink": "https://leetcode.com/problems/path-sum-iii/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "find-all-anagrams-in-a-string": {
      "quesName": "Find All Anagrams in a String",
      "quesLink": "https://leetcode.com/problems/find-all-anagrams-in-a-string/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "k-th-smallest-in-lexicographical-order": {
      "quesName": "K-th Smallest in Lexicographical Order",
      "quesLink": "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order/",
      "specialTag": "Hard",
      "tags": ["Trie"]
    }
  },
  {
    "arranging-coins": {
      "quesName": "Arranging Coins",
      "quesLink": "https://leetcode.com/problems/arranging-coins/",
      "specialTag": "Easy",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "find-all-duplicates-in-an-array": {
      "quesName": "Find All Duplicates in an Array",
      "quesLink": "https://leetcode.com/problems/find-all-duplicates-in-an-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "string-compression": {
      "quesName": "String Compression",
      "quesLink": "https://leetcode.com/problems/string-compression/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "add-two-numbers-ii": {
      "quesName": "Add Two Numbers II",
      "quesLink": "https://leetcode.com/problems/add-two-numbers-ii/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Math", "Stack"]
    }
  },
  {
    "arithmetic-slices-ii-subsequence": {
      "quesName": "Arithmetic Slices II - Subsequence",
      "quesLink": "https://leetcode.com/problems/arithmetic-slices-ii-subsequence/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "number-of-boomerangs": {
      "quesName": "Number of Boomerangs",
      "quesLink": "https://leetcode.com/problems/number-of-boomerangs/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math"]
    }
  },
  {
    "find-all-numbers-disappeared-in-an-array": {
      "quesName": "Find All Numbers Disappeared in an Array",
      "quesLink": "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "serialize-and-deserialize-bst": {
      "quesName": "Serialize and Deserialize BST",
      "quesLink": "https://leetcode.com/problems/serialize-and-deserialize-bst/",
      "specialTag": "Medium",
      "tags": [
        "String",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "delete-node-in-a-bst": {
      "quesName": "Delete Node in a BST",
      "quesLink": "https://leetcode.com/problems/delete-node-in-a-bst/",
      "specialTag": "Medium",
      "tags": ["Tree", "Binary Search Tree", "Binary Tree"]
    }
  },
  {
    "sort-characters-by-frequency": {
      "quesName": "Sort Characters By Frequency",
      "quesLink": "https://leetcode.com/problems/sort-characters-by-frequency/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "String",
        "Sorting",
        "Heap (Priority Queue)",
        "Bucket Sort",
        "Counting"
      ]
    }
  },
  {
    "minimum-number-of-arrows-to-burst-balloons": {
      "quesName": "Minimum Number of Arrows to Burst Balloons",
      "quesLink": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Sorting"]
    }
  },
  {
    "minimum-moves-to-equal-array-elements": {
      "quesName": "Minimum Moves to Equal Array Elements",
      "quesLink": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "4sum-ii": {
      "quesName": "4Sum II",
      "quesLink": "https://leetcode.com/problems/4sum-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "assign-cookies": {
      "quesName": "Assign Cookies",
      "quesLink": "https://leetcode.com/problems/assign-cookies/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Greedy", "Sorting"]
    }
  },
  {
    "132-pattern": {
      "quesName": "132 Pattern",
      "quesLink": "https://leetcode.com/problems/132-pattern/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Binary Search",
        "Stack",
        "Monotonic Stack",
        "Ordered Set"
      ]
    }
  },
  {
    "circular-array-loop": {
      "quesName": "Circular Array Loop",
      "quesLink": "https://leetcode.com/problems/circular-array-loop/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Two Pointers"]
    }
  },
  {
    "poor-pigs": {
      "quesName": "Poor Pigs",
      "quesLink": "https://leetcode.com/problems/poor-pigs/",
      "specialTag": "Hard",
      "tags": ["Math", "Dynamic Programming", "Combinatorics"]
    }
  },
  {
    "repeated-substring-pattern": {
      "quesName": "Repeated Substring Pattern",
      "quesLink": "https://leetcode.com/problems/repeated-substring-pattern/",
      "specialTag": "Easy",
      "tags": ["String", "String Matching"]
    }
  },
  {
    "lfu-cache": {
      "quesName": "LFU Cache",
      "quesLink": "https://leetcode.com/problems/lfu-cache/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "Linked List", "Design", "Doubly-Linked List"]
    }
  },
  {
    "hamming-distance": {
      "quesName": "Hamming Distance",
      "quesLink": "https://leetcode.com/problems/hamming-distance/",
      "specialTag": "Easy",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "minimum-moves-to-equal-array-elements-ii": {
      "quesName": "Minimum Moves to Equal Array Elements II",
      "quesLink": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Sorting"]
    }
  },
  {
    "island-perimeter": {
      "quesName": "Island Perimeter",
      "quesLink": "https://leetcode.com/problems/island-perimeter/",
      "specialTag": "Easy",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "can-i-win": {
      "quesName": "Can I Win",
      "quesLink": "https://leetcode.com/problems/can-i-win/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Memoization",
        "Game Theory",
        "Bitmask"
      ]
    }
  },
  {
    "count-the-repetitions": {
      "quesName": "Count The Repetitions",
      "quesLink": "https://leetcode.com/problems/count-the-repetitions/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "unique-substrings-in-wraparound-string": {
      "quesName": "Unique Substrings in Wraparound String",
      "quesLink": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "validate-ip-address": {
      "quesName": "Validate IP Address",
      "quesLink": "https://leetcode.com/problems/validate-ip-address/",
      "specialTag": "Medium",
      "tags": ["String"]
    }
  },
  {
    "implement-rand10-using-rand7": {
      "quesName": "Implement Rand10() Using Rand7()",
      "quesLink": "https://leetcode.com/problems/implement-rand10-using-rand7/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "Rejection Sampling",
        "Randomized",
        "Probability and Statistics"
      ]
    }
  },
  {
    "concatenated-words": {
      "quesName": "Concatenated Words",
      "quesLink": "https://leetcode.com/problems/concatenated-words/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "String",
        "Dynamic Programming",
        "Depth-First Search",
        "Trie"
      ]
    }
  },
  {
    "matchsticks-to-square": {
      "quesName": "Matchsticks to Square",
      "quesLink": "https://leetcode.com/problems/matchsticks-to-square/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "ones-and-zeroes": {
      "quesName": "Ones and Zeroes",
      "quesLink": "https://leetcode.com/problems/ones-and-zeroes/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Dynamic Programming"]
    }
  },
  {
    "heaters": {
      "quesName": "Heaters",
      "quesLink": "https://leetcode.com/problems/heaters/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"]
    }
  },
  {
    "number-complement": {
      "quesName": "Number Complement",
      "quesLink": "https://leetcode.com/problems/number-complement/",
      "specialTag": "Easy",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "total-hamming-distance": {
      "quesName": "Total Hamming Distance",
      "quesLink": "https://leetcode.com/problems/total-hamming-distance/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Bit Manipulation"]
    }
  },
  {
    "generate-random-point-in-a-circle": {
      "quesName": "Generate Random Point in a Circle",
      "quesLink": "https://leetcode.com/problems/generate-random-point-in-a-circle/",
      "specialTag": "Medium",
      "tags": ["Math", "Geometry", "Rejection Sampling", "Randomized"]
    }
  },
  {
    "largest-palindrome-product": {
      "quesName": "Largest Palindrome Product",
      "quesLink": "https://leetcode.com/problems/largest-palindrome-product/",
      "specialTag": "Hard",
      "tags": ["Math"]
    }
  },
  {
    "sliding-window-median": {
      "quesName": "Sliding Window Median",
      "quesLink": "https://leetcode.com/problems/sliding-window-median/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Sliding Window", "Heap (Priority Queue)"]
    }
  },
  {
    "magical-string": {
      "quesName": "Magical String",
      "quesLink": "https://leetcode.com/problems/magical-string/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "license-key-formatting": {
      "quesName": "License Key Formatting",
      "quesLink": "https://leetcode.com/problems/license-key-formatting/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "smallest-good-base": {
      "quesName": "Smallest Good Base",
      "quesLink": "https://leetcode.com/problems/smallest-good-base/",
      "specialTag": "Hard",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "max-consecutive-ones": {
      "quesName": "Max Consecutive Ones",
      "quesLink": "https://leetcode.com/problems/max-consecutive-ones/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "predict-the-winner": {
      "quesName": "Predict the Winner",
      "quesLink": "https://leetcode.com/problems/predict-the-winner/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Recursion",
        "Game Theory"
      ]
    }
  },
  {
    "zuma-game": {
      "quesName": "Zuma Game",
      "quesLink": "https://leetcode.com/problems/zuma-game/",
      "specialTag": "Hard",
      "tags": [
        "String",
        "Dynamic Programming",
        "Stack",
        "Breadth-First Search",
        "Memoization"
      ]
    }
  },
  {
    "non-decreasing-subsequences": {
      "quesName": "Non-decreasing Subsequences",
      "quesLink": "https://leetcode.com/problems/non-decreasing-subsequences/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "construct-the-rectangle": {
      "quesName": "Construct the Rectangle",
      "quesLink": "https://leetcode.com/problems/construct-the-rectangle/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "reverse-pairs": {
      "quesName": "Reverse Pairs",
      "quesLink": "https://leetcode.com/problems/reverse-pairs/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Divide and Conquer",
        "Binary Indexed Tree",
        "Segment Tree",
        "Merge Sort",
        "Ordered Set"
      ]
    }
  },
  {
    "target-sum": {
      "quesName": "Target Sum",
      "quesLink": "https://leetcode.com/problems/target-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Backtracking"]
    }
  },
  {
    "teemo-attacking": {
      "quesName": "Teemo Attacking",
      "quesLink": "https://leetcode.com/problems/teemo-attacking/",
      "specialTag": "Easy",
      "tags": ["Array", "Simulation"]
    }
  },
  {
    "next-greater-element-i": {
      "quesName": "Next Greater Element I",
      "quesLink": "https://leetcode.com/problems/next-greater-element-i/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Stack", "Monotonic Stack"]
    }
  },
  {
    "random-point-in-non-overlapping-rectangles": {
      "quesName": "Random Point in Non-overlapping Rectangles",
      "quesLink": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Math",
        "Binary Search",
        "Reservoir Sampling",
        "Prefix Sum",
        "Ordered Set",
        "Randomized"
      ]
    }
  },
  {
    "diagonal-traverse": {
      "quesName": "Diagonal Traverse",
      "quesLink": "https://leetcode.com/problems/diagonal-traverse/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "keyboard-row": {
      "quesName": "Keyboard Row",
      "quesLink": "https://leetcode.com/problems/keyboard-row/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "find-mode-in-binary-search-tree": {
      "quesName": "Find Mode in Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/find-mode-in-binary-search-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "ipo": {
      "quesName": "IPO",
      "quesLink": "https://leetcode.com/problems/ipo/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "next-greater-element-ii": {
      "quesName": "Next Greater Element II",
      "quesLink": "https://leetcode.com/problems/next-greater-element-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Monotonic Stack"]
    }
  },
  {
    "base-7": {
      "quesName": "Base 7",
      "quesLink": "https://leetcode.com/problems/base-7/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "relative-ranks": {
      "quesName": "Relative Ranks",
      "quesLink": "https://leetcode.com/problems/relative-ranks/",
      "specialTag": "Easy",
      "tags": ["Array", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "perfect-number": {
      "quesName": "Perfect Number",
      "quesLink": "https://leetcode.com/problems/perfect-number/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "most-frequent-subtree-sum": {
      "quesName": "Most Frequent Subtree Sum",
      "quesLink": "https://leetcode.com/problems/most-frequent-subtree-sum/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "fibonacci-number": {
      "quesName": "Fibonacci Number",
      "quesLink": "https://leetcode.com/problems/fibonacci-number/",
      "specialTag": "Easy",
      "tags": ["Math", "Dynamic Programming", "Recursion", "Memoization"]
    }
  },
  {
    "game-play-analysis-i": {
      "quesName": "Game Play Analysis I",
      "quesLink": "https://leetcode.com/problems/game-play-analysis-i/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "find-bottom-left-tree-value": {
      "quesName": "Find Bottom Left Tree Value",
      "quesLink": "https://leetcode.com/problems/find-bottom-left-tree-value/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "freedom-trail": {
      "quesName": "Freedom Trail",
      "quesLink": "https://leetcode.com/problems/freedom-trail/",
      "specialTag": "Hard",
      "tags": [
        "String",
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    }
  },
  {
    "find-largest-value-in-each-tree-row": {
      "quesName": "Find Largest Value in Each Tree Row",
      "quesLink": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "longest-palindromic-subsequence": {
      "quesName": "Longest Palindromic Subsequence",
      "quesLink": "https://leetcode.com/problems/longest-palindromic-subsequence/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "super-washing-machines": {
      "quesName": "Super Washing Machines",
      "quesLink": "https://leetcode.com/problems/super-washing-machines/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "coin-change-ii": {
      "quesName": "Coin Change II",
      "quesLink": "https://leetcode.com/problems/coin-change-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "random-flip-matrix": {
      "quesName": "Random Flip Matrix",
      "quesLink": "https://leetcode.com/problems/random-flip-matrix/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math", "Reservoir Sampling", "Randomized"]
    }
  },
  {
    "detect-capital": {
      "quesName": "Detect Capital",
      "quesLink": "https://leetcode.com/problems/detect-capital/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "longest-uncommon-subsequence-i": {
      "quesName": "Longest Uncommon Subsequence I",
      "quesLink": "https://leetcode.com/problems/longest-uncommon-subsequence-i/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "longest-uncommon-subsequence-ii": {
      "quesName": "Longest Uncommon Subsequence II",
      "quesLink": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Two Pointers", "String", "Sorting"]
    }
  },
  {
    "continuous-subarray-sum": {
      "quesName": "Continuous Subarray Sum",
      "quesLink": "https://leetcode.com/problems/continuous-subarray-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math", "Prefix Sum"]
    }
  },
  {
    "longest-word-in-dictionary-through-deleting": {
      "quesName": "Longest Word in Dictionary through Deleting",
      "quesLink": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "String", "Sorting"]
    }
  },
  {
    "contiguous-array": {
      "quesName": "Contiguous Array",
      "quesLink": "https://leetcode.com/problems/contiguous-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Prefix Sum"]
    }
  },
  {
    "beautiful-arrangement": {
      "quesName": "Beautiful Arrangement",
      "quesLink": "https://leetcode.com/problems/beautiful-arrangement/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "random-pick-with-weight": {
      "quesName": "Random Pick with Weight",
      "quesLink": "https://leetcode.com/problems/random-pick-with-weight/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Binary Search", "Prefix Sum", "Randomized"]
    }
  },
  {
    "minesweeper": {
      "quesName": "Minesweeper",
      "quesLink": "https://leetcode.com/problems/minesweeper/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "minimum-absolute-difference-in-bst": {
      "quesName": "Minimum Absolute Difference in BST",
      "quesLink": "https://leetcode.com/problems/minimum-absolute-difference-in-bst/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "k-diff-pairs-in-an-array": {
      "quesName": "K-diff Pairs in an Array",
      "quesLink": "https://leetcode.com/problems/k-diff-pairs-in-an-array/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    }
  },
  {
    "encode-and-decode-tinyurl": {
      "quesName": "Encode and Decode TinyURL",
      "quesLink": "https://leetcode.com/problems/encode-and-decode-tinyurl/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Design", "Hash Function"]
    }
  },
  {
    "complex-number-multiplication": {
      "quesName": "Complex Number Multiplication",
      "quesLink": "https://leetcode.com/problems/complex-number-multiplication/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "convert-bst-to-greater-tree": {
      "quesName": "Convert BST to Greater Tree",
      "quesLink": "https://leetcode.com/problems/convert-bst-to-greater-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "minimum-time-difference": {
      "quesName": "Minimum Time Difference",
      "quesLink": "https://leetcode.com/problems/minimum-time-difference/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "String", "Sorting"]
    }
  },
  {
    "single-element-in-a-sorted-array": {
      "quesName": "Single Element in a Sorted Array",
      "quesLink": "https://leetcode.com/problems/single-element-in-a-sorted-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "reverse-string-ii": {
      "quesName": "Reverse String II",
      "quesLink": "https://leetcode.com/problems/reverse-string-ii/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "01-matrix": {
      "quesName": "01 Matrix",
      "quesLink": "https://leetcode.com/problems/01-matrix/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "diameter-of-binary-tree": {
      "quesName": "Diameter of Binary Tree",
      "quesLink": "https://leetcode.com/problems/diameter-of-binary-tree/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "remove-boxes": {
      "quesName": "Remove Boxes",
      "quesLink": "https://leetcode.com/problems/remove-boxes/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Memoization"]
    }
  },
  {
    "number-of-provinces": {
      "quesName": "Number of Provinces",
      "quesLink": "https://leetcode.com/problems/number-of-provinces/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "game-play-analysis-iv": {
      "quesName": "Game Play Analysis IV",
      "quesLink": "https://leetcode.com/problems/game-play-analysis-iv/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "student-attendance-record-i": {
      "quesName": "Student Attendance Record I",
      "quesLink": "https://leetcode.com/problems/student-attendance-record-i/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "student-attendance-record-ii": {
      "quesName": "Student Attendance Record II",
      "quesLink": "https://leetcode.com/problems/student-attendance-record-ii/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "optimal-division": {
      "quesName": "Optimal Division",
      "quesLink": "https://leetcode.com/problems/optimal-division/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Dynamic Programming"]
    }
  },
  {
    "brick-wall": {
      "quesName": "Brick Wall",
      "quesLink": "https://leetcode.com/problems/brick-wall/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "next-greater-element-iii": {
      "quesName": "Next Greater Element III",
      "quesLink": "https://leetcode.com/problems/next-greater-element-iii/",
      "specialTag": "Medium",
      "tags": ["Math", "Two Pointers", "String"]
    }
  },
  {
    "reverse-words-in-a-string-iii": {
      "quesName": "Reverse Words in a String III",
      "quesLink": "https://leetcode.com/problems/reverse-words-in-a-string-iii/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "logical-or-of-two-binary-grids-represented-as-quad-trees": {
      "quesName": "Logical OR of Two Binary Grids Represented as Quad-Trees",
      "quesLink": "https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees/",
      "specialTag": "Medium",
      "tags": ["Divide and Conquer", "Tree"]
    }
  },
  {
    "maximum-depth-of-n-ary-tree": {
      "quesName": "Maximum Depth of N-ary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-depth-of-n-ary-tree/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Breadth-First Search"]
    }
  },
  {
    "subarray-sum-equals-k": {
      "quesName": "Subarray Sum Equals K",
      "quesLink": "https://leetcode.com/problems/subarray-sum-equals-k/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Prefix Sum"]
    }
  },
  {
    "array-partition": {
      "quesName": "Array Partition",
      "quesLink": "https://leetcode.com/problems/array-partition/",
      "specialTag": "Easy",
      "tags": ["Array", "Greedy", "Sorting", "Counting Sort"]
    }
  },
  {
    "binary-tree-tilt": {
      "quesName": "Binary Tree Tilt",
      "quesLink": "https://leetcode.com/problems/binary-tree-tilt/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "find-the-closest-palindrome": {
      "quesName": "Find the Closest Palindrome",
      "quesLink": "https://leetcode.com/problems/find-the-closest-palindrome/",
      "specialTag": "Hard",
      "tags": ["Math", "String"]
    }
  },
  {
    "array-nesting": {
      "quesName": "Array Nesting",
      "quesLink": "https://leetcode.com/problems/array-nesting/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search"]
    }
  },
  {
    "reshape-the-matrix": {
      "quesName": "Reshape the Matrix",
      "quesLink": "https://leetcode.com/problems/reshape-the-matrix/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "permutation-in-string": {
      "quesName": "Permutation in String",
      "quesLink": "https://leetcode.com/problems/permutation-in-string/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Two Pointers", "String", "Sliding Window"]
    }
  },
  {
    "managers-with-at-least-5-direct-reports": {
      "quesName": "Managers with at Least 5 Direct Reports",
      "quesLink": "https://leetcode.com/problems/managers-with-at-least-5-direct-reports/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "subtree-of-another-tree": {
      "quesName": "Subtree of Another Tree",
      "quesLink": "https://leetcode.com/problems/subtree-of-another-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "String Matching",
        "Binary Tree",
        "Hash Function"
      ]
    }
  },
  {
    "distribute-candies": {
      "quesName": "Distribute Candies",
      "quesLink": "https://leetcode.com/problems/distribute-candies/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "out-of-boundary-paths": {
      "quesName": "Out of Boundary Paths",
      "quesLink": "https://leetcode.com/problems/out-of-boundary-paths/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "employee-bonus": {
      "quesName": "Employee Bonus",
      "quesLink": "https://leetcode.com/problems/employee-bonus/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "shortest-unsorted-continuous-subarray": {
      "quesName": "Shortest Unsorted Continuous Subarray",
      "quesLink": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Two Pointers",
        "Stack",
        "Greedy",
        "Sorting",
        "Monotonic Stack"
      ]
    }
  },
  {
    "delete-operation-for-two-strings": {
      "quesName": "Delete Operation for Two Strings",
      "quesLink": "https://leetcode.com/problems/delete-operation-for-two-strings/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "find-customer-referee": {
      "quesName": "Find Customer Referee",
      "quesLink": "https://leetcode.com/problems/find-customer-referee/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "investments-in-2016": {
      "quesName": "Investments in 2016",
      "quesLink": "https://leetcode.com/problems/investments-in-2016/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "customer-placing-the-largest-number-of-orders": {
      "quesName": "Customer Placing the Largest Number of Orders",
      "quesLink": "https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "erect-the-fence": {
      "quesName": "Erect the Fence",
      "quesLink": "https://leetcode.com/problems/erect-the-fence/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "n-ary-tree-preorder-traversal": {
      "quesName": "N-ary Tree Preorder Traversal",
      "quesLink": "https://leetcode.com/problems/n-ary-tree-preorder-traversal/",
      "specialTag": "Easy",
      "tags": ["Stack", "Tree", "Depth-First Search"]
    }
  },
  {
    "n-ary-tree-postorder-traversal": {
      "quesName": "N-ary Tree Postorder Traversal",
      "quesLink": "https://leetcode.com/problems/n-ary-tree-postorder-traversal/",
      "specialTag": "Easy",
      "tags": ["Stack", "Tree", "Depth-First Search"]
    }
  },
  {
    "tag-validator": {
      "quesName": "Tag Validator",
      "quesLink": "https://leetcode.com/problems/tag-validator/",
      "specialTag": "Hard",
      "tags": ["String", "Stack"]
    }
  },
  {
    "fraction-addition-and-subtraction": {
      "quesName": "Fraction Addition and Subtraction",
      "quesLink": "https://leetcode.com/problems/fraction-addition-and-subtraction/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "valid-square": {
      "quesName": "Valid Square",
      "quesLink": "https://leetcode.com/problems/valid-square/",
      "specialTag": "Medium",
      "tags": ["Math", "Geometry"]
    }
  },
  {
    "longest-harmonious-subsequence": {
      "quesName": "Longest Harmonious Subsequence",
      "quesLink": "https://leetcode.com/problems/longest-harmonious-subsequence/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Sorting"]
    }
  },
  {
    "big-countries": {
      "quesName": "Big Countries",
      "quesLink": "https://leetcode.com/problems/big-countries/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "classes-more-than-5-students": {
      "quesName": "Classes More Than 5 Students",
      "quesLink": "https://leetcode.com/problems/classes-more-than-5-students/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "range-addition-ii": {
      "quesName": "Range Addition II",
      "quesLink": "https://leetcode.com/problems/range-addition-ii/",
      "specialTag": "Easy",
      "tags": ["Array", "Math"]
    }
  },
  {
    "minimum-index-sum-of-two-lists": {
      "quesName": "Minimum Index Sum of Two Lists",
      "quesLink": "https://leetcode.com/problems/minimum-index-sum-of-two-lists/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "non-negative-integers-without-consecutive-ones": {
      "quesName": "Non-negative Integers without Consecutive Ones",
      "quesLink": "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "human-traffic-of-stadium": {
      "quesName": "Human Traffic of Stadium",
      "quesLink": "https://leetcode.com/problems/human-traffic-of-stadium/",
      "specialTag": "Hard",
      "tags": ["Database"]
    }
  },
  {
    "friend-requests-ii-who-has-the-most-friends": {
      "quesName": "Friend Requests II: Who Has the Most Friends",
      "quesLink": "https://leetcode.com/problems/friend-requests-ii-who-has-the-most-friends/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "can-place-flowers": {
      "quesName": "Can Place Flowers",
      "quesLink": "https://leetcode.com/problems/can-place-flowers/",
      "specialTag": "Easy",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "construct-string-from-binary-tree": {
      "quesName": "Construct String from Binary Tree",
      "quesLink": "https://leetcode.com/problems/construct-string-from-binary-tree/",
      "specialTag": "Easy",
      "tags": ["String", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "sales-person": {
      "quesName": "Sales Person",
      "quesLink": "https://leetcode.com/problems/sales-person/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "tree-node": {
      "quesName": "Tree Node",
      "quesLink": "https://leetcode.com/problems/tree-node/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "find-duplicate-file-in-system": {
      "quesName": "Find Duplicate File in System",
      "quesLink": "https://leetcode.com/problems/find-duplicate-file-in-system/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "triangle-judgement": {
      "quesName": "Triangle Judgement",
      "quesLink": "https://leetcode.com/problems/triangle-judgement/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "valid-triangle-number": {
      "quesName": "Valid Triangle Number",
      "quesLink": "https://leetcode.com/problems/valid-triangle-number/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"]
    }
  },
  {
    "merge-two-binary-trees": {
      "quesName": "Merge Two Binary Trees",
      "quesLink": "https://leetcode.com/problems/merge-two-binary-trees/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "biggest-single-number": {
      "quesName": "Biggest Single Number",
      "quesLink": "https://leetcode.com/problems/biggest-single-number/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "not-boring-movies": {
      "quesName": "Not Boring Movies",
      "quesLink": "https://leetcode.com/problems/not-boring-movies/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "task-scheduler": {
      "quesName": "Task Scheduler",
      "quesLink": "https://leetcode.com/problems/task-scheduler/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    }
  },
  {
    "design-circular-queue": {
      "quesName": "Design Circular Queue",
      "quesLink": "https://leetcode.com/problems/design-circular-queue/",
      "specialTag": "Medium",
      "tags": ["Array", "Linked List", "Design", "Queue"]
    }
  },
  {
    "add-one-row-to-tree": {
      "quesName": "Add One Row to Tree",
      "quesLink": "https://leetcode.com/problems/add-one-row-to-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "exchange-seats": {
      "quesName": "Exchange Seats",
      "quesLink": "https://leetcode.com/problems/exchange-seats/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "swap-salary": {
      "quesName": "Swap Salary",
      "quesLink": "https://leetcode.com/problems/swap-salary/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "maximum-product-of-three-numbers": {
      "quesName": "Maximum Product of Three Numbers",
      "quesLink": "https://leetcode.com/problems/maximum-product-of-three-numbers/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Sorting"]
    }
  },
  {
    "k-inverse-pairs-array": {
      "quesName": "K Inverse Pairs Array",
      "quesLink": "https://leetcode.com/problems/k-inverse-pairs-array/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "course-schedule-iii": {
      "quesName": "Course Schedule III",
      "quesLink": "https://leetcode.com/problems/course-schedule-iii/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "smallest-range-covering-elements-from-k-lists": {
      "quesName": "Smallest Range Covering Elements from K Lists",
      "quesLink": "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sliding Window",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "sum-of-square-numbers": {
      "quesName": "Sum of Square Numbers",
      "quesLink": "https://leetcode.com/problems/sum-of-square-numbers/",
      "specialTag": "Medium",
      "tags": ["Math", "Two Pointers", "Binary Search"]
    }
  },
  {
    "exclusive-time-of-functions": {
      "quesName": "Exclusive Time of Functions",
      "quesLink": "https://leetcode.com/problems/exclusive-time-of-functions/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack"]
    }
  },
  {
    "average-of-levels-in-binary-tree": {
      "quesName": "Average of Levels in Binary Tree",
      "quesLink": "https://leetcode.com/problems/average-of-levels-in-binary-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "shopping-offers": {
      "quesName": "Shopping Offers",
      "quesLink": "https://leetcode.com/problems/shopping-offers/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Memoization",
        "Bitmask"
      ]
    }
  },
  {
    "decode-ways-ii": {
      "quesName": "Decode Ways II",
      "quesLink": "https://leetcode.com/problems/decode-ways-ii/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "solve-the-equation": {
      "quesName": "Solve the Equation",
      "quesLink": "https://leetcode.com/problems/solve-the-equation/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "design-circular-deque": {
      "quesName": "Design Circular Deque",
      "quesLink": "https://leetcode.com/problems/design-circular-deque/",
      "specialTag": "Medium",
      "tags": ["Array", "Linked List", "Design", "Queue"]
    }
  },
  {
    "maximum-average-subarray-i": {
      "quesName": "Maximum Average Subarray I",
      "quesLink": "https://leetcode.com/problems/maximum-average-subarray-i/",
      "specialTag": "Easy",
      "tags": ["Array", "Sliding Window"]
    }
  },
  {
    "set-mismatch": {
      "quesName": "Set Mismatch",
      "quesLink": "https://leetcode.com/problems/set-mismatch/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Bit Manipulation", "Sorting"]
    }
  },
  {
    "maximum-length-of-pair-chain": {
      "quesName": "Maximum Length of Pair Chain",
      "quesLink": "https://leetcode.com/problems/maximum-length-of-pair-chain/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"]
    }
  },
  {
    "palindromic-substrings": {
      "quesName": "Palindromic Substrings",
      "quesLink": "https://leetcode.com/problems/palindromic-substrings/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "replace-words": {
      "quesName": "Replace Words",
      "quesLink": "https://leetcode.com/problems/replace-words/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Trie"]
    }
  },
  {
    "dota2-senate": {
      "quesName": "Dota2 Senate",
      "quesLink": "https://leetcode.com/problems/dota2-senate/",
      "specialTag": "Medium",
      "tags": ["String", "Greedy", "Queue"]
    }
  },
  {
    "2-keys-keyboard": {
      "quesName": "2 Keys Keyboard",
      "quesLink": "https://leetcode.com/problems/2-keys-keyboard/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming"]
    }
  },
  {
    "find-duplicate-subtrees": {
      "quesName": "Find Duplicate Subtrees",
      "quesLink": "https://leetcode.com/problems/find-duplicate-subtrees/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "two-sum-iv-input-is-a-bst": {
      "quesName": "Two Sum IV - Input is a BST",
      "quesLink": "https://leetcode.com/problems/two-sum-iv-input-is-a-bst/",
      "specialTag": "Easy",
      "tags": [
        "Hash Table",
        "Two Pointers",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "maximum-binary-tree": {
      "quesName": "Maximum Binary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Divide and Conquer",
        "Stack",
        "Tree",
        "Monotonic Stack",
        "Binary Tree"
      ]
    }
  },
  {
    "print-binary-tree": {
      "quesName": "Print Binary Tree",
      "quesLink": "https://leetcode.com/problems/print-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "robot-return-to-origin": {
      "quesName": "Robot Return to Origin",
      "quesLink": "https://leetcode.com/problems/robot-return-to-origin/",
      "specialTag": "Easy",
      "tags": ["String", "Simulation"]
    }
  },
  {
    "find-k-closest-elements": {
      "quesName": "Find K Closest Elements",
      "quesLink": "https://leetcode.com/problems/find-k-closest-elements/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Two Pointers",
        "Binary Search",
        "Sliding Window",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "split-array-into-consecutive-subsequences": {
      "quesName": "Split Array into Consecutive Subsequences",
      "quesLink": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Greedy", "Heap (Priority Queue)"]
    }
  },
  {
    "image-smoother": {
      "quesName": "Image Smoother",
      "quesLink": "https://leetcode.com/problems/image-smoother/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix"]
    }
  },
  {
    "maximum-width-of-binary-tree": {
      "quesName": "Maximum Width of Binary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-width-of-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "strange-printer": {
      "quesName": "Strange Printer",
      "quesLink": "https://leetcode.com/problems/strange-printer/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "non-decreasing-array": {
      "quesName": "Non-decreasing Array",
      "quesLink": "https://leetcode.com/problems/non-decreasing-array/",
      "specialTag": "Medium",
      "tags": ["Array"]
    }
  },
  {
    "beautiful-arrangement-ii": {
      "quesName": "Beautiful Arrangement II",
      "quesLink": "https://leetcode.com/problems/beautiful-arrangement-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "kth-smallest-number-in-multiplication-table": {
      "quesName": "Kth Smallest Number in Multiplication Table",
      "quesLink": "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table/",
      "specialTag": "Hard",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "trim-a-binary-search-tree": {
      "quesName": "Trim a Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/trim-a-binary-search-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "maximum-swap": {
      "quesName": "Maximum Swap",
      "quesLink": "https://leetcode.com/problems/maximum-swap/",
      "specialTag": "Medium",
      "tags": ["Math", "Greedy"]
    }
  },
  {
    "second-minimum-node-in-a-binary-tree": {
      "quesName": "Second Minimum Node In a Binary Tree",
      "quesLink": "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "bulb-switcher-ii": {
      "quesName": "Bulb Switcher II",
      "quesLink": "https://leetcode.com/problems/bulb-switcher-ii/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "Bit Manipulation",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    }
  },
  {
    "number-of-longest-increasing-subsequence": {
      "quesName": "Number of Longest Increasing Subsequence",
      "quesLink": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    }
  },
  {
    "longest-continuous-increasing-subsequence": {
      "quesName": "Longest Continuous Increasing Subsequence",
      "quesLink": "https://leetcode.com/problems/longest-continuous-increasing-subsequence/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "cut-off-trees-for-golf-event": {
      "quesName": "Cut Off Trees for Golf Event",
      "quesLink": "https://leetcode.com/problems/cut-off-trees-for-golf-event/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Breadth-First Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    }
  },
  {
    "implement-magic-dictionary": {
      "quesName": "Implement Magic Dictionary",
      "quesLink": "https://leetcode.com/problems/implement-magic-dictionary/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Depth-First Search", "Design", "Trie"]
    }
  },
  {
    "map-sum-pairs": {
      "quesName": "Map Sum Pairs",
      "quesLink": "https://leetcode.com/problems/map-sum-pairs/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Design", "Trie"]
    }
  },
  {
    "valid-parenthesis-string": {
      "quesName": "Valid Parenthesis String",
      "quesLink": "https://leetcode.com/problems/valid-parenthesis-string/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming", "Stack", "Greedy"]
    }
  },
  {
    "24-game": {
      "quesName": "24 Game",
      "quesLink": "https://leetcode.com/problems/24-game/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Backtracking"]
    }
  },
  {
    "valid-palindrome-ii": {
      "quesName": "Valid Palindrome II",
      "quesLink": "https://leetcode.com/problems/valid-palindrome-ii/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String", "Greedy"]
    }
  },
  {
    "baseball-game": {
      "quesName": "Baseball Game",
      "quesLink": "https://leetcode.com/problems/baseball-game/",
      "specialTag": "Easy",
      "tags": ["Array", "Stack", "Simulation"]
    }
  },
  {
    "redundant-connection": {
      "quesName": "Redundant Connection",
      "quesLink": "https://leetcode.com/problems/redundant-connection/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "redundant-connection-ii": {
      "quesName": "Redundant Connection II",
      "quesLink": "https://leetcode.com/problems/redundant-connection-ii/",
      "specialTag": "Hard",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "repeated-string-match": {
      "quesName": "Repeated String Match",
      "quesLink": "https://leetcode.com/problems/repeated-string-match/",
      "specialTag": "Medium",
      "tags": ["String", "String Matching"]
    }
  },
  {
    "longest-univalue-path": {
      "quesName": "Longest Univalue Path",
      "quesLink": "https://leetcode.com/problems/longest-univalue-path/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "knight-probability-in-chessboard": {
      "quesName": "Knight Probability in Chessboard",
      "quesLink": "https://leetcode.com/problems/knight-probability-in-chessboard/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "maximum-sum-of-3-non-overlapping-subarrays": {
      "quesName": "Maximum Sum of 3 Non-Overlapping Subarrays",
      "quesLink": "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "employee-importance": {
      "quesName": "Employee Importance",
      "quesLink": "https://leetcode.com/problems/employee-importance/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Depth-First Search", "Breadth-First Search"]
    }
  },
  {
    "stickers-to-spell-word": {
      "quesName": "Stickers to Spell Word",
      "quesLink": "https://leetcode.com/problems/stickers-to-spell-word/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "top-k-frequent-words": {
      "quesName": "Top K Frequent Words",
      "quesLink": "https://leetcode.com/problems/top-k-frequent-words/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "String",
        "Trie",
        "Sorting",
        "Heap (Priority Queue)",
        "Bucket Sort",
        "Counting"
      ]
    }
  },
  {
    "binary-number-with-alternating-bits": {
      "quesName": "Binary Number with Alternating Bits",
      "quesLink": "https://leetcode.com/problems/binary-number-with-alternating-bits/",
      "specialTag": "Easy",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "max-area-of-island": {
      "quesName": "Max Area of Island",
      "quesLink": "https://leetcode.com/problems/max-area-of-island/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "count-binary-substrings": {
      "quesName": "Count Binary Substrings",
      "quesLink": "https://leetcode.com/problems/count-binary-substrings/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "degree-of-an-array": {
      "quesName": "Degree of an Array",
      "quesLink": "https://leetcode.com/problems/degree-of-an-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "partition-to-k-equal-sum-subsets": {
      "quesName": "Partition to K Equal Sum Subsets",
      "quesLink": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Memoization",
        "Bitmask"
      ]
    }
  },
  {
    "falling-squares": {
      "quesName": "Falling Squares",
      "quesLink": "https://leetcode.com/problems/falling-squares/",
      "specialTag": "Hard",
      "tags": ["Array", "Segment Tree", "Ordered Set"]
    }
  },
  {
    "search-in-a-binary-search-tree": {
      "quesName": "Search in a Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/search-in-a-binary-search-tree/",
      "specialTag": "Easy",
      "tags": ["Tree", "Binary Search Tree", "Binary Tree"]
    }
  },
  {
    "insert-into-a-binary-search-tree": {
      "quesName": "Insert into a Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/insert-into-a-binary-search-tree/",
      "specialTag": "Medium",
      "tags": ["Tree", "Binary Search Tree", "Binary Tree"]
    }
  },
  {
    "kth-largest-element-in-a-stream": {
      "quesName": "Kth Largest Element in a Stream",
      "quesLink": "https://leetcode.com/problems/kth-largest-element-in-a-stream/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Design",
        "Binary Search Tree",
        "Heap (Priority Queue)",
        "Binary Tree",
        "Data Stream"
      ]
    }
  },
  {
    "binary-search": {
      "quesName": "Binary Search",
      "quesLink": "https://leetcode.com/problems/binary-search/",
      "specialTag": "Easy",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "design-hashset": {
      "quesName": "Design HashSet",
      "quesLink": "https://leetcode.com/problems/design-hashset/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"]
    }
  },
  {
    "design-hashmap": {
      "quesName": "Design HashMap",
      "quesLink": "https://leetcode.com/problems/design-hashmap/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Linked List", "Design", "Hash Function"]
    }
  },
  {
    "design-linked-list": {
      "quesName": "Design Linked List",
      "quesLink": "https://leetcode.com/problems/design-linked-list/",
      "specialTag": "Medium",
      "tags": ["Linked List", "Design"]
    }
  },
  {
    "to-lower-case": {
      "quesName": "To Lower Case",
      "quesLink": "https://leetcode.com/problems/to-lower-case/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "random-pick-with-blacklist": {
      "quesName": "Random Pick with Blacklist",
      "quesLink": "https://leetcode.com/problems/random-pick-with-blacklist/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Hash Table",
        "Math",
        "Binary Search",
        "Sorting",
        "Randomized"
      ]
    }
  },
  {
    "minimum-ascii-delete-sum-for-two-strings": {
      "quesName": "Minimum ASCII Delete Sum for Two Strings",
      "quesLink": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "subarray-product-less-than-k": {
      "quesName": "Subarray Product Less Than K",
      "quesLink": "https://leetcode.com/problems/subarray-product-less-than-k/",
      "specialTag": "Medium",
      "tags": ["Array", "Sliding Window"]
    }
  },
  {
    "best-time-to-buy-and-sell-stock-with-transaction-fee": {
      "quesName": "Best Time to Buy and Sell Stock with Transaction Fee",
      "quesLink": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "range-module": {
      "quesName": "Range Module",
      "quesLink": "https://leetcode.com/problems/range-module/",
      "specialTag": "Hard",
      "tags": ["Design", "Segment Tree", "Ordered Set"]
    }
  },
  {
    "1-bit-and-2-bit-characters": {
      "quesName": "1-bit and 2-bit Characters",
      "quesLink": "https://leetcode.com/problems/1-bit-and-2-bit-characters/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "maximum-length-of-repeated-subarray": {
      "quesName": "Maximum Length of Repeated Subarray",
      "quesLink": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Binary Search",
        "Dynamic Programming",
        "Sliding Window",
        "Rolling Hash",
        "Hash Function"
      ]
    }
  },
  {
    "find-k-th-smallest-pair-distance": {
      "quesName": "Find K-th Smallest Pair Distance",
      "quesLink": "https://leetcode.com/problems/find-k-th-smallest-pair-distance/",
      "specialTag": "Hard",
      "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"]
    }
  },
  {
    "longest-word-in-dictionary": {
      "quesName": "Longest Word in Dictionary",
      "quesLink": "https://leetcode.com/problems/longest-word-in-dictionary/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Trie", "Sorting"]
    }
  },
  {
    "accounts-merge": {
      "quesName": "Accounts Merge",
      "quesLink": "https://leetcode.com/problems/accounts-merge/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Sorting"
      ]
    }
  },
  {
    "remove-comments": {
      "quesName": "Remove Comments",
      "quesLink": "https://leetcode.com/problems/remove-comments/",
      "specialTag": "Medium",
      "tags": ["Array", "String"]
    }
  },
  {
    "find-pivot-index": {
      "quesName": "Find Pivot Index",
      "quesLink": "https://leetcode.com/problems/find-pivot-index/",
      "specialTag": "Easy",
      "tags": ["Array", "Prefix Sum"]
    }
  },
  {
    "split-linked-list-in-parts": {
      "quesName": "Split Linked List in Parts",
      "quesLink": "https://leetcode.com/problems/split-linked-list-in-parts/",
      "specialTag": "Medium",
      "tags": ["Linked List"]
    }
  },
  {
    "number-of-atoms": {
      "quesName": "Number of Atoms",
      "quesLink": "https://leetcode.com/problems/number-of-atoms/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Stack", "Sorting"]
    }
  },
  {
    "self-dividing-numbers": {
      "quesName": "Self Dividing Numbers",
      "quesLink": "https://leetcode.com/problems/self-dividing-numbers/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "my-calendar-i": {
      "quesName": "My Calendar I",
      "quesLink": "https://leetcode.com/problems/my-calendar-i/",
      "specialTag": "Medium",
      "tags": ["Binary Search", "Design", "Segment Tree", "Ordered Set"]
    }
  },
  {
    "count-different-palindromic-subsequences": {
      "quesName": "Count Different Palindromic Subsequences",
      "quesLink": "https://leetcode.com/problems/count-different-palindromic-subsequences/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "my-calendar-ii": {
      "quesName": "My Calendar II",
      "quesLink": "https://leetcode.com/problems/my-calendar-ii/",
      "specialTag": "Medium",
      "tags": ["Binary Search", "Design", "Segment Tree", "Ordered Set"]
    }
  },
  {
    "my-calendar-iii": {
      "quesName": "My Calendar III",
      "quesLink": "https://leetcode.com/problems/my-calendar-iii/",
      "specialTag": "Hard",
      "tags": ["Binary Search", "Design", "Segment Tree", "Ordered Set"]
    }
  },
  {
    "flood-fill": {
      "quesName": "Flood Fill",
      "quesLink": "https://leetcode.com/problems/flood-fill/",
      "specialTag": "Easy",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "asteroid-collision": {
      "quesName": "Asteroid Collision",
      "quesLink": "https://leetcode.com/problems/asteroid-collision/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Simulation"]
    }
  },
  {
    "parse-lisp-expression": {
      "quesName": "Parse Lisp Expression",
      "quesLink": "https://leetcode.com/problems/parse-lisp-expression/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Stack", "Recursion"]
    }
  },
  {
    "monotone-increasing-digits": {
      "quesName": "Monotone Increasing Digits",
      "quesLink": "https://leetcode.com/problems/monotone-increasing-digits/",
      "specialTag": "Medium",
      "tags": ["Math", "Greedy"]
    }
  },
  {
    "daily-temperatures": {
      "quesName": "Daily Temperatures",
      "quesLink": "https://leetcode.com/problems/daily-temperatures/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Monotonic Stack"]
    }
  },
  {
    "delete-and-earn": {
      "quesName": "Delete and Earn",
      "quesLink": "https://leetcode.com/problems/delete-and-earn/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Dynamic Programming"]
    }
  },
  {
    "cherry-pickup": {
      "quesName": "Cherry Pickup",
      "quesLink": "https://leetcode.com/problems/cherry-pickup/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "network-delay-time": {
      "quesName": "Network Delay Time",
      "quesLink": "https://leetcode.com/problems/network-delay-time/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    }
  },
  {
    "find-smallest-letter-greater-than-target": {
      "quesName": "Find Smallest Letter Greater Than Target",
      "quesLink": "https://leetcode.com/problems/find-smallest-letter-greater-than-target/",
      "specialTag": "Easy",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "prefix-and-suffix-search": {
      "quesName": "Prefix and Suffix Search",
      "quesLink": "https://leetcode.com/problems/prefix-and-suffix-search/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Design", "Trie"]
    }
  },
  {
    "min-cost-climbing-stairs": {
      "quesName": "Min Cost Climbing Stairs",
      "quesLink": "https://leetcode.com/problems/min-cost-climbing-stairs/",
      "specialTag": "Easy",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "largest-number-at-least-twice-of-others": {
      "quesName": "Largest Number At Least Twice of Others",
      "quesLink": "https://leetcode.com/problems/largest-number-at-least-twice-of-others/",
      "specialTag": "Easy",
      "tags": ["Array", "Sorting"]
    }
  },
  {
    "shortest-completing-word": {
      "quesName": "Shortest Completing Word",
      "quesLink": "https://leetcode.com/problems/shortest-completing-word/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "contain-virus": {
      "quesName": "Contain Virus",
      "quesLink": "https://leetcode.com/problems/contain-virus/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Matrix",
        "Simulation"
      ]
    }
  },
  {
    "open-the-lock": {
      "quesName": "Open the Lock",
      "quesLink": "https://leetcode.com/problems/open-the-lock/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Breadth-First Search"]
    }
  },
  {
    "cracking-the-safe": {
      "quesName": "Cracking the Safe",
      "quesLink": "https://leetcode.com/problems/cracking-the-safe/",
      "specialTag": "Hard",
      "tags": ["Depth-First Search", "Graph", "Eulerian Circuit"]
    }
  },
  {
    "reach-a-number": {
      "quesName": "Reach a Number",
      "quesLink": "https://leetcode.com/problems/reach-a-number/",
      "specialTag": "Medium",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "pyramid-transition-matrix": {
      "quesName": "Pyramid Transition Matrix",
      "quesLink": "https://leetcode.com/problems/pyramid-transition-matrix/",
      "specialTag": "Medium",
      "tags": ["Bit Manipulation", "Depth-First Search", "Breadth-First Search"]
    }
  },
  {
    "set-intersection-size-at-least-two": {
      "quesName": "Set Intersection Size At Least Two",
      "quesLink": "https://leetcode.com/problems/set-intersection-size-at-least-two/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy", "Sorting"]
    }
  },
  {
    "special-binary-string": {
      "quesName": "Special Binary String",
      "quesLink": "https://leetcode.com/problems/special-binary-string/",
      "specialTag": "Hard",
      "tags": ["String", "Recursion"]
    }
  },
  {
    "prime-number-of-set-bits-in-binary-representation": {
      "quesName": "Prime Number of Set Bits in Binary Representation",
      "quesLink": "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation/",
      "specialTag": "Easy",
      "tags": ["Math", "Bit Manipulation"]
    }
  },
  {
    "partition-labels": {
      "quesName": "Partition Labels",
      "quesLink": "https://leetcode.com/problems/partition-labels/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Two Pointers", "String", "Greedy"]
    }
  },
  {
    "largest-plus-sign": {
      "quesName": "Largest Plus Sign",
      "quesLink": "https://leetcode.com/problems/largest-plus-sign/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "couples-holding-hands": {
      "quesName": "Couples Holding Hands",
      "quesLink": "https://leetcode.com/problems/couples-holding-hands/",
      "specialTag": "Hard",
      "tags": [
        "Greedy",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "toeplitz-matrix": {
      "quesName": "Toeplitz Matrix",
      "quesLink": "https://leetcode.com/problems/toeplitz-matrix/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix"]
    }
  },
  {
    "reorganize-string": {
      "quesName": "Reorganize String",
      "quesLink": "https://leetcode.com/problems/reorganize-string/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "String",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    }
  },
  {
    "max-chunks-to-make-sorted-ii": {
      "quesName": "Max Chunks To Make Sorted II",
      "quesLink": "https://leetcode.com/problems/max-chunks-to-make-sorted-ii/",
      "specialTag": "Hard",
      "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"]
    }
  },
  {
    "max-chunks-to-make-sorted": {
      "quesName": "Max Chunks To Make Sorted",
      "quesLink": "https://leetcode.com/problems/max-chunks-to-make-sorted/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Greedy", "Sorting", "Monotonic Stack"]
    }
  },
  {
    "basic-calculator-iv": {
      "quesName": "Basic Calculator IV",
      "quesLink": "https://leetcode.com/problems/basic-calculator-iv/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "Math", "String", "Stack", "Recursion"]
    }
  },
  {
    "jewels-and-stones": {
      "quesName": "Jewels and Stones",
      "quesLink": "https://leetcode.com/problems/jewels-and-stones/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String"]
    }
  },
  {
    "sliding-puzzle": {
      "quesName": "Sliding Puzzle",
      "quesLink": "https://leetcode.com/problems/sliding-puzzle/",
      "specialTag": "Hard",
      "tags": ["Array", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "global-and-local-inversions": {
      "quesName": "Global and Local Inversions",
      "quesLink": "https://leetcode.com/problems/global-and-local-inversions/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "swap-adjacent-in-lr-string": {
      "quesName": "Swap Adjacent in LR String",
      "quesLink": "https://leetcode.com/problems/swap-adjacent-in-lr-string/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "swim-in-rising-water": {
      "quesName": "Swim in Rising Water",
      "quesLink": "https://leetcode.com/problems/swim-in-rising-water/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    }
  },
  {
    "k-th-symbol-in-grammar": {
      "quesName": "K-th Symbol in Grammar",
      "quesLink": "https://leetcode.com/problems/k-th-symbol-in-grammar/",
      "specialTag": "Medium",
      "tags": ["Math", "Bit Manipulation", "Recursion"]
    }
  },
  {
    "reaching-points": {
      "quesName": "Reaching Points",
      "quesLink": "https://leetcode.com/problems/reaching-points/",
      "specialTag": "Hard",
      "tags": ["Math"]
    }
  },
  {
    "rabbits-in-forest": {
      "quesName": "Rabbits in Forest",
      "quesLink": "https://leetcode.com/problems/rabbits-in-forest/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math", "Greedy"]
    }
  },
  {
    "transform-to-chessboard": {
      "quesName": "Transform to Chessboard",
      "quesLink": "https://leetcode.com/problems/transform-to-chessboard/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Bit Manipulation", "Matrix"]
    }
  },
  {
    "minimum-distance-between-bst-nodes": {
      "quesName": "Minimum Distance Between BST Nodes",
      "quesLink": "https://leetcode.com/problems/minimum-distance-between-bst-nodes/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "letter-case-permutation": {
      "quesName": "Letter Case Permutation",
      "quesLink": "https://leetcode.com/problems/letter-case-permutation/",
      "specialTag": "Medium",
      "tags": ["String", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "is-graph-bipartite": {
      "quesName": "Is Graph Bipartite?",
      "quesLink": "https://leetcode.com/problems/is-graph-bipartite/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "k-th-smallest-prime-fraction": {
      "quesName": "K-th Smallest Prime Fraction",
      "quesLink": "https://leetcode.com/problems/k-th-smallest-prime-fraction/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "cheapest-flights-within-k-stops": {
      "quesName": "Cheapest Flights Within K Stops",
      "quesLink": "https://leetcode.com/problems/cheapest-flights-within-k-stops/",
      "specialTag": "Medium",
      "tags": [
        "Dynamic Programming",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Shortest Path"
      ]
    }
  },
  {
    "rotated-digits": {
      "quesName": "Rotated Digits",
      "quesLink": "https://leetcode.com/problems/rotated-digits/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming"]
    }
  },
  {
    "escape-the-ghosts": {
      "quesName": "Escape The Ghosts",
      "quesLink": "https://leetcode.com/problems/escape-the-ghosts/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "domino-and-tromino-tiling": {
      "quesName": "Domino and Tromino Tiling",
      "quesLink": "https://leetcode.com/problems/domino-and-tromino-tiling/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "custom-sort-string": {
      "quesName": "Custom Sort String",
      "quesLink": "https://leetcode.com/problems/custom-sort-string/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sorting"]
    }
  },
  {
    "number-of-matching-subsequences": {
      "quesName": "Number of Matching Subsequences",
      "quesLink": "https://leetcode.com/problems/number-of-matching-subsequences/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Binary Search",
        "Dynamic Programming",
        "Trie",
        "Sorting"
      ]
    }
  },
  {
    "preimage-size-of-factorial-zeroes-function": {
      "quesName": "Preimage Size of Factorial Zeroes Function",
      "quesLink": "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function/",
      "specialTag": "Hard",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "valid-tic-tac-toe-state": {
      "quesName": "Valid Tic-Tac-Toe State",
      "quesLink": "https://leetcode.com/problems/valid-tic-tac-toe-state/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix"]
    }
  },
  {
    "number-of-subarrays-with-bounded-maximum": {
      "quesName": "Number of Subarrays with Bounded Maximum",
      "quesLink": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "rotate-string": {
      "quesName": "Rotate String",
      "quesLink": "https://leetcode.com/problems/rotate-string/",
      "specialTag": "Easy",
      "tags": ["String", "String Matching"]
    }
  },
  {
    "all-paths-from-source-to-target": {
      "quesName": "All Paths From Source to Target",
      "quesLink": "https://leetcode.com/problems/all-paths-from-source-to-target/",
      "specialTag": "Medium",
      "tags": [
        "Backtracking",
        "Depth-First Search",
        "Breadth-First Search",
        "Graph"
      ]
    }
  },
  {
    "smallest-rotation-with-highest-score": {
      "quesName": "Smallest Rotation with Highest Score",
      "quesLink": "https://leetcode.com/problems/smallest-rotation-with-highest-score/",
      "specialTag": "Hard",
      "tags": ["Array", "Prefix Sum"]
    }
  },
  {
    "champagne-tower": {
      "quesName": "Champagne Tower",
      "quesLink": "https://leetcode.com/problems/champagne-tower/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "minimum-swaps-to-make-sequences-increasing": {
      "quesName": "Minimum Swaps To Make Sequences Increasing",
      "quesLink": "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "find-eventual-safe-states": {
      "quesName": "Find Eventual Safe States",
      "quesLink": "https://leetcode.com/problems/find-eventual-safe-states/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    }
  },
  {
    "bricks-falling-when-hit": {
      "quesName": "Bricks Falling When Hit",
      "quesLink": "https://leetcode.com/problems/bricks-falling-when-hit/",
      "specialTag": "Hard",
      "tags": ["Array", "Union Find", "Matrix"]
    }
  },
  {
    "unique-morse-code-words": {
      "quesName": "Unique Morse Code Words",
      "quesLink": "https://leetcode.com/problems/unique-morse-code-words/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "split-array-with-same-average": {
      "quesName": "Split Array With Same Average",
      "quesLink": "https://leetcode.com/problems/split-array-with-same-average/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "number-of-lines-to-write-string": {
      "quesName": "Number of Lines To Write String",
      "quesLink": "https://leetcode.com/problems/number-of-lines-to-write-string/",
      "specialTag": "Easy",
      "tags": ["Array", "String"]
    }
  },
  {
    "max-increase-to-keep-city-skyline": {
      "quesName": "Max Increase to Keep City Skyline",
      "quesLink": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Matrix"]
    }
  },
  {
    "soup-servings": {
      "quesName": "Soup Servings",
      "quesLink": "https://leetcode.com/problems/soup-servings/",
      "specialTag": "Medium",
      "tags": ["Math", "Dynamic Programming", "Probability and Statistics"]
    }
  },
  {
    "expressive-words": {
      "quesName": "Expressive Words",
      "quesLink": "https://leetcode.com/problems/expressive-words/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "String"]
    }
  },
  {
    "chalkboard-xor-game": {
      "quesName": "Chalkboard XOR Game",
      "quesLink": "https://leetcode.com/problems/chalkboard-xor-game/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Math",
        "Bit Manipulation",
        "Brainteaser",
        "Game Theory"
      ]
    }
  },
  {
    "subdomain-visit-count": {
      "quesName": "Subdomain Visit Count",
      "quesLink": "https://leetcode.com/problems/subdomain-visit-count/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Counting"]
    }
  },
  {
    "largest-triangle-area": {
      "quesName": "Largest Triangle Area",
      "quesLink": "https://leetcode.com/problems/largest-triangle-area/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "largest-sum-of-averages": {
      "quesName": "Largest Sum of Averages",
      "quesLink": "https://leetcode.com/problems/largest-sum-of-averages/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Prefix Sum"]
    }
  },
  {
    "binary-tree-pruning": {
      "quesName": "Binary Tree Pruning",
      "quesLink": "https://leetcode.com/problems/binary-tree-pruning/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "bus-routes": {
      "quesName": "Bus Routes",
      "quesLink": "https://leetcode.com/problems/bus-routes/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Breadth-First Search"]
    }
  },
  {
    "ambiguous-coordinates": {
      "quesName": "Ambiguous Coordinates",
      "quesLink": "https://leetcode.com/problems/ambiguous-coordinates/",
      "specialTag": "Medium",
      "tags": ["String", "Backtracking"]
    }
  },
  {
    "linked-list-components": {
      "quesName": "Linked List Components",
      "quesLink": "https://leetcode.com/problems/linked-list-components/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Linked List"]
    }
  },
  {
    "race-car": {
      "quesName": "Race Car",
      "quesLink": "https://leetcode.com/problems/race-car/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "most-common-word": {
      "quesName": "Most Common Word",
      "quesLink": "https://leetcode.com/problems/most-common-word/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Counting"]
    }
  },
  {
    "short-encoding-of-words": {
      "quesName": "Short Encoding of Words",
      "quesLink": "https://leetcode.com/problems/short-encoding-of-words/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Trie"]
    }
  },
  {
    "shortest-distance-to-a-character": {
      "quesName": "Shortest Distance to a Character",
      "quesLink": "https://leetcode.com/problems/shortest-distance-to-a-character/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "String"]
    }
  },
  {
    "card-flipping-game": {
      "quesName": "Card Flipping Game",
      "quesLink": "https://leetcode.com/problems/card-flipping-game/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "binary-trees-with-factors": {
      "quesName": "Binary Trees With Factors",
      "quesLink": "https://leetcode.com/problems/binary-trees-with-factors/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Dynamic Programming", "Sorting"]
    }
  },
  {
    "goat-latin": {
      "quesName": "Goat Latin",
      "quesLink": "https://leetcode.com/problems/goat-latin/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "friends-of-appropriate-ages": {
      "quesName": "Friends Of Appropriate Ages",
      "quesLink": "https://leetcode.com/problems/friends-of-appropriate-ages/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"]
    }
  },
  {
    "most-profit-assigning-work": {
      "quesName": "Most Profit Assigning Work",
      "quesLink": "https://leetcode.com/problems/most-profit-assigning-work/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Binary Search", "Greedy", "Sorting"]
    }
  },
  {
    "making-a-large-island": {
      "quesName": "Making A Large Island",
      "quesLink": "https://leetcode.com/problems/making-a-large-island/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "count-unique-characters-of-all-substrings-of-a-given-string": {
      "quesName": "Count Unique Characters of All Substrings of a Given String",
      "quesLink": "https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "String", "Dynamic Programming"]
    }
  },
  {
    "consecutive-numbers-sum": {
      "quesName": "Consecutive Numbers Sum",
      "quesLink": "https://leetcode.com/problems/consecutive-numbers-sum/",
      "specialTag": "Hard",
      "tags": ["Math", "Enumeration"]
    }
  },
  {
    "positions-of-large-groups": {
      "quesName": "Positions of Large Groups",
      "quesLink": "https://leetcode.com/problems/positions-of-large-groups/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "masking-personal-information": {
      "quesName": "Masking Personal Information",
      "quesLink": "https://leetcode.com/problems/masking-personal-information/",
      "specialTag": "Medium",
      "tags": ["String"]
    }
  },
  {
    "flipping-an-image": {
      "quesName": "Flipping an Image",
      "quesLink": "https://leetcode.com/problems/flipping-an-image/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Matrix", "Simulation"]
    }
  },
  {
    "find-and-replace-in-string": {
      "quesName": "Find And Replace in String",
      "quesLink": "https://leetcode.com/problems/find-and-replace-in-string/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Sorting"]
    }
  },
  {
    "sum-of-distances-in-tree": {
      "quesName": "Sum of Distances in Tree",
      "quesLink": "https://leetcode.com/problems/sum-of-distances-in-tree/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming", "Tree", "Depth-First Search", "Graph"]
    }
  },
  {
    "image-overlap": {
      "quesName": "Image Overlap",
      "quesLink": "https://leetcode.com/problems/image-overlap/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix"]
    }
  },
  {
    "rectangle-overlap": {
      "quesName": "Rectangle Overlap",
      "quesLink": "https://leetcode.com/problems/rectangle-overlap/",
      "specialTag": "Easy",
      "tags": ["Math", "Geometry"]
    }
  },
  {
    "new-21-game": {
      "quesName": "New 21 Game",
      "quesLink": "https://leetcode.com/problems/new-21-game/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "Dynamic Programming",
        "Sliding Window",
        "Probability and Statistics"
      ]
    }
  },
  {
    "push-dominoes": {
      "quesName": "Push Dominoes",
      "quesLink": "https://leetcode.com/problems/push-dominoes/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String", "Dynamic Programming"]
    }
  },
  {
    "similar-string-groups": {
      "quesName": "Similar String Groups",
      "quesLink": "https://leetcode.com/problems/similar-string-groups/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find"
      ]
    }
  },
  {
    "magic-squares-in-grid": {
      "quesName": "Magic Squares In Grid",
      "quesLink": "https://leetcode.com/problems/magic-squares-in-grid/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Matrix"]
    }
  },
  {
    "keys-and-rooms": {
      "quesName": "Keys and Rooms",
      "quesLink": "https://leetcode.com/problems/keys-and-rooms/",
      "specialTag": "Medium",
      "tags": ["Depth-First Search", "Breadth-First Search", "Graph"]
    }
  },
  {
    "split-array-into-fibonacci-sequence": {
      "quesName": "Split Array into Fibonacci Sequence",
      "quesLink": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/",
      "specialTag": "Medium",
      "tags": ["String", "Backtracking"]
    }
  },
  {
    "guess-the-word": {
      "quesName": "Guess the Word",
      "quesLink": "https://leetcode.com/problems/guess-the-word/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "String", "Interactive", "Game Theory"]
    }
  },
  {
    "backspace-string-compare": {
      "quesName": "Backspace String Compare",
      "quesLink": "https://leetcode.com/problems/backspace-string-compare/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String", "Stack", "Simulation"]
    }
  },
  {
    "longest-mountain-in-array": {
      "quesName": "Longest Mountain in Array",
      "quesLink": "https://leetcode.com/problems/longest-mountain-in-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Dynamic Programming", "Enumeration"]
    }
  },
  {
    "hand-of-straights": {
      "quesName": "Hand of Straights",
      "quesLink": "https://leetcode.com/problems/hand-of-straights/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Greedy", "Sorting"]
    }
  },
  {
    "shortest-path-visiting-all-nodes": {
      "quesName": "Shortest Path Visiting All Nodes",
      "quesLink": "https://leetcode.com/problems/shortest-path-visiting-all-nodes/",
      "specialTag": "Hard",
      "tags": [
        "Dynamic Programming",
        "Bit Manipulation",
        "Breadth-First Search",
        "Graph",
        "Bitmask"
      ]
    }
  },
  {
    "shifting-letters": {
      "quesName": "Shifting Letters",
      "quesLink": "https://leetcode.com/problems/shifting-letters/",
      "specialTag": "Medium",
      "tags": ["Array", "String"]
    }
  },
  {
    "maximize-distance-to-closest-person": {
      "quesName": "Maximize Distance to Closest Person",
      "quesLink": "https://leetcode.com/problems/maximize-distance-to-closest-person/",
      "specialTag": "Medium",
      "tags": ["Array"]
    }
  },
  {
    "rectangle-area-ii": {
      "quesName": "Rectangle Area II",
      "quesLink": "https://leetcode.com/problems/rectangle-area-ii/",
      "specialTag": "Hard",
      "tags": ["Array", "Segment Tree", "Line Sweep", "Ordered Set"]
    }
  },
  {
    "loud-and-rich": {
      "quesName": "Loud and Rich",
      "quesLink": "https://leetcode.com/problems/loud-and-rich/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Graph", "Topological Sort"]
    }
  },
  {
    "peak-index-in-a-mountain-array": {
      "quesName": "Peak Index in a Mountain Array",
      "quesLink": "https://leetcode.com/problems/peak-index-in-a-mountain-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "car-fleet": {
      "quesName": "Car Fleet",
      "quesLink": "https://leetcode.com/problems/car-fleet/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Sorting", "Monotonic Stack"]
    }
  },
  {
    "k-similar-strings": {
      "quesName": "K-Similar Strings",
      "quesLink": "https://leetcode.com/problems/k-similar-strings/",
      "specialTag": "Hard",
      "tags": ["String", "Breadth-First Search"]
    }
  },
  {
    "exam-room": {
      "quesName": "Exam Room",
      "quesLink": "https://leetcode.com/problems/exam-room/",
      "specialTag": "Medium",
      "tags": ["Design", "Heap (Priority Queue)", "Ordered Set"]
    }
  },
  {
    "score-of-parentheses": {
      "quesName": "Score of Parentheses",
      "quesLink": "https://leetcode.com/problems/score-of-parentheses/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "minimum-cost-to-hire-k-workers": {
      "quesName": "Minimum Cost to Hire K Workers",
      "quesLink": "https://leetcode.com/problems/minimum-cost-to-hire-k-workers/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "mirror-reflection": {
      "quesName": "Mirror Reflection",
      "quesLink": "https://leetcode.com/problems/mirror-reflection/",
      "specialTag": "Medium",
      "tags": ["Math", "Geometry", "Number Theory"]
    }
  },
  {
    "buddy-strings": {
      "quesName": "Buddy Strings",
      "quesLink": "https://leetcode.com/problems/buddy-strings/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String"]
    }
  },
  {
    "lemonade-change": {
      "quesName": "Lemonade Change",
      "quesLink": "https://leetcode.com/problems/lemonade-change/",
      "specialTag": "Easy",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "score-after-flipping-matrix": {
      "quesName": "Score After Flipping Matrix",
      "quesLink": "https://leetcode.com/problems/score-after-flipping-matrix/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Bit Manipulation", "Matrix"]
    }
  },
  {
    "shortest-subarray-with-sum-at-least-k": {
      "quesName": "Shortest Subarray with Sum at Least K",
      "quesLink": "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Queue",
        "Sliding Window",
        "Heap (Priority Queue)",
        "Prefix Sum",
        "Monotonic Queue"
      ]
    }
  },
  {
    "all-nodes-distance-k-in-binary-tree": {
      "quesName": "All Nodes Distance K in Binary Tree",
      "quesLink": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "shortest-path-to-get-all-keys": {
      "quesName": "Shortest Path to Get All Keys",
      "quesLink": "https://leetcode.com/problems/shortest-path-to-get-all-keys/",
      "specialTag": "Hard",
      "tags": ["Array", "Bit Manipulation", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "smallest-subtree-with-all-the-deepest-nodes": {
      "quesName": "Smallest Subtree with all the Deepest Nodes",
      "quesLink": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "prime-palindrome": {
      "quesName": "Prime Palindrome",
      "quesLink": "https://leetcode.com/problems/prime-palindrome/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "transpose-matrix": {
      "quesName": "Transpose Matrix",
      "quesLink": "https://leetcode.com/problems/transpose-matrix/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "binary-gap": {
      "quesName": "Binary Gap",
      "quesLink": "https://leetcode.com/problems/binary-gap/",
      "specialTag": "Easy",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "reordered-power-of-2": {
      "quesName": "Reordered Power of 2",
      "quesLink": "https://leetcode.com/problems/reordered-power-of-2/",
      "specialTag": "Medium",
      "tags": ["Math", "Sorting", "Counting", "Enumeration"]
    }
  },
  {
    "advantage-shuffle": {
      "quesName": "Advantage Shuffle",
      "quesLink": "https://leetcode.com/problems/advantage-shuffle/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Greedy", "Sorting"]
    }
  },
  {
    "minimum-number-of-refueling-stops": {
      "quesName": "Minimum Number of Refueling Stops",
      "quesLink": "https://leetcode.com/problems/minimum-number-of-refueling-stops/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "leaf-similar-trees": {
      "quesName": "Leaf-Similar Trees",
      "quesLink": "https://leetcode.com/problems/leaf-similar-trees/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "length-of-longest-fibonacci-subsequence": {
      "quesName": "Length of Longest Fibonacci Subsequence",
      "quesLink": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Dynamic Programming"]
    }
  },
  {
    "walking-robot-simulation": {
      "quesName": "Walking Robot Simulation",
      "quesLink": "https://leetcode.com/problems/walking-robot-simulation/",
      "specialTag": "Medium",
      "tags": ["Array", "Simulation"]
    }
  },
  {
    "koko-eating-bananas": {
      "quesName": "Koko Eating Bananas",
      "quesLink": "https://leetcode.com/problems/koko-eating-bananas/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "middle-of-the-linked-list": {
      "quesName": "Middle of the Linked List",
      "quesLink": "https://leetcode.com/problems/middle-of-the-linked-list/",
      "specialTag": "Easy",
      "tags": ["Linked List", "Two Pointers"]
    }
  },
  {
    "stone-game": {
      "quesName": "Stone Game",
      "quesLink": "https://leetcode.com/problems/stone-game/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Dynamic Programming", "Game Theory"]
    }
  },
  {
    "nth-magical-number": {
      "quesName": "Nth Magical Number",
      "quesLink": "https://leetcode.com/problems/nth-magical-number/",
      "specialTag": "Hard",
      "tags": ["Math", "Binary Search"]
    }
  },
  {
    "profitable-schemes": {
      "quesName": "Profitable Schemes",
      "quesLink": "https://leetcode.com/problems/profitable-schemes/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "decoded-string-at-index": {
      "quesName": "Decoded String at Index",
      "quesLink": "https://leetcode.com/problems/decoded-string-at-index/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "boats-to-save-people": {
      "quesName": "Boats to Save People",
      "quesLink": "https://leetcode.com/problems/boats-to-save-people/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Greedy", "Sorting"]
    }
  },
  {
    "reachable-nodes-in-subdivided-graph": {
      "quesName": "Reachable Nodes In Subdivided Graph",
      "quesLink": "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph/",
      "specialTag": "Hard",
      "tags": ["Graph", "Heap (Priority Queue)", "Shortest Path"]
    }
  },
  {
    "projection-area-of-3d-shapes": {
      "quesName": "Projection Area of 3D Shapes",
      "quesLink": "https://leetcode.com/problems/projection-area-of-3d-shapes/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry", "Matrix"]
    }
  },
  {
    "uncommon-words-from-two-sentences": {
      "quesName": "Uncommon Words from Two Sentences",
      "quesLink": "https://leetcode.com/problems/uncommon-words-from-two-sentences/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String"]
    }
  },
  {
    "spiral-matrix-iii": {
      "quesName": "Spiral Matrix III",
      "quesLink": "https://leetcode.com/problems/spiral-matrix-iii/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "possible-bipartition": {
      "quesName": "Possible Bipartition",
      "quesLink": "https://leetcode.com/problems/possible-bipartition/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "super-egg-drop": {
      "quesName": "Super Egg Drop",
      "quesLink": "https://leetcode.com/problems/super-egg-drop/",
      "specialTag": "Hard",
      "tags": ["Math", "Binary Search", "Dynamic Programming"]
    }
  },
  {
    "fair-candy-swap": {
      "quesName": "Fair Candy Swap",
      "quesLink": "https://leetcode.com/problems/fair-candy-swap/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Binary Search", "Sorting"]
    }
  },
  {
    "construct-binary-tree-from-preorder-and-postorder-traversal": {
      "quesName": "Construct Binary Tree from Preorder and Postorder Traversal",
      "quesLink": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Divide and Conquer",
        "Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "find-and-replace-pattern": {
      "quesName": "Find and Replace Pattern",
      "quesLink": "https://leetcode.com/problems/find-and-replace-pattern/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "sum-of-subsequence-widths": {
      "quesName": "Sum of Subsequence Widths",
      "quesLink": "https://leetcode.com/problems/sum-of-subsequence-widths/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Sorting"]
    }
  },
  {
    "surface-area-of-3d-shapes": {
      "quesName": "Surface Area of 3D Shapes",
      "quesLink": "https://leetcode.com/problems/surface-area-of-3d-shapes/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry", "Matrix"]
    }
  },
  {
    "groups-of-special-equivalent-strings": {
      "quesName": "Groups of Special-Equivalent Strings",
      "quesLink": "https://leetcode.com/problems/groups-of-special-equivalent-strings/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "all-possible-full-binary-trees": {
      "quesName": "All Possible Full Binary Trees",
      "quesLink": "https://leetcode.com/problems/all-possible-full-binary-trees/",
      "specialTag": "Medium",
      "tags": [
        "Dynamic Programming",
        "Tree",
        "Recursion",
        "Memoization",
        "Binary Tree"
      ]
    }
  },
  {
    "maximum-frequency-stack": {
      "quesName": "Maximum Frequency Stack",
      "quesLink": "https://leetcode.com/problems/maximum-frequency-stack/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "Stack", "Design", "Ordered Set"]
    }
  },
  {
    "monotonic-array": {
      "quesName": "Monotonic Array",
      "quesLink": "https://leetcode.com/problems/monotonic-array/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "increasing-order-search-tree": {
      "quesName": "Increasing Order Search Tree",
      "quesLink": "https://leetcode.com/problems/increasing-order-search-tree/",
      "specialTag": "Easy",
      "tags": [
        "Stack",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "bitwise-ors-of-subarrays": {
      "quesName": "Bitwise ORs of Subarrays",
      "quesLink": "https://leetcode.com/problems/bitwise-ors-of-subarrays/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Bit Manipulation"]
    }
  },
  {
    "orderly-queue": {
      "quesName": "Orderly Queue",
      "quesLink": "https://leetcode.com/problems/orderly-queue/",
      "specialTag": "Hard",
      "tags": ["Math", "String", "Sorting"]
    }
  },
  {
    "rle-iterator": {
      "quesName": "RLE Iterator",
      "quesLink": "https://leetcode.com/problems/rle-iterator/",
      "specialTag": "Medium",
      "tags": ["Array", "Design", "Counting", "Iterator"]
    }
  },
  {
    "online-stock-span": {
      "quesName": "Online Stock Span",
      "quesLink": "https://leetcode.com/problems/online-stock-span/",
      "specialTag": "Medium",
      "tags": ["Stack", "Design", "Monotonic Stack", "Data Stream"]
    }
  },
  {
    "numbers-at-most-n-given-digit-set": {
      "quesName": "Numbers At Most N Given Digit Set",
      "quesLink": "https://leetcode.com/problems/numbers-at-most-n-given-digit-set/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Math",
        "String",
        "Binary Search",
        "Dynamic Programming"
      ]
    }
  },
  {
    "valid-permutations-for-di-sequence": {
      "quesName": "Valid Permutations for DI Sequence",
      "quesLink": "https://leetcode.com/problems/valid-permutations-for-di-sequence/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming", "Prefix Sum"]
    }
  },
  {
    "fruit-into-baskets": {
      "quesName": "Fruit Into Baskets",
      "quesLink": "https://leetcode.com/problems/fruit-into-baskets/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Sliding Window"]
    }
  },
  {
    "sort-array-by-parity": {
      "quesName": "Sort Array By Parity",
      "quesLink": "https://leetcode.com/problems/sort-array-by-parity/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "super-palindromes": {
      "quesName": "Super Palindromes",
      "quesLink": "https://leetcode.com/problems/super-palindromes/",
      "specialTag": "Hard",
      "tags": ["Math", "Enumeration"]
    }
  },
  {
    "sum-of-subarray-minimums": {
      "quesName": "Sum of Subarray Minimums",
      "quesLink": "https://leetcode.com/problems/sum-of-subarray-minimums/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Stack", "Monotonic Stack"]
    }
  },
  {
    "smallest-range-i": {
      "quesName": "Smallest Range I",
      "quesLink": "https://leetcode.com/problems/smallest-range-i/",
      "specialTag": "Easy",
      "tags": ["Array", "Math"]
    }
  },
  {
    "snakes-and-ladders": {
      "quesName": "Snakes and Ladders",
      "quesLink": "https://leetcode.com/problems/snakes-and-ladders/",
      "specialTag": "Medium",
      "tags": ["Array", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "smallest-range-ii": {
      "quesName": "Smallest Range II",
      "quesLink": "https://leetcode.com/problems/smallest-range-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Greedy", "Sorting"]
    }
  },
  {
    "online-election": {
      "quesName": "Online Election",
      "quesLink": "https://leetcode.com/problems/online-election/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Binary Search", "Design"]
    }
  },
  {
    "sort-an-array": {
      "quesName": "Sort an Array",
      "quesLink": "https://leetcode.com/problems/sort-an-array/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Divide and Conquer",
        "Sorting",
        "Heap (Priority Queue)",
        "Merge Sort",
        "Bucket Sort",
        "Radix Sort",
        "Counting Sort"
      ]
    }
  },
  {
    "cat-and-mouse": {
      "quesName": "Cat and Mouse",
      "quesLink": "https://leetcode.com/problems/cat-and-mouse/",
      "specialTag": "Hard",
      "tags": [
        "Math",
        "Dynamic Programming",
        "Graph",
        "Topological Sort",
        "Memoization",
        "Game Theory"
      ]
    }
  },
  {
    "x-of-a-kind-in-a-deck-of-cards": {
      "quesName": "X of a Kind in a Deck of Cards",
      "quesLink": "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Math", "Counting", "Number Theory"]
    }
  },
  {
    "partition-array-into-disjoint-intervals": {
      "quesName": "Partition Array into Disjoint Intervals",
      "quesLink": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/",
      "specialTag": "Medium",
      "tags": ["Array"]
    }
  },
  {
    "word-subsets": {
      "quesName": "Word Subsets",
      "quesLink": "https://leetcode.com/problems/word-subsets/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "reverse-only-letters": {
      "quesName": "Reverse Only Letters",
      "quesLink": "https://leetcode.com/problems/reverse-only-letters/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "maximum-sum-circular-subarray": {
      "quesName": "Maximum Sum Circular Subarray",
      "quesLink": "https://leetcode.com/problems/maximum-sum-circular-subarray/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Divide and Conquer",
        "Dynamic Programming",
        "Queue",
        "Monotonic Queue"
      ]
    }
  },
  {
    "complete-binary-tree-inserter": {
      "quesName": "Complete Binary Tree Inserter",
      "quesLink": "https://leetcode.com/problems/complete-binary-tree-inserter/",
      "specialTag": "Medium",
      "tags": ["Tree", "Breadth-First Search", "Design", "Binary Tree"]
    }
  },
  {
    "number-of-music-playlists": {
      "quesName": "Number of Music Playlists",
      "quesLink": "https://leetcode.com/problems/number-of-music-playlists/",
      "specialTag": "Hard",
      "tags": ["Math", "Dynamic Programming", "Combinatorics"]
    }
  },
  {
    "minimum-add-to-make-parentheses-valid": {
      "quesName": "Minimum Add to Make Parentheses Valid",
      "quesLink": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Greedy"]
    }
  },
  {
    "sort-array-by-parity-ii": {
      "quesName": "Sort Array By Parity II",
      "quesLink": "https://leetcode.com/problems/sort-array-by-parity-ii/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "3sum-with-multiplicity": {
      "quesName": "3Sum With Multiplicity",
      "quesLink": "https://leetcode.com/problems/3sum-with-multiplicity/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Two Pointers", "Sorting", "Counting"]
    }
  },
  {
    "minimize-malware-spread": {
      "quesName": "Minimize Malware Spread",
      "quesLink": "https://leetcode.com/problems/minimize-malware-spread/",
      "specialTag": "Hard",
      "tags": [
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "long-pressed-name": {
      "quesName": "Long Pressed Name",
      "quesLink": "https://leetcode.com/problems/long-pressed-name/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "flip-string-to-monotone-increasing": {
      "quesName": "Flip String to Monotone Increasing",
      "quesLink": "https://leetcode.com/problems/flip-string-to-monotone-increasing/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "three-equal-parts": {
      "quesName": "Three Equal Parts",
      "quesLink": "https://leetcode.com/problems/three-equal-parts/",
      "specialTag": "Hard",
      "tags": ["Array", "Math"]
    }
  },
  {
    "minimize-malware-spread-ii": {
      "quesName": "Minimize Malware Spread II",
      "quesLink": "https://leetcode.com/problems/minimize-malware-spread-ii/",
      "specialTag": "Hard",
      "tags": [
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "unique-email-addresses": {
      "quesName": "Unique Email Addresses",
      "quesLink": "https://leetcode.com/problems/unique-email-addresses/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "binary-subarrays-with-sum": {
      "quesName": "Binary Subarrays With Sum",
      "quesLink": "https://leetcode.com/problems/binary-subarrays-with-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Sliding Window", "Prefix Sum"]
    }
  },
  {
    "minimum-falling-path-sum": {
      "quesName": "Minimum Falling Path Sum",
      "quesLink": "https://leetcode.com/problems/minimum-falling-path-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "beautiful-array": {
      "quesName": "Beautiful Array",
      "quesLink": "https://leetcode.com/problems/beautiful-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Divide and Conquer"]
    }
  },
  {
    "number-of-recent-calls": {
      "quesName": "Number of Recent Calls",
      "quesLink": "https://leetcode.com/problems/number-of-recent-calls/",
      "specialTag": "Easy",
      "tags": ["Design", "Queue", "Data Stream"]
    }
  },
  {
    "shortest-bridge": {
      "quesName": "Shortest Bridge",
      "quesLink": "https://leetcode.com/problems/shortest-bridge/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "knight-dialer": {
      "quesName": "Knight Dialer",
      "quesLink": "https://leetcode.com/problems/knight-dialer/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "stamping-the-sequence": {
      "quesName": "Stamping The Sequence",
      "quesLink": "https://leetcode.com/problems/stamping-the-sequence/",
      "specialTag": "Hard",
      "tags": ["String", "Stack", "Greedy", "Queue"]
    }
  },
  {
    "reorder-data-in-log-files": {
      "quesName": "Reorder Data in Log Files",
      "quesLink": "https://leetcode.com/problems/reorder-data-in-log-files/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Sorting"]
    }
  },
  {
    "range-sum-of-bst": {
      "quesName": "Range Sum of BST",
      "quesLink": "https://leetcode.com/problems/range-sum-of-bst/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "minimum-area-rectangle": {
      "quesName": "Minimum Area Rectangle",
      "quesLink": "https://leetcode.com/problems/minimum-area-rectangle/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math", "Geometry", "Sorting"]
    }
  },
  {
    "distinct-subsequences-ii": {
      "quesName": "Distinct Subsequences II",
      "quesLink": "https://leetcode.com/problems/distinct-subsequences-ii/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "valid-mountain-array": {
      "quesName": "Valid Mountain Array",
      "quesLink": "https://leetcode.com/problems/valid-mountain-array/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "di-string-match": {
      "quesName": "DI String Match",
      "quesLink": "https://leetcode.com/problems/di-string-match/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "String", "Greedy"]
    }
  },
  {
    "find-the-shortest-superstring": {
      "quesName": "Find the Shortest Superstring",
      "quesLink": "https://leetcode.com/problems/find-the-shortest-superstring/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "String",
        "Dynamic Programming",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "delete-columns-to-make-sorted": {
      "quesName": "Delete Columns to Make Sorted",
      "quesLink": "https://leetcode.com/problems/delete-columns-to-make-sorted/",
      "specialTag": "Easy",
      "tags": ["Array", "String"]
    }
  },
  {
    "minimum-increment-to-make-array-unique": {
      "quesName": "Minimum Increment to Make Array Unique",
      "quesLink": "https://leetcode.com/problems/minimum-increment-to-make-array-unique/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Sorting", "Counting"]
    }
  },
  {
    "validate-stack-sequences": {
      "quesName": "Validate Stack Sequences",
      "quesLink": "https://leetcode.com/problems/validate-stack-sequences/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Simulation"]
    }
  },
  {
    "most-stones-removed-with-same-row-or-column": {
      "quesName": "Most Stones Removed with Same Row or Column",
      "quesLink": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Depth-First Search", "Union Find", "Graph"]
    }
  },
  {
    "bag-of-tokens": {
      "quesName": "Bag of Tokens",
      "quesLink": "https://leetcode.com/problems/bag-of-tokens/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Greedy", "Sorting"]
    }
  },
  {
    "largest-time-for-given-digits": {
      "quesName": "Largest Time for Given Digits",
      "quesLink": "https://leetcode.com/problems/largest-time-for-given-digits/",
      "specialTag": "Medium",
      "tags": ["String", "Enumeration"]
    }
  },
  {
    "reveal-cards-in-increasing-order": {
      "quesName": "Reveal Cards In Increasing Order",
      "quesLink": "https://leetcode.com/problems/reveal-cards-in-increasing-order/",
      "specialTag": "Medium",
      "tags": ["Array", "Queue", "Sorting", "Simulation"]
    }
  },
  {
    "flip-equivalent-binary-trees": {
      "quesName": "Flip Equivalent Binary Trees",
      "quesLink": "https://leetcode.com/problems/flip-equivalent-binary-trees/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "largest-component-size-by-common-factor": {
      "quesName": "Largest Component Size by Common Factor",
      "quesLink": "https://leetcode.com/problems/largest-component-size-by-common-factor/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Math", "Union Find", "Number Theory"]
    }
  },
  {
    "verifying-an-alien-dictionary": {
      "quesName": "Verifying an Alien Dictionary",
      "quesLink": "https://leetcode.com/problems/verifying-an-alien-dictionary/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "array-of-doubled-pairs": {
      "quesName": "Array of Doubled Pairs",
      "quesLink": "https://leetcode.com/problems/array-of-doubled-pairs/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Greedy", "Sorting"]
    }
  },
  {
    "delete-columns-to-make-sorted-ii": {
      "quesName": "Delete Columns to Make Sorted II",
      "quesLink": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Greedy"]
    }
  },
  {
    "tallest-billboard": {
      "quesName": "Tallest Billboard",
      "quesLink": "https://leetcode.com/problems/tallest-billboard/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "prison-cells-after-n-days": {
      "quesName": "Prison Cells After N Days",
      "quesLink": "https://leetcode.com/problems/prison-cells-after-n-days/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math", "Bit Manipulation"]
    }
  },
  {
    "check-completeness-of-a-binary-tree": {
      "quesName": "Check Completeness of a Binary Tree",
      "quesLink": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/",
      "specialTag": "Medium",
      "tags": ["Tree", "Breadth-First Search", "Binary Tree"]
    }
  },
  {
    "regions-cut-by-slashes": {
      "quesName": "Regions Cut By Slashes",
      "quesLink": "https://leetcode.com/problems/regions-cut-by-slashes/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "delete-columns-to-make-sorted-iii": {
      "quesName": "Delete Columns to Make Sorted III",
      "quesLink": "https://leetcode.com/problems/delete-columns-to-make-sorted-iii/",
      "specialTag": "Hard",
      "tags": ["Array", "String", "Dynamic Programming"]
    }
  },
  {
    "n-repeated-element-in-size-2n-array": {
      "quesName": "N-Repeated Element in Size 2N Array",
      "quesLink": "https://leetcode.com/problems/n-repeated-element-in-size-2n-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "maximum-width-ramp": {
      "quesName": "Maximum Width Ramp",
      "quesLink": "https://leetcode.com/problems/maximum-width-ramp/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Monotonic Stack"]
    }
  },
  {
    "minimum-area-rectangle-ii": {
      "quesName": "Minimum Area Rectangle II",
      "quesLink": "https://leetcode.com/problems/minimum-area-rectangle-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "least-operators-to-express-number": {
      "quesName": "Least Operators to Express Number",
      "quesLink": "https://leetcode.com/problems/least-operators-to-express-number/",
      "specialTag": "Hard",
      "tags": ["Math", "Dynamic Programming", "Memoization"]
    }
  },
  {
    "univalued-binary-tree": {
      "quesName": "Univalued Binary Tree",
      "quesLink": "https://leetcode.com/problems/univalued-binary-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "vowel-spellchecker": {
      "quesName": "Vowel Spellchecker",
      "quesLink": "https://leetcode.com/problems/vowel-spellchecker/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "numbers-with-same-consecutive-differences": {
      "quesName": "Numbers With Same Consecutive Differences",
      "quesLink": "https://leetcode.com/problems/numbers-with-same-consecutive-differences/",
      "specialTag": "Medium",
      "tags": ["Backtracking", "Breadth-First Search"]
    }
  },
  {
    "binary-tree-cameras": {
      "quesName": "Binary Tree Cameras",
      "quesLink": "https://leetcode.com/problems/binary-tree-cameras/",
      "specialTag": "Hard",
      "tags": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "pancake-sorting": {
      "quesName": "Pancake Sorting",
      "quesLink": "https://leetcode.com/problems/pancake-sorting/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers", "Greedy", "Sorting"]
    }
  },
  {
    "powerful-integers": {
      "quesName": "Powerful Integers",
      "quesLink": "https://leetcode.com/problems/powerful-integers/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math"]
    }
  },
  {
    "flip-binary-tree-to-match-preorder-traversal": {
      "quesName": "Flip Binary Tree To Match Preorder Traversal",
      "quesLink": "https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "equal-rational-numbers": {
      "quesName": "Equal Rational Numbers",
      "quesLink": "https://leetcode.com/problems/equal-rational-numbers/",
      "specialTag": "Hard",
      "tags": ["Math", "String"]
    }
  },
  {
    "k-closest-points-to-origin": {
      "quesName": "K Closest Points to Origin",
      "quesLink": "https://leetcode.com/problems/k-closest-points-to-origin/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Math",
        "Divide and Conquer",
        "Geometry",
        "Sorting",
        "Heap (Priority Queue)",
        "Quickselect"
      ]
    }
  },
  {
    "subarray-sums-divisible-by-k": {
      "quesName": "Subarray Sums Divisible by K",
      "quesLink": "https://leetcode.com/problems/subarray-sums-divisible-by-k/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Prefix Sum"]
    }
  },
  {
    "odd-even-jump": {
      "quesName": "Odd Even Jump",
      "quesLink": "https://leetcode.com/problems/odd-even-jump/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Monotonic Stack",
        "Ordered Set"
      ]
    }
  },
  {
    "largest-perimeter-triangle": {
      "quesName": "Largest Perimeter Triangle",
      "quesLink": "https://leetcode.com/problems/largest-perimeter-triangle/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Greedy", "Sorting"]
    }
  },
  {
    "squares-of-a-sorted-array": {
      "quesName": "Squares of a Sorted Array",
      "quesLink": "https://leetcode.com/problems/squares-of-a-sorted-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Sorting"]
    }
  },
  {
    "longest-turbulent-subarray": {
      "quesName": "Longest Turbulent Subarray",
      "quesLink": "https://leetcode.com/problems/longest-turbulent-subarray/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Sliding Window"]
    }
  },
  {
    "distribute-coins-in-binary-tree": {
      "quesName": "Distribute Coins in Binary Tree",
      "quesLink": "https://leetcode.com/problems/distribute-coins-in-binary-tree/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "unique-paths-iii": {
      "quesName": "Unique Paths III",
      "quesLink": "https://leetcode.com/problems/unique-paths-iii/",
      "specialTag": "Hard",
      "tags": ["Array", "Backtracking", "Bit Manipulation", "Matrix"]
    }
  },
  {
    "time-based-key-value-store": {
      "quesName": "Time Based Key-Value Store",
      "quesLink": "https://leetcode.com/problems/time-based-key-value-store/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Binary Search", "Design"]
    }
  },
  {
    "triples-with-bitwise-and-equal-to-zero": {
      "quesName": "Triples with Bitwise AND Equal To Zero",
      "quesLink": "https://leetcode.com/problems/triples-with-bitwise-and-equal-to-zero/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Bit Manipulation"]
    }
  },
  {
    "minimum-cost-for-tickets": {
      "quesName": "Minimum Cost For Tickets",
      "quesLink": "https://leetcode.com/problems/minimum-cost-for-tickets/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "string-without-aaa-or-bbb": {
      "quesName": "String Without AAA or BBB",
      "quesLink": "https://leetcode.com/problems/string-without-aaa-or-bbb/",
      "specialTag": "Medium",
      "tags": ["String", "Greedy"]
    }
  },
  {
    "sum-of-even-numbers-after-queries": {
      "quesName": "Sum of Even Numbers After Queries",
      "quesLink": "https://leetcode.com/problems/sum-of-even-numbers-after-queries/",
      "specialTag": "Medium",
      "tags": ["Array", "Simulation"]
    }
  },
  {
    "interval-list-intersections": {
      "quesName": "Interval List Intersections",
      "quesLink": "https://leetcode.com/problems/interval-list-intersections/",
      "specialTag": "Medium",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "vertical-order-traversal-of-a-binary-tree": {
      "quesName": "Vertical Order Traversal of a Binary Tree",
      "quesLink": "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/",
      "specialTag": "Hard",
      "tags": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "smallest-string-starting-from-leaf": {
      "quesName": "Smallest String Starting From Leaf",
      "quesLink": "https://leetcode.com/problems/smallest-string-starting-from-leaf/",
      "specialTag": "Medium",
      "tags": ["String", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "add-to-array-form-of-integer": {
      "quesName": "Add to Array-Form of Integer",
      "quesLink": "https://leetcode.com/problems/add-to-array-form-of-integer/",
      "specialTag": "Easy",
      "tags": ["Array", "Math"]
    }
  },
  {
    "satisfiability-of-equality-equations": {
      "quesName": "Satisfiability of Equality Equations",
      "quesLink": "https://leetcode.com/problems/satisfiability-of-equality-equations/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Union Find", "Graph"]
    }
  },
  {
    "broken-calculator": {
      "quesName": "Broken Calculator",
      "quesLink": "https://leetcode.com/problems/broken-calculator/",
      "specialTag": "Medium",
      "tags": ["Math", "Greedy"]
    }
  },
  {
    "subarrays-with-k-different-integers": {
      "quesName": "Subarrays with K Different Integers",
      "quesLink": "https://leetcode.com/problems/subarrays-with-k-different-integers/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Sliding Window", "Counting"]
    }
  },
  {
    "cousins-in-binary-tree": {
      "quesName": "Cousins in Binary Tree",
      "quesLink": "https://leetcode.com/problems/cousins-in-binary-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "rotting-oranges": {
      "quesName": "Rotting Oranges",
      "quesLink": "https://leetcode.com/problems/rotting-oranges/",
      "specialTag": "Medium",
      "tags": ["Array", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "minimum-number-of-k-consecutive-bit-flips": {
      "quesName": "Minimum Number of K Consecutive Bit Flips",
      "quesLink": "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Bit Manipulation",
        "Queue",
        "Sliding Window",
        "Prefix Sum"
      ]
    }
  },
  {
    "number-of-squareful-arrays": {
      "quesName": "Number of Squareful Arrays",
      "quesLink": "https://leetcode.com/problems/number-of-squareful-arrays/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "find-the-town-judge": {
      "quesName": "Find the Town Judge",
      "quesLink": "https://leetcode.com/problems/find-the-town-judge/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Graph"]
    }
  },
  {
    "maximum-binary-tree-ii": {
      "quesName": "Maximum Binary Tree II",
      "quesLink": "https://leetcode.com/problems/maximum-binary-tree-ii/",
      "specialTag": "Medium",
      "tags": ["Tree", "Binary Tree"]
    }
  },
  {
    "available-captures-for-rook": {
      "quesName": "Available Captures for Rook",
      "quesLink": "https://leetcode.com/problems/available-captures-for-rook/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "minimum-cost-to-merge-stones": {
      "quesName": "Minimum Cost to Merge Stones",
      "quesLink": "https://leetcode.com/problems/minimum-cost-to-merge-stones/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Prefix Sum"]
    }
  },
  {
    "grid-illumination": {
      "quesName": "Grid Illumination",
      "quesLink": "https://leetcode.com/problems/grid-illumination/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "find-common-characters": {
      "quesName": "Find Common Characters",
      "quesLink": "https://leetcode.com/problems/find-common-characters/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "check-if-word-is-valid-after-substitutions": {
      "quesName": "Check If Word Is Valid After Substitutions",
      "quesLink": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "max-consecutive-ones-iii": {
      "quesName": "Max Consecutive Ones III",
      "quesLink": "https://leetcode.com/problems/max-consecutive-ones-iii/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Sliding Window", "Prefix Sum"]
    }
  },
  {
    "maximize-sum-of-array-after-k-negations": {
      "quesName": "Maximize Sum Of Array After K Negations",
      "quesLink": "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations/",
      "specialTag": "Easy",
      "tags": ["Array", "Greedy", "Sorting"]
    }
  },
  {
    "clumsy-factorial": {
      "quesName": "Clumsy Factorial",
      "quesLink": "https://leetcode.com/problems/clumsy-factorial/",
      "specialTag": "Medium",
      "tags": ["Math", "Stack", "Simulation"]
    }
  },
  {
    "minimum-domino-rotations-for-equal-row": {
      "quesName": "Minimum Domino Rotations For Equal Row",
      "quesLink": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "construct-binary-search-tree-from-preorder-traversal": {
      "quesName": "Construct Binary Search Tree from Preorder Traversal",
      "quesLink": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Stack",
        "Tree",
        "Binary Search Tree",
        "Monotonic Stack",
        "Binary Tree"
      ]
    }
  },
  {
    "complement-of-base-10-integer": {
      "quesName": "Complement of Base 10 Integer",
      "quesLink": "https://leetcode.com/problems/complement-of-base-10-integer/",
      "specialTag": "Easy",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "pairs-of-songs-with-total-durations-divisible-by-60": {
      "quesName": "Pairs of Songs With Total Durations Divisible by 60",
      "quesLink": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Counting"]
    }
  },
  {
    "capacity-to-ship-packages-within-d-days": {
      "quesName": "Capacity To Ship Packages Within D Days",
      "quesLink": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "numbers-with-repeated-digits": {
      "quesName": "Numbers With Repeated Digits",
      "quesLink": "https://leetcode.com/problems/numbers-with-repeated-digits/",
      "specialTag": "Hard",
      "tags": ["Math", "Dynamic Programming"]
    }
  },
  {
    "partition-array-into-three-parts-with-equal-sum": {
      "quesName": "Partition Array Into Three Parts With Equal Sum",
      "quesLink": "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum/",
      "specialTag": "Easy",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "best-sightseeing-pair": {
      "quesName": "Best Sightseeing Pair",
      "quesLink": "https://leetcode.com/problems/best-sightseeing-pair/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "smallest-integer-divisible-by-k": {
      "quesName": "Smallest Integer Divisible by K",
      "quesLink": "https://leetcode.com/problems/smallest-integer-divisible-by-k/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Math"]
    }
  },
  {
    "binary-string-with-substrings-representing-1-to-n": {
      "quesName": "Binary String With Substrings Representing 1 To N",
      "quesLink": "https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n/",
      "specialTag": "Medium",
      "tags": ["String"]
    }
  },
  {
    "convert-to-base-2": {
      "quesName": "Convert to Base -2",
      "quesLink": "https://leetcode.com/problems/convert-to-base-2/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "binary-prefix-divisible-by-5": {
      "quesName": "Binary Prefix Divisible By 5",
      "quesLink": "https://leetcode.com/problems/binary-prefix-divisible-by-5/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "next-greater-node-in-linked-list": {
      "quesName": "Next Greater Node In Linked List",
      "quesLink": "https://leetcode.com/problems/next-greater-node-in-linked-list/",
      "specialTag": "Medium",
      "tags": ["Array", "Linked List", "Stack", "Monotonic Stack"]
    }
  },
  {
    "number-of-enclaves": {
      "quesName": "Number of Enclaves",
      "quesLink": "https://leetcode.com/problems/number-of-enclaves/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "remove-outermost-parentheses": {
      "quesName": "Remove Outermost Parentheses",
      "quesLink": "https://leetcode.com/problems/remove-outermost-parentheses/",
      "specialTag": "Easy",
      "tags": ["String", "Stack"]
    }
  },
  {
    "sum-of-root-to-leaf-binary-numbers": {
      "quesName": "Sum of Root To Leaf Binary Numbers",
      "quesLink": "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers/",
      "specialTag": "Easy",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "camelcase-matching": {
      "quesName": "Camelcase Matching",
      "quesLink": "https://leetcode.com/problems/camelcase-matching/",
      "specialTag": "Medium",
      "tags": ["Two Pointers", "String", "Trie", "String Matching"]
    }
  },
  {
    "video-stitching": {
      "quesName": "Video Stitching",
      "quesLink": "https://leetcode.com/problems/video-stitching/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "divisor-game": {
      "quesName": "Divisor Game",
      "quesLink": "https://leetcode.com/problems/divisor-game/",
      "specialTag": "Easy",
      "tags": ["Math", "Dynamic Programming", "Brainteaser", "Game Theory"]
    }
  },
  {
    "maximum-difference-between-node-and-ancestor": {
      "quesName": "Maximum Difference Between Node and Ancestor",
      "quesLink": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "longest-arithmetic-subsequence": {
      "quesName": "Longest Arithmetic Subsequence",
      "quesLink": "https://leetcode.com/problems/longest-arithmetic-subsequence/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Binary Search", "Dynamic Programming"]
    }
  },
  {
    "recover-a-tree-from-preorder-traversal": {
      "quesName": "Recover a Tree From Preorder Traversal",
      "quesLink": "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal/",
      "specialTag": "Hard",
      "tags": ["String", "Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "two-city-scheduling": {
      "quesName": "Two City Scheduling",
      "quesLink": "https://leetcode.com/problems/two-city-scheduling/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Sorting"]
    }
  },
  {
    "matrix-cells-in-distance-order": {
      "quesName": "Matrix Cells in Distance Order",
      "quesLink": "https://leetcode.com/problems/matrix-cells-in-distance-order/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry", "Sorting", "Matrix"]
    }
  },
  {
    "maximum-sum-of-two-non-overlapping-subarrays": {
      "quesName": "Maximum Sum of Two Non-Overlapping Subarrays",
      "quesLink": "https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Sliding Window"]
    }
  },
  {
    "stream-of-characters": {
      "quesName": "Stream of Characters",
      "quesLink": "https://leetcode.com/problems/stream-of-characters/",
      "specialTag": "Hard",
      "tags": ["Array", "String", "Design", "Trie", "Data Stream"]
    }
  },
  {
    "moving-stones-until-consecutive": {
      "quesName": "Moving Stones Until Consecutive",
      "quesLink": "https://leetcode.com/problems/moving-stones-until-consecutive/",
      "specialTag": "Medium",
      "tags": ["Math", "Brainteaser"]
    }
  },
  {
    "coloring-a-border": {
      "quesName": "Coloring A Border",
      "quesLink": "https://leetcode.com/problems/coloring-a-border/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "uncrossed-lines": {
      "quesName": "Uncrossed Lines",
      "quesLink": "https://leetcode.com/problems/uncrossed-lines/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "escape-a-large-maze": {
      "quesName": "Escape a Large Maze",
      "quesLink": "https://leetcode.com/problems/escape-a-large-maze/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Hash Table",
        "Depth-First Search",
        "Breadth-First Search"
      ]
    }
  },
  {
    "valid-boomerang": {
      "quesName": "Valid Boomerang",
      "quesLink": "https://leetcode.com/problems/valid-boomerang/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "binary-search-tree-to-greater-sum-tree": {
      "quesName": "Binary Search Tree to Greater Sum Tree",
      "quesLink": "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "minimum-score-triangulation-of-polygon": {
      "quesName": "Minimum Score Triangulation of Polygon",
      "quesLink": "https://leetcode.com/problems/minimum-score-triangulation-of-polygon/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "moving-stones-until-consecutive-ii": {
      "quesName": "Moving Stones Until Consecutive II",
      "quesLink": "https://leetcode.com/problems/moving-stones-until-consecutive-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Two Pointers", "Sorting"]
    }
  },
  {
    "robot-bounded-in-circle": {
      "quesName": "Robot Bounded In Circle",
      "quesLink": "https://leetcode.com/problems/robot-bounded-in-circle/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Simulation"]
    }
  },
  {
    "flower-planting-with-no-adjacent": {
      "quesName": "Flower Planting With No Adjacent",
      "quesLink": "https://leetcode.com/problems/flower-planting-with-no-adjacent/",
      "specialTag": "Medium",
      "tags": ["Depth-First Search", "Breadth-First Search", "Graph"]
    }
  },
  {
    "partition-array-for-maximum-sum": {
      "quesName": "Partition Array for Maximum Sum",
      "quesLink": "https://leetcode.com/problems/partition-array-for-maximum-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "longest-duplicate-substring": {
      "quesName": "Longest Duplicate Substring",
      "quesLink": "https://leetcode.com/problems/longest-duplicate-substring/",
      "specialTag": "Hard",
      "tags": [
        "String",
        "Binary Search",
        "Sliding Window",
        "Rolling Hash",
        "Suffix Array",
        "Hash Function"
      ]
    }
  },
  {
    "customers-who-bought-all-products": {
      "quesName": "Customers Who Bought All Products",
      "quesLink": "https://leetcode.com/problems/customers-who-bought-all-products/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "last-stone-weight": {
      "quesName": "Last Stone Weight",
      "quesLink": "https://leetcode.com/problems/last-stone-weight/",
      "specialTag": "Easy",
      "tags": ["Array", "Heap (Priority Queue)"]
    }
  },
  {
    "remove-all-adjacent-duplicates-in-string": {
      "quesName": "Remove All Adjacent Duplicates In String",
      "quesLink": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/",
      "specialTag": "Easy",
      "tags": ["String", "Stack"]
    }
  },
  {
    "longest-string-chain": {
      "quesName": "Longest String Chain",
      "quesLink": "https://leetcode.com/problems/longest-string-chain/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "String",
        "Dynamic Programming"
      ]
    }
  },
  {
    "last-stone-weight-ii": {
      "quesName": "Last Stone Weight II",
      "quesLink": "https://leetcode.com/problems/last-stone-weight-ii/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "actors-and-directors-who-cooperated-at-least-three-times": {
      "quesName": "Actors and Directors Who Cooperated At Least Three Times",
      "quesLink": "https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "height-checker": {
      "quesName": "Height Checker",
      "quesLink": "https://leetcode.com/problems/height-checker/",
      "specialTag": "Easy",
      "tags": ["Array", "Sorting", "Counting Sort"]
    }
  },
  {
    "grumpy-bookstore-owner": {
      "quesName": "Grumpy Bookstore Owner",
      "quesLink": "https://leetcode.com/problems/grumpy-bookstore-owner/",
      "specialTag": "Medium",
      "tags": ["Array", "Sliding Window"]
    }
  },
  {
    "previous-permutation-with-one-swap": {
      "quesName": "Previous Permutation With One Swap",
      "quesLink": "https://leetcode.com/problems/previous-permutation-with-one-swap/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "distant-barcodes": {
      "quesName": "Distant Barcodes",
      "quesLink": "https://leetcode.com/problems/distant-barcodes/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)",
        "Counting"
      ]
    }
  },
  {
    "lexicographically-smallest-equivalent-string": {
      "quesName": "Lexicographically Smallest Equivalent String",
      "quesLink": "https://leetcode.com/problems/lexicographically-smallest-equivalent-string/",
      "specialTag": "Medium",
      "tags": ["String", "Union Find"]
    }
  },
  {
    "product-sales-analysis-i": {
      "quesName": "Product Sales Analysis I",
      "quesLink": "https://leetcode.com/problems/product-sales-analysis-i/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "product-sales-analysis-iii": {
      "quesName": "Product Sales Analysis III",
      "quesLink": "https://leetcode.com/problems/product-sales-analysis-iii/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "greatest-common-divisor-of-strings": {
      "quesName": "Greatest Common Divisor of Strings",
      "quesLink": "https://leetcode.com/problems/greatest-common-divisor-of-strings/",
      "specialTag": "Easy",
      "tags": ["Math", "String"]
    }
  },
  {
    "flip-columns-for-maximum-number-of-equal-rows": {
      "quesName": "Flip Columns For Maximum Number of Equal Rows",
      "quesLink": "https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Matrix"]
    }
  },
  {
    "adding-two-negabinary-numbers": {
      "quesName": "Adding Two Negabinary Numbers",
      "quesLink": "https://leetcode.com/problems/adding-two-negabinary-numbers/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "number-of-submatrices-that-sum-to-target": {
      "quesName": "Number of Submatrices That Sum to Target",
      "quesLink": "https://leetcode.com/problems/number-of-submatrices-that-sum-to-target/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Matrix", "Prefix Sum"]
    }
  },
  {
    "project-employees-i": {
      "quesName": "Project Employees I",
      "quesLink": "https://leetcode.com/problems/project-employees-i/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "occurrences-after-bigram": {
      "quesName": "Occurrences After Bigram",
      "quesLink": "https://leetcode.com/problems/occurrences-after-bigram/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "letter-tile-possibilities": {
      "quesName": "Letter Tile Possibilities",
      "quesLink": "https://leetcode.com/problems/letter-tile-possibilities/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Backtracking", "Counting"]
    }
  },
  {
    "insufficient-nodes-in-root-to-leaf-paths": {
      "quesName": "Insufficient Nodes in Root to Leaf Paths",
      "quesLink": "https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "smallest-subsequence-of-distinct-characters": {
      "quesName": "Smallest Subsequence of Distinct Characters",
      "quesLink": "https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/",
      "specialTag": "Medium",
      "tags": ["String", "Stack", "Greedy", "Monotonic Stack"]
    }
  },
  {
    "sales-analysis-iii": {
      "quesName": "Sales Analysis III",
      "quesLink": "https://leetcode.com/problems/sales-analysis-iii/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "duplicate-zeros": {
      "quesName": "Duplicate Zeros",
      "quesLink": "https://leetcode.com/problems/duplicate-zeros/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers"]
    }
  },
  {
    "largest-values-from-labels": {
      "quesName": "Largest Values From Labels",
      "quesLink": "https://leetcode.com/problems/largest-values-from-labels/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Greedy", "Sorting", "Counting"]
    }
  },
  {
    "shortest-path-in-binary-matrix": {
      "quesName": "Shortest Path in Binary Matrix",
      "quesLink": "https://leetcode.com/problems/shortest-path-in-binary-matrix/",
      "specialTag": "Medium",
      "tags": ["Array", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "shortest-common-supersequence": {
      "quesName": "Shortest Common Supersequence ",
      "quesLink": "https://leetcode.com/problems/shortest-common-supersequence/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "statistics-from-a-large-sample": {
      "quesName": "Statistics from a Large Sample",
      "quesLink": "https://leetcode.com/problems/statistics-from-a-large-sample/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Probability and Statistics"]
    }
  },
  {
    "car-pooling": {
      "quesName": "Car Pooling",
      "quesLink": "https://leetcode.com/problems/car-pooling/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Sorting",
        "Heap (Priority Queue)",
        "Simulation",
        "Prefix Sum"
      ]
    }
  },
  {
    "find-in-mountain-array": {
      "quesName": "Find in Mountain Array",
      "quesLink": "https://leetcode.com/problems/find-in-mountain-array/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search", "Interactive"]
    }
  },
  {
    "brace-expansion-ii": {
      "quesName": "Brace Expansion II",
      "quesLink": "https://leetcode.com/problems/brace-expansion-ii/",
      "specialTag": "Hard",
      "tags": ["String", "Backtracking", "Stack", "Breadth-First Search"]
    }
  },
  {
    "distribute-candies-to-people": {
      "quesName": "Distribute Candies to People",
      "quesLink": "https://leetcode.com/problems/distribute-candies-to-people/",
      "specialTag": "Easy",
      "tags": ["Math", "Simulation"]
    }
  },
  {
    "path-in-zigzag-labelled-binary-tree": {
      "quesName": "Path In Zigzag Labelled Binary Tree",
      "quesLink": "https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree/",
      "specialTag": "Medium",
      "tags": ["Math", "Tree", "Binary Tree"]
    }
  },
  {
    "filling-bookcase-shelves": {
      "quesName": "Filling Bookcase Shelves",
      "quesLink": "https://leetcode.com/problems/filling-bookcase-shelves/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "parsing-a-boolean-expression": {
      "quesName": "Parsing A Boolean Expression",
      "quesLink": "https://leetcode.com/problems/parsing-a-boolean-expression/",
      "specialTag": "Hard",
      "tags": ["String", "Stack", "Recursion"]
    }
  },
  {
    "defanging-an-ip-address": {
      "quesName": "Defanging an IP Address",
      "quesLink": "https://leetcode.com/problems/defanging-an-ip-address/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "corporate-flight-bookings": {
      "quesName": "Corporate Flight Bookings",
      "quesLink": "https://leetcode.com/problems/corporate-flight-bookings/",
      "specialTag": "Medium",
      "tags": ["Array", "Prefix Sum"]
    }
  },
  {
    "delete-nodes-and-return-forest": {
      "quesName": "Delete Nodes And Return Forest",
      "quesLink": "https://leetcode.com/problems/delete-nodes-and-return-forest/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "maximum-nesting-depth-of-two-valid-parentheses-strings": {
      "quesName": "Maximum Nesting Depth of Two Valid Parentheses Strings",
      "quesLink": "https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "print-in-order": {
      "quesName": "Print in Order",
      "quesLink": "https://leetcode.com/problems/print-in-order/",
      "specialTag": "Easy",
      "tags": ["Concurrency"]
    }
  },
  {
    "print-foobar-alternately": {
      "quesName": "Print FooBar Alternately",
      "quesLink": "https://leetcode.com/problems/print-foobar-alternately/",
      "specialTag": "Medium",
      "tags": ["Concurrency"]
    }
  },
  {
    "print-zero-even-odd": {
      "quesName": "Print Zero Even Odd",
      "quesLink": "https://leetcode.com/problems/print-zero-even-odd/",
      "specialTag": "Medium",
      "tags": ["Concurrency"]
    }
  },
  {
    "building-h2o": {
      "quesName": "Building H2O",
      "quesLink": "https://leetcode.com/problems/building-h2o/",
      "specialTag": "Medium",
      "tags": ["Concurrency"]
    }
  },
  {
    "relative-sort-array": {
      "quesName": "Relative Sort Array",
      "quesLink": "https://leetcode.com/problems/relative-sort-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Sorting", "Counting Sort"]
    }
  },
  {
    "lowest-common-ancestor-of-deepest-leaves": {
      "quesName": "Lowest Common Ancestor of Deepest Leaves",
      "quesLink": "https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "longest-well-performing-interval": {
      "quesName": "Longest Well-Performing Interval",
      "quesLink": "https://leetcode.com/problems/longest-well-performing-interval/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Stack", "Monotonic Stack", "Prefix Sum"]
    }
  },
  {
    "smallest-sufficient-team": {
      "quesName": "Smallest Sufficient Team",
      "quesLink": "https://leetcode.com/problems/smallest-sufficient-team/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Bit Manipulation", "Bitmask"]
    }
  },
  {
    "number-of-equivalent-domino-pairs": {
      "quesName": "Number of Equivalent Domino Pairs",
      "quesLink": "https://leetcode.com/problems/number-of-equivalent-domino-pairs/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Counting"]
    }
  },
  {
    "shortest-path-with-alternating-colors": {
      "quesName": "Shortest Path with Alternating Colors",
      "quesLink": "https://leetcode.com/problems/shortest-path-with-alternating-colors/",
      "specialTag": "Medium",
      "tags": ["Breadth-First Search", "Graph"]
    }
  },
  {
    "minimum-cost-tree-from-leaf-values": {
      "quesName": "Minimum Cost Tree From Leaf Values",
      "quesLink": "https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Stack",
        "Greedy",
        "Monotonic Stack"
      ]
    }
  },
  {
    "maximum-of-absolute-value-expression": {
      "quesName": "Maximum of Absolute Value Expression",
      "quesLink": "https://leetcode.com/problems/maximum-of-absolute-value-expression/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "n-th-tribonacci-number": {
      "quesName": "N-th Tribonacci Number",
      "quesLink": "https://leetcode.com/problems/n-th-tribonacci-number/",
      "specialTag": "Easy",
      "tags": ["Math", "Dynamic Programming", "Memoization"]
    }
  },
  {
    "alphabet-board-path": {
      "quesName": "Alphabet Board Path",
      "quesLink": "https://leetcode.com/problems/alphabet-board-path/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String"]
    }
  },
  {
    "largest-1-bordered-square": {
      "quesName": "Largest 1-Bordered Square",
      "quesLink": "https://leetcode.com/problems/largest-1-bordered-square/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "stone-game-ii": {
      "quesName": "Stone Game II",
      "quesLink": "https://leetcode.com/problems/stone-game-ii/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Math",
        "Dynamic Programming",
        "Prefix Sum",
        "Game Theory"
      ]
    }
  },
  {
    "user-activity-for-the-past-30-days-i": {
      "quesName": "User Activity for the Past 30 Days I",
      "quesLink": "https://leetcode.com/problems/user-activity-for-the-past-30-days-i/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "longest-common-subsequence": {
      "quesName": "Longest Common Subsequence",
      "quesLink": "https://leetcode.com/problems/longest-common-subsequence/",
      "specialTag": "Medium",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "decrease-elements-to-make-array-zigzag": {
      "quesName": "Decrease Elements To Make Array Zigzag",
      "quesLink": "https://leetcode.com/problems/decrease-elements-to-make-array-zigzag/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy"]
    }
  },
  {
    "binary-tree-coloring-game": {
      "quesName": "Binary Tree Coloring Game",
      "quesLink": "https://leetcode.com/problems/binary-tree-coloring-game/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "snapshot-array": {
      "quesName": "Snapshot Array",
      "quesLink": "https://leetcode.com/problems/snapshot-array/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Binary Search", "Design"]
    }
  },
  {
    "longest-chunked-palindrome-decomposition": {
      "quesName": "Longest Chunked Palindrome Decomposition",
      "quesLink": "https://leetcode.com/problems/longest-chunked-palindrome-decomposition/",
      "specialTag": "Hard",
      "tags": [
        "Two Pointers",
        "String",
        "Dynamic Programming",
        "Greedy",
        "Rolling Hash",
        "Hash Function"
      ]
    }
  },
  {
    "article-views-i": {
      "quesName": "Article Views I",
      "quesLink": "https://leetcode.com/problems/article-views-i/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "day-of-the-year": {
      "quesName": "Day of the Year",
      "quesLink": "https://leetcode.com/problems/day-of-the-year/",
      "specialTag": "Easy",
      "tags": ["Math", "String"]
    }
  },
  {
    "number-of-dice-rolls-with-target-sum": {
      "quesName": "Number of Dice Rolls With Target Sum",
      "quesLink": "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "swap-for-longest-repeated-character-substring": {
      "quesName": "Swap For Longest Repeated Character Substring",
      "quesLink": "https://leetcode.com/problems/swap-for-longest-repeated-character-substring/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "online-majority-element-in-subarray": {
      "quesName": "Online Majority Element In Subarray",
      "quesLink": "https://leetcode.com/problems/online-majority-element-in-subarray/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Binary Search",
        "Design",
        "Binary Indexed Tree",
        "Segment Tree"
      ]
    }
  },
  {
    "market-analysis-i": {
      "quesName": "Market Analysis I",
      "quesLink": "https://leetcode.com/problems/market-analysis-i/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "find-words-that-can-be-formed-by-characters": {
      "quesName": "Find Words That Can Be Formed by Characters",
      "quesLink": "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "String"]
    }
  },
  {
    "maximum-level-sum-of-a-binary-tree": {
      "quesName": "Maximum Level Sum of a Binary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "as-far-from-land-as-possible": {
      "quesName": "As Far from Land as Possible",
      "quesLink": "https://leetcode.com/problems/as-far-from-land-as-possible/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "last-substring-in-lexicographical-order": {
      "quesName": "Last Substring in Lexicographical Order",
      "quesLink": "https://leetcode.com/problems/last-substring-in-lexicographical-order/",
      "specialTag": "Hard",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "product-price-at-a-given-date": {
      "quesName": "Product Price at a Given Date",
      "quesLink": "https://leetcode.com/problems/product-price-at-a-given-date/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "invalid-transactions": {
      "quesName": "Invalid Transactions",
      "quesLink": "https://leetcode.com/problems/invalid-transactions/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Sorting"]
    }
  },
  {
    "compare-strings-by-frequency-of-the-smallest-character": {
      "quesName": "Compare Strings by Frequency of the Smallest Character",
      "quesLink": "https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Binary Search", "Sorting"]
    }
  },
  {
    "remove-zero-sum-consecutive-nodes-from-linked-list": {
      "quesName": "Remove Zero Sum Consecutive Nodes from Linked List",
      "quesLink": "https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "Linked List"]
    }
  },
  {
    "dinner-plate-stacks": {
      "quesName": "Dinner Plate Stacks",
      "quesLink": "https://leetcode.com/problems/dinner-plate-stacks/",
      "specialTag": "Hard",
      "tags": ["Hash Table", "Stack", "Design", "Heap (Priority Queue)"]
    }
  },
  {
    "immediate-food-delivery-ii": {
      "quesName": "Immediate Food Delivery II",
      "quesLink": "https://leetcode.com/problems/immediate-food-delivery-ii/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "prime-arrangements": {
      "quesName": "Prime Arrangements",
      "quesLink": "https://leetcode.com/problems/prime-arrangements/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "can-make-palindrome-from-substring": {
      "quesName": "Can Make Palindrome from Substring",
      "quesLink": "https://leetcode.com/problems/can-make-palindrome-from-substring/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Bit Manipulation",
        "Prefix Sum"
      ]
    }
  },
  {
    "number-of-valid-words-for-each-puzzle": {
      "quesName": "Number of Valid Words for Each Puzzle",
      "quesLink": "https://leetcode.com/problems/number-of-valid-words-for-each-puzzle/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "String", "Bit Manipulation", "Trie"]
    }
  },
  {
    "reformat-department-table": {
      "quesName": "Reformat Department Table",
      "quesLink": "https://leetcode.com/problems/reformat-department-table/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "distance-between-bus-stops": {
      "quesName": "Distance Between Bus Stops",
      "quesLink": "https://leetcode.com/problems/distance-between-bus-stops/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "day-of-the-week": {
      "quesName": "Day of the Week",
      "quesLink": "https://leetcode.com/problems/day-of-the-week/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "maximum-subarray-sum-with-one-deletion": {
      "quesName": "Maximum Subarray Sum with One Deletion",
      "quesLink": "https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "make-array-strictly-increasing": {
      "quesName": "Make Array Strictly Increasing",
      "quesLink": "https://leetcode.com/problems/make-array-strictly-increasing/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"]
    }
  },
  {
    "maximum-number-of-balloons": {
      "quesName": "Maximum Number of Balloons",
      "quesLink": "https://leetcode.com/problems/maximum-number-of-balloons/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Counting"]
    }
  },
  {
    "reverse-substrings-between-each-pair-of-parentheses": {
      "quesName": "Reverse Substrings Between Each Pair of Parentheses",
      "quesLink": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "k-concatenation-maximum-sum": {
      "quesName": "K-Concatenation Maximum Sum",
      "quesLink": "https://leetcode.com/problems/k-concatenation-maximum-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "critical-connections-in-a-network": {
      "quesName": "Critical Connections in a Network",
      "quesLink": "https://leetcode.com/problems/critical-connections-in-a-network/",
      "specialTag": "Hard",
      "tags": ["Depth-First Search", "Graph", "Biconnected Component"]
    }
  },
  {
    "monthly-transactions-i": {
      "quesName": "Monthly Transactions I",
      "quesLink": "https://leetcode.com/problems/monthly-transactions-i/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "fizz-buzz-multithreaded": {
      "quesName": "Fizz Buzz Multithreaded",
      "quesLink": "https://leetcode.com/problems/fizz-buzz-multithreaded/",
      "specialTag": "Medium",
      "tags": ["Concurrency"]
    }
  },
  {
    "minimum-absolute-difference": {
      "quesName": "Minimum Absolute Difference",
      "quesLink": "https://leetcode.com/problems/minimum-absolute-difference/",
      "specialTag": "Easy",
      "tags": ["Array", "Sorting"]
    }
  },
  {
    "ugly-number-iii": {
      "quesName": "Ugly Number III",
      "quesLink": "https://leetcode.com/problems/ugly-number-iii/",
      "specialTag": "Medium",
      "tags": ["Math", "Binary Search", "Number Theory"]
    }
  },
  {
    "smallest-string-with-swaps": {
      "quesName": "Smallest String With Swaps",
      "quesLink": "https://leetcode.com/problems/smallest-string-with-swaps/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "String",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Sorting"
      ]
    }
  },
  {
    "sort-items-by-groups-respecting-dependencies": {
      "quesName": "Sort Items by Groups Respecting Dependencies",
      "quesLink": "https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies/",
      "specialTag": "Hard",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Graph",
        "Topological Sort"
      ]
    }
  },
  {
    "last-person-to-fit-in-the-bus": {
      "quesName": "Last Person to Fit in the Bus",
      "quesLink": "https://leetcode.com/problems/last-person-to-fit-in-the-bus/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "design-skiplist": {
      "quesName": "Design Skiplist",
      "quesLink": "https://leetcode.com/problems/design-skiplist/",
      "specialTag": "Hard",
      "tags": ["Linked List", "Design"]
    }
  },
  {
    "unique-number-of-occurrences": {
      "quesName": "Unique Number of Occurrences",
      "quesLink": "https://leetcode.com/problems/unique-number-of-occurrences/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "get-equal-substrings-within-budget": {
      "quesName": "Get Equal Substrings Within Budget",
      "quesLink": "https://leetcode.com/problems/get-equal-substrings-within-budget/",
      "specialTag": "Medium",
      "tags": ["String", "Binary Search", "Sliding Window", "Prefix Sum"]
    }
  },
  {
    "remove-all-adjacent-duplicates-in-string-ii": {
      "quesName": "Remove All Adjacent Duplicates in String II",
      "quesLink": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "minimum-moves-to-reach-target-with-rotations": {
      "quesName": "Minimum Moves to Reach Target with Rotations",
      "quesLink": "https://leetcode.com/problems/minimum-moves-to-reach-target-with-rotations/",
      "specialTag": "Hard",
      "tags": ["Array", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "queries-quality-and-percentage": {
      "quesName": "Queries Quality and Percentage",
      "quesLink": "https://leetcode.com/problems/queries-quality-and-percentage/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "minimum-cost-to-move-chips-to-the-same-position": {
      "quesName": "Minimum Cost to Move Chips to The Same Position",
      "quesLink": "https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Greedy"]
    }
  },
  {
    "longest-arithmetic-subsequence-of-given-difference": {
      "quesName": "Longest Arithmetic Subsequence of Given Difference",
      "quesLink": "https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Dynamic Programming"]
    }
  },
  {
    "path-with-maximum-gold": {
      "quesName": "Path with Maximum Gold",
      "quesLink": "https://leetcode.com/problems/path-with-maximum-gold/",
      "specialTag": "Medium",
      "tags": ["Array", "Backtracking", "Matrix"]
    }
  },
  {
    "count-vowels-permutation": {
      "quesName": "Count Vowels Permutation",
      "quesLink": "https://leetcode.com/problems/count-vowels-permutation/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "split-a-string-in-balanced-strings": {
      "quesName": "Split a String in Balanced Strings",
      "quesLink": "https://leetcode.com/problems/split-a-string-in-balanced-strings/",
      "specialTag": "Easy",
      "tags": ["String", "Greedy", "Counting"]
    }
  },
  {
    "queens-that-can-attack-the-king": {
      "quesName": "Queens That Can Attack the King",
      "quesLink": "https://leetcode.com/problems/queens-that-can-attack-the-king/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "dice-roll-simulation": {
      "quesName": "Dice Roll Simulation",
      "quesLink": "https://leetcode.com/problems/dice-roll-simulation/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "maximum-equal-frequency": {
      "quesName": "Maximum Equal Frequency",
      "quesLink": "https://leetcode.com/problems/maximum-equal-frequency/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "the-dining-philosophers": {
      "quesName": "The Dining Philosophers",
      "quesLink": "https://leetcode.com/problems/the-dining-philosophers/",
      "specialTag": "Medium",
      "tags": ["Concurrency"]
    }
  },
  {
    "airplane-seat-assignment-probability": {
      "quesName": "Airplane Seat Assignment Probability",
      "quesLink": "https://leetcode.com/problems/airplane-seat-assignment-probability/",
      "specialTag": "Medium",
      "tags": [
        "Math",
        "Dynamic Programming",
        "Brainteaser",
        "Probability and Statistics"
      ]
    }
  },
  {
    "check-if-it-is-a-straight-line": {
      "quesName": "Check If It Is a Straight Line",
      "quesLink": "https://leetcode.com/problems/check-if-it-is-a-straight-line/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "remove-sub-folders-from-the-filesystem": {
      "quesName": "Remove Sub-Folders from the Filesystem",
      "quesLink": "https://leetcode.com/problems/remove-sub-folders-from-the-filesystem/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Depth-First Search", "Trie"]
    }
  },
  {
    "replace-the-substring-for-balanced-string": {
      "quesName": "Replace the Substring for Balanced String",
      "quesLink": "https://leetcode.com/problems/replace-the-substring-for-balanced-string/",
      "specialTag": "Medium",
      "tags": ["String", "Sliding Window"]
    }
  },
  {
    "maximum-profit-in-job-scheduling": {
      "quesName": "Maximum Profit in Job Scheduling",
      "quesLink": "https://leetcode.com/problems/maximum-profit-in-job-scheduling/",
      "specialTag": "Hard",
      "tags": ["Array", "Binary Search", "Dynamic Programming", "Sorting"]
    }
  },
  {
    "find-positive-integer-solution-for-a-given-equation": {
      "quesName": "Find Positive Integer Solution for a Given Equation",
      "quesLink": "https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation/",
      "specialTag": "Medium",
      "tags": ["Math", "Two Pointers", "Binary Search", "Interactive"]
    }
  },
  {
    "circular-permutation-in-binary-representation": {
      "quesName": "Circular Permutation in Binary Representation",
      "quesLink": "https://leetcode.com/problems/circular-permutation-in-binary-representation/",
      "specialTag": "Medium",
      "tags": ["Math", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "maximum-length-of-a-concatenated-string-with-unique-characters": {
      "quesName": "Maximum Length of a Concatenated String with Unique Characters",
      "quesLink": "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Backtracking", "Bit Manipulation"]
    }
  },
  {
    "tiling-a-rectangle-with-the-fewest-squares": {
      "quesName": "Tiling a Rectangle with the Fewest Squares",
      "quesLink": "https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares/",
      "specialTag": "Hard",
      "tags": ["Backtracking"]
    }
  },
  {
    "minimum-swaps-to-make-strings-equal": {
      "quesName": "Minimum Swaps to Make Strings Equal",
      "quesLink": "https://leetcode.com/problems/minimum-swaps-to-make-strings-equal/",
      "specialTag": "Medium",
      "tags": ["Math", "String", "Greedy"]
    }
  },
  {
    "count-number-of-nice-subarrays": {
      "quesName": "Count Number of Nice Subarrays",
      "quesLink": "https://leetcode.com/problems/count-number-of-nice-subarrays/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Math", "Sliding Window"]
    }
  },
  {
    "minimum-remove-to-make-valid-parentheses": {
      "quesName": "Minimum Remove to Make Valid Parentheses",
      "quesLink": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",
      "specialTag": "Medium",
      "tags": ["String", "Stack"]
    }
  },
  {
    "check-if-it-is-a-good-array": {
      "quesName": "Check If It Is a Good Array",
      "quesLink": "https://leetcode.com/problems/check-if-it-is-a-good-array/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Number Theory"]
    }
  },
  {
    "average-selling-price": {
      "quesName": "Average Selling Price",
      "quesLink": "https://leetcode.com/problems/average-selling-price/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "cells-with-odd-values-in-a-matrix": {
      "quesName": "Cells with Odd Values in a Matrix",
      "quesLink": "https://leetcode.com/problems/cells-with-odd-values-in-a-matrix/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Simulation"]
    }
  },
  {
    "reconstruct-a-2-row-binary-matrix": {
      "quesName": "Reconstruct a 2-Row Binary Matrix",
      "quesLink": "https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Matrix"]
    }
  },
  {
    "number-of-closed-islands": {
      "quesName": "Number of Closed Islands",
      "quesLink": "https://leetcode.com/problems/number-of-closed-islands/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "maximum-score-words-formed-by-letters": {
      "quesName": "Maximum Score Words Formed by Letters",
      "quesLink": "https://leetcode.com/problems/maximum-score-words-formed-by-letters/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "String",
        "Dynamic Programming",
        "Backtracking",
        "Bit Manipulation",
        "Bitmask"
      ]
    }
  },
  {
    "shift-2d-grid": {
      "quesName": "Shift 2D Grid",
      "quesLink": "https://leetcode.com/problems/shift-2d-grid/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix", "Simulation"]
    }
  },
  {
    "find-elements-in-a-contaminated-binary-tree": {
      "quesName": "Find Elements in a Contaminated Binary Tree",
      "quesLink": "https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Design",
        "Binary Tree"
      ]
    }
  },
  {
    "greatest-sum-divisible-by-three": {
      "quesName": "Greatest Sum Divisible by Three",
      "quesLink": "https://leetcode.com/problems/greatest-sum-divisible-by-three/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Greedy", "Sorting"]
    }
  },
  {
    "minimum-moves-to-move-a-box-to-their-target-location": {
      "quesName": "Minimum Moves to Move a Box to Their Target Location",
      "quesLink": "https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Breadth-First Search",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    }
  },
  {
    "minimum-time-visiting-all-points": {
      "quesName": "Minimum Time Visiting All Points",
      "quesLink": "https://leetcode.com/problems/minimum-time-visiting-all-points/",
      "specialTag": "Easy",
      "tags": ["Array", "Math", "Geometry"]
    }
  },
  {
    "count-servers-that-communicate": {
      "quesName": "Count Servers that Communicate",
      "quesLink": "https://leetcode.com/problems/count-servers-that-communicate/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix",
        "Counting"
      ]
    }
  },
  {
    "search-suggestions-system": {
      "quesName": "Search Suggestions System",
      "quesLink": "https://leetcode.com/problems/search-suggestions-system/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "String",
        "Binary Search",
        "Trie",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "number-of-ways-to-stay-in-the-same-place-after-some-steps": {
      "quesName": "Number of Ways to Stay in the Same Place After Some Steps",
      "quesLink": "https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps/",
      "specialTag": "Hard",
      "tags": ["Dynamic Programming"]
    }
  },
  {
    "find-winner-on-a-tic-tac-toe-game": {
      "quesName": "Find Winner on a Tic Tac Toe Game",
      "quesLink": "https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Matrix", "Simulation"]
    }
  },
  {
    "number-of-burgers-with-no-waste-of-ingredients": {
      "quesName": "Number of Burgers with No Waste of Ingredients",
      "quesLink": "https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "count-square-submatrices-with-all-ones": {
      "quesName": "Count Square Submatrices with All Ones",
      "quesLink": "https://leetcode.com/problems/count-square-submatrices-with-all-ones/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "palindrome-partitioning-iii": {
      "quesName": "Palindrome Partitioning III",
      "quesLink": "https://leetcode.com/problems/palindrome-partitioning-iii/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "students-and-examinations": {
      "quesName": "Students and Examinations",
      "quesLink": "https://leetcode.com/problems/students-and-examinations/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "subtract-the-product-and-sum-of-digits-of-an-integer": {
      "quesName": "Subtract the Product and Sum of Digits of an Integer",
      "quesLink": "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "group-the-people-given-the-group-size-they-belong-to": {
      "quesName": "Group the People Given the Group Size They Belong To",
      "quesLink": "https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table"]
    }
  },
  {
    "find-the-smallest-divisor-given-a-threshold": {
      "quesName": "Find the Smallest Divisor Given a Threshold",
      "quesLink": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search"]
    }
  },
  {
    "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix": {
      "quesName": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
      "quesLink": "https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix/",
      "specialTag": "Hard",
      "tags": ["Array", "Bit Manipulation", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "iterator-for-combination": {
      "quesName": "Iterator for Combination",
      "quesLink": "https://leetcode.com/problems/iterator-for-combination/",
      "specialTag": "Medium",
      "tags": ["String", "Backtracking", "Design", "Iterator"]
    }
  },
  {
    "element-appearing-more-than-25-in-sorted-array": {
      "quesName": "Element Appearing More Than 25% In Sorted Array",
      "quesLink": "https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "remove-covered-intervals": {
      "quesName": "Remove Covered Intervals",
      "quesLink": "https://leetcode.com/problems/remove-covered-intervals/",
      "specialTag": "Medium",
      "tags": ["Array", "Sorting"]
    }
  },
  {
    "minimum-falling-path-sum-ii": {
      "quesName": "Minimum Falling Path Sum II",
      "quesLink": "https://leetcode.com/problems/minimum-falling-path-sum-ii/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "convert-binary-number-in-a-linked-list-to-integer": {
      "quesName": "Convert Binary Number in a Linked List to Integer",
      "quesLink": "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer/",
      "specialTag": "Easy",
      "tags": ["Linked List", "Math"]
    }
  },
  {
    "sequential-digits": {
      "quesName": "Sequential Digits",
      "quesLink": "https://leetcode.com/problems/sequential-digits/",
      "specialTag": "Medium",
      "tags": ["Enumeration"]
    }
  },
  {
    "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold": {
      "quesName": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
      "quesLink": "https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Matrix", "Prefix Sum"]
    }
  },
  {
    "shortest-path-in-a-grid-with-obstacles-elimination": {
      "quesName": "Shortest Path in a Grid with Obstacles Elimination",
      "quesLink": "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination/",
      "specialTag": "Hard",
      "tags": ["Array", "Breadth-First Search", "Matrix"]
    }
  },
  {
    "find-numbers-with-even-number-of-digits": {
      "quesName": "Find Numbers with Even Number of Digits",
      "quesLink": "https://leetcode.com/problems/find-numbers-with-even-number-of-digits/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "divide-array-in-sets-of-k-consecutive-numbers": {
      "quesName": "Divide Array in Sets of K Consecutive Numbers",
      "quesLink": "https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Greedy", "Sorting"]
    }
  },
  {
    "maximum-number-of-occurrences-of-a-substring": {
      "quesName": "Maximum Number of Occurrences of a Substring",
      "quesLink": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "maximum-candies-you-can-get-from-boxes": {
      "quesName": "Maximum Candies You Can Get from Boxes",
      "quesLink": "https://leetcode.com/problems/maximum-candies-you-can-get-from-boxes/",
      "specialTag": "Hard",
      "tags": ["Array", "Breadth-First Search", "Graph"]
    }
  },
  {
    "replace-elements-with-greatest-element-on-right-side": {
      "quesName": "Replace Elements with Greatest Element on Right Side",
      "quesLink": "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "sum-of-mutated-array-closest-to-target": {
      "quesName": "Sum of Mutated Array Closest to Target",
      "quesLink": "https://leetcode.com/problems/sum-of-mutated-array-closest-to-target/",
      "specialTag": "Medium",
      "tags": ["Array", "Binary Search", "Sorting"]
    }
  },
  {
    "number-of-paths-with-max-score": {
      "quesName": "Number of Paths with Max Score",
      "quesLink": "https://leetcode.com/problems/number-of-paths-with-max-score/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Matrix"]
    }
  },
  {
    "deepest-leaves-sum": {
      "quesName": "Deepest Leaves Sum",
      "quesLink": "https://leetcode.com/problems/deepest-leaves-sum/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "find-n-unique-integers-sum-up-to-zero": {
      "quesName": "Find N Unique Integers Sum up to Zero",
      "quesLink": "https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero/",
      "specialTag": "Easy",
      "tags": ["Array", "Math"]
    }
  },
  {
    "all-elements-in-two-binary-search-trees": {
      "quesName": "All Elements in Two Binary Search Trees",
      "quesLink": "https://leetcode.com/problems/all-elements-in-two-binary-search-trees/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Sorting",
        "Binary Tree"
      ]
    }
  },
  {
    "jump-game-iii": {
      "quesName": "Jump Game III",
      "quesLink": "https://leetcode.com/problems/jump-game-iii/",
      "specialTag": "Medium",
      "tags": ["Array", "Depth-First Search", "Breadth-First Search"]
    }
  },
  {
    "verbal-arithmetic-puzzle": {
      "quesName": "Verbal Arithmetic Puzzle",
      "quesLink": "https://leetcode.com/problems/verbal-arithmetic-puzzle/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "String", "Backtracking"]
    }
  },
  {
    "decrypt-string-from-alphabet-to-integer-mapping": {
      "quesName": "Decrypt String from Alphabet to Integer Mapping",
      "quesLink": "https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "xor-queries-of-a-subarray": {
      "quesName": "XOR Queries of a Subarray",
      "quesLink": "https://leetcode.com/problems/xor-queries-of-a-subarray/",
      "specialTag": "Medium",
      "tags": ["Array", "Bit Manipulation", "Prefix Sum"]
    }
  },
  {
    "get-watched-videos-by-your-friends": {
      "quesName": "Get Watched Videos by Your Friends",
      "quesLink": "https://leetcode.com/problems/get-watched-videos-by-your-friends/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Breadth-First Search",
        "Graph",
        "Sorting"
      ]
    }
  },
  {
    "minimum-insertion-steps-to-make-a-string-palindrome": {
      "quesName": "Minimum Insertion Steps to Make a String Palindrome",
      "quesLink": "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "decompress-run-length-encoded-list": {
      "quesName": "Decompress Run-Length Encoded List",
      "quesLink": "https://leetcode.com/problems/decompress-run-length-encoded-list/",
      "specialTag": "Easy",
      "tags": ["Array"]
    }
  },
  {
    "matrix-block-sum": {
      "quesName": "Matrix Block Sum",
      "quesLink": "https://leetcode.com/problems/matrix-block-sum/",
      "specialTag": "Medium",
      "tags": ["Array", "Matrix", "Prefix Sum"]
    }
  },
  {
    "sum-of-nodes-with-even-valued-grandparent": {
      "quesName": "Sum of Nodes with Even-Valued Grandparent",
      "quesLink": "https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "distinct-echo-substrings": {
      "quesName": "Distinct Echo Substrings",
      "quesLink": "https://leetcode.com/problems/distinct-echo-substrings/",
      "specialTag": "Hard",
      "tags": ["String", "Trie", "Rolling Hash", "Hash Function"]
    }
  },
  {
    "convert-integer-to-the-sum-of-two-no-zero-integers": {
      "quesName": "Convert Integer to the Sum of Two No-Zero Integers",
      "quesLink": "https://leetcode.com/problems/convert-integer-to-the-sum-of-two-no-zero-integers/",
      "specialTag": "Easy",
      "tags": ["Math"]
    }
  },
  {
    "minimum-flips-to-make-a-or-b-equal-to-c": {
      "quesName": "Minimum Flips to Make a OR b Equal to c",
      "quesLink": "https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/",
      "specialTag": "Medium",
      "tags": ["Bit Manipulation"]
    }
  },
  {
    "number-of-operations-to-make-network-connected": {
      "quesName": "Number of Operations to Make Network Connected",
      "quesLink": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/",
      "specialTag": "Medium",
      "tags": [
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph"
      ]
    }
  },
  {
    "minimum-distance-to-type-a-word-using-two-fingers": {
      "quesName": "Minimum Distance to Type a Word Using Two Fingers",
      "quesLink": "https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming"]
    }
  },
  {
    "restaurant-growth": {
      "quesName": "Restaurant Growth",
      "quesLink": "https://leetcode.com/problems/restaurant-growth/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "maximum-69-number": {
      "quesName": "Maximum 69 Number",
      "quesLink": "https://leetcode.com/problems/maximum-69-number/",
      "specialTag": "Easy",
      "tags": ["Math", "Greedy"]
    }
  },
  {
    "print-words-vertically": {
      "quesName": "Print Words Vertically",
      "quesLink": "https://leetcode.com/problems/print-words-vertically/",
      "specialTag": "Medium",
      "tags": ["Array", "String", "Simulation"]
    }
  },
  {
    "delete-leaves-with-a-given-value": {
      "quesName": "Delete Leaves With a Given Value",
      "quesLink": "https://leetcode.com/problems/delete-leaves-with-a-given-value/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "minimum-number-of-taps-to-open-to-water-a-garden": {
      "quesName": "Minimum Number of Taps to Open to Water a Garden",
      "quesLink": "https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "list-the-products-ordered-in-a-period": {
      "quesName": "List the Products Ordered in a Period",
      "quesLink": "https://leetcode.com/problems/list-the-products-ordered-in-a-period/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "break-a-palindrome": {
      "quesName": "Break a Palindrome",
      "quesLink": "https://leetcode.com/problems/break-a-palindrome/",
      "specialTag": "Medium",
      "tags": ["String", "Greedy"]
    }
  },
  {
    "sort-the-matrix-diagonally": {
      "quesName": "Sort the Matrix Diagonally",
      "quesLink": "https://leetcode.com/problems/sort-the-matrix-diagonally/",
      "specialTag": "Medium",
      "tags": ["Array", "Sorting", "Matrix"]
    }
  },
  {
    "reverse-subarray-to-maximize-array-value": {
      "quesName": "Reverse Subarray To Maximize Array Value",
      "quesLink": "https://leetcode.com/problems/reverse-subarray-to-maximize-array-value/",
      "specialTag": "Hard",
      "tags": ["Array", "Math", "Greedy"]
    }
  },
  {
    "rank-transform-of-an-array": {
      "quesName": "Rank Transform of an Array",
      "quesLink": "https://leetcode.com/problems/rank-transform-of-an-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Sorting"]
    }
  },
  {
    "remove-palindromic-subsequences": {
      "quesName": "Remove Palindromic Subsequences",
      "quesLink": "https://leetcode.com/problems/remove-palindromic-subsequences/",
      "specialTag": "Easy",
      "tags": ["Two Pointers", "String"]
    }
  },
  {
    "filter-restaurants-by-vegan-friendly-price-and-distance": {
      "quesName": "Filter Restaurants by Vegan-Friendly, Price and Distance",
      "quesLink": "https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance/",
      "specialTag": "Medium",
      "tags": ["Array", "Sorting"]
    }
  },
  {
    "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance": {
      "quesName": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
      "quesLink": "https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming", "Graph", "Shortest Path"]
    }
  },
  {
    "minimum-difficulty-of-a-job-schedule": {
      "quesName": "Minimum Difficulty of a Job Schedule",
      "quesLink": "https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming"]
    }
  },
  {
    "the-k-weakest-rows-in-a-matrix": {
      "quesName": "The K Weakest Rows in a Matrix",
      "quesLink": "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Binary Search",
        "Sorting",
        "Heap (Priority Queue)",
        "Matrix"
      ]
    }
  },
  {
    "reduce-array-size-to-the-half": {
      "quesName": "Reduce Array Size to The Half",
      "quesLink": "https://leetcode.com/problems/reduce-array-size-to-the-half/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Hash Table",
        "Greedy",
        "Sorting",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "maximum-product-of-splitted-binary-tree": {
      "quesName": "Maximum Product of Splitted Binary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Binary Tree"]
    }
  },
  {
    "jump-game-v": {
      "quesName": "Jump Game V",
      "quesLink": "https://leetcode.com/problems/jump-game-v/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Sorting"]
    }
  },
  {
    "movie-rating": {
      "quesName": "Movie Rating",
      "quesLink": "https://leetcode.com/problems/movie-rating/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "number-of-steps-to-reduce-a-number-to-zero": {
      "quesName": "Number of Steps to Reduce a Number to Zero",
      "quesLink": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero/",
      "specialTag": "Easy",
      "tags": ["Math", "Bit Manipulation"]
    }
  },
  {
    "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold": {
      "quesName": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
      "quesLink": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",
      "specialTag": "Medium",
      "tags": ["Array", "Sliding Window"]
    }
  },
  {
    "angle-between-hands-of-a-clock": {
      "quesName": "Angle Between Hands of a Clock",
      "quesLink": "https://leetcode.com/problems/angle-between-hands-of-a-clock/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "jump-game-iv": {
      "quesName": "Jump Game IV",
      "quesLink": "https://leetcode.com/problems/jump-game-iv/",
      "specialTag": "Hard",
      "tags": ["Array", "Hash Table", "Breadth-First Search"]
    }
  },
  {
    "check-if-n-and-its-double-exist": {
      "quesName": "Check If N and Its Double Exist",
      "quesLink": "https://leetcode.com/problems/check-if-n-and-its-double-exist/",
      "specialTag": "Easy",
      "tags": [
        "Array",
        "Hash Table",
        "Two Pointers",
        "Binary Search",
        "Sorting"
      ]
    }
  },
  {
    "minimum-number-of-steps-to-make-two-strings-anagram": {
      "quesName": "Minimum Number of Steps to Make Two Strings Anagram",
      "quesLink": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Counting"]
    }
  },
  {
    "tweet-counts-per-frequency": {
      "quesName": "Tweet Counts Per Frequency",
      "quesLink": "https://leetcode.com/problems/tweet-counts-per-frequency/",
      "specialTag": "Medium",
      "tags": [
        "Hash Table",
        "Binary Search",
        "Design",
        "Sorting",
        "Ordered Set"
      ]
    }
  },
  {
    "maximum-students-taking-exam": {
      "quesName": "Maximum Students Taking Exam",
      "quesLink": "https://leetcode.com/problems/maximum-students-taking-exam/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Bit Manipulation",
        "Matrix",
        "Bitmask"
      ]
    }
  },
  {
    "count-negative-numbers-in-a-sorted-matrix": {
      "quesName": "Count Negative Numbers in a Sorted Matrix",
      "quesLink": "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/",
      "specialTag": "Easy",
      "tags": ["Array", "Binary Search", "Matrix"]
    }
  },
  {
    "product-of-the-last-k-numbers": {
      "quesName": "Product of the Last K Numbers",
      "quesLink": "https://leetcode.com/problems/product-of-the-last-k-numbers/",
      "specialTag": "Medium",
      "tags": ["Array", "Math", "Design", "Queue", "Data Stream"]
    }
  },
  {
    "maximum-number-of-events-that-can-be-attended": {
      "quesName": "Maximum Number of Events That Can Be Attended",
      "quesLink": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/",
      "specialTag": "Medium",
      "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "construct-target-array-with-multiple-sums": {
      "quesName": "Construct Target Array With Multiple Sums",
      "quesLink": "https://leetcode.com/problems/construct-target-array-with-multiple-sums/",
      "specialTag": "Hard",
      "tags": ["Array", "Heap (Priority Queue)"]
    }
  },
  {
    "sort-integers-by-the-number-of-1-bits": {
      "quesName": "Sort Integers by The Number of 1 Bits",
      "quesLink": "https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits/",
      "specialTag": "Easy",
      "tags": ["Array", "Bit Manipulation", "Sorting", "Counting"]
    }
  },
  {
    "apply-discount-every-n-orders": {
      "quesName": "Apply Discount Every n Orders",
      "quesLink": "https://leetcode.com/problems/apply-discount-every-n-orders/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Design"]
    }
  },
  {
    "number-of-substrings-containing-all-three-characters": {
      "quesName": "Number of Substrings Containing All Three Characters",
      "quesLink": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Sliding Window"]
    }
  },
  {
    "count-all-valid-pickup-and-delivery-options": {
      "quesName": "Count All Valid Pickup and Delivery Options",
      "quesLink": "https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options/",
      "specialTag": "Hard",
      "tags": ["Math", "Dynamic Programming", "Combinatorics"]
    }
  },
  {
    "number-of-days-between-two-dates": {
      "quesName": "Number of Days Between Two Dates",
      "quesLink": "https://leetcode.com/problems/number-of-days-between-two-dates/",
      "specialTag": "Easy",
      "tags": ["Math", "String"]
    }
  },
  {
    "validate-binary-tree-nodes": {
      "quesName": "Validate Binary Tree Nodes",
      "quesLink": "https://leetcode.com/problems/validate-binary-tree-nodes/",
      "specialTag": "Medium",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Graph",
        "Binary Tree"
      ]
    }
  },
  {
    "closest-divisors": {
      "quesName": "Closest Divisors",
      "quesLink": "https://leetcode.com/problems/closest-divisors/",
      "specialTag": "Medium",
      "tags": ["Math"]
    }
  },
  {
    "largest-multiple-of-three": {
      "quesName": "Largest Multiple of Three",
      "quesLink": "https://leetcode.com/problems/largest-multiple-of-three/",
      "specialTag": "Hard",
      "tags": ["Array", "Dynamic Programming", "Greedy"]
    }
  },
  {
    "how-many-numbers-are-smaller-than-the-current-number": {
      "quesName": "How Many Numbers Are Smaller Than the Current Number",
      "quesLink": "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Sorting", "Counting"]
    }
  },
  {
    "rank-teams-by-votes": {
      "quesName": "Rank Teams by Votes",
      "quesLink": "https://leetcode.com/problems/rank-teams-by-votes/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "String", "Sorting", "Counting"]
    }
  },
  {
    "linked-list-in-binary-tree": {
      "quesName": "Linked List in Binary Tree",
      "quesLink": "https://leetcode.com/problems/linked-list-in-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Linked List",
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "minimum-cost-to-make-at-least-one-valid-path-in-a-grid": {
      "quesName": "Minimum Cost to Make at Least One Valid Path in a Grid",
      "quesLink": "https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Breadth-First Search",
        "Graph",
        "Heap (Priority Queue)",
        "Matrix",
        "Shortest Path"
      ]
    }
  },
  {
    "increasing-decreasing-string": {
      "quesName": "Increasing Decreasing String",
      "quesLink": "https://leetcode.com/problems/increasing-decreasing-string/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "String", "Counting"]
    }
  },
  {
    "find-the-longest-substring-containing-vowels-in-even-counts": {
      "quesName": "Find the Longest Substring Containing Vowels in Even Counts",
      "quesLink": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Bit Manipulation", "Prefix Sum"]
    }
  },
  {
    "longest-zigzag-path-in-a-binary-tree": {
      "quesName": "Longest ZigZag Path in a Binary Tree",
      "quesLink": "https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/",
      "specialTag": "Medium",
      "tags": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "maximum-sum-bst-in-binary-tree": {
      "quesName": "Maximum Sum BST in Binary Tree",
      "quesLink": "https://leetcode.com/problems/maximum-sum-bst-in-binary-tree/",
      "specialTag": "Hard",
      "tags": [
        "Dynamic Programming",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "generate-a-string-with-characters-that-have-odd-counts": {
      "quesName": "Generate a String With Characters That Have Odd Counts",
      "quesLink": "https://leetcode.com/problems/generate-a-string-with-characters-that-have-odd-counts/",
      "specialTag": "Easy",
      "tags": ["String"]
    }
  },
  {
    "number-of-times-binary-string-is-prefix-aligned": {
      "quesName": "Number of Times Binary String Is Prefix-Aligned",
      "quesLink": "https://leetcode.com/problems/number-of-times-binary-string-is-prefix-aligned/",
      "specialTag": "Medium",
      "tags": ["Array"]
    }
  },
  {
    "time-needed-to-inform-all-employees": {
      "quesName": "Time Needed to Inform All Employees",
      "quesLink": "https://leetcode.com/problems/time-needed-to-inform-all-employees/",
      "specialTag": "Medium",
      "tags": ["Tree", "Depth-First Search", "Breadth-First Search"]
    }
  },
  {
    "frog-position-after-t-seconds": {
      "quesName": "Frog Position After T Seconds",
      "quesLink": "https://leetcode.com/problems/frog-position-after-t-seconds/",
      "specialTag": "Hard",
      "tags": ["Tree", "Depth-First Search", "Breadth-First Search", "Graph"]
    }
  },
  {
    "replace-employee-id-with-the-unique-identifier": {
      "quesName": "Replace Employee ID With The Unique Identifier",
      "quesLink": "https://leetcode.com/problems/replace-employee-id-with-the-unique-identifier/",
      "specialTag": "Easy",
      "tags": ["Database"]
    }
  },
  {
    "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree": {
      "quesName": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
      "quesLink": "https://leetcode.com/problems/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree/",
      "specialTag": "Easy",
      "tags": [
        "Tree",
        "Depth-First Search",
        "Breadth-First Search",
        "Binary Tree"
      ]
    }
  },
  {
    "lucky-numbers-in-a-matrix": {
      "quesName": "Lucky Numbers in a Matrix",
      "quesLink": "https://leetcode.com/problems/lucky-numbers-in-a-matrix/",
      "specialTag": "Easy",
      "tags": ["Array", "Matrix"]
    }
  },
  {
    "design-a-stack-with-increment-operation": {
      "quesName": "Design a Stack With Increment Operation",
      "quesLink": "https://leetcode.com/problems/design-a-stack-with-increment-operation/",
      "specialTag": "Medium",
      "tags": ["Array", "Stack", "Design"]
    }
  },
  {
    "balance-a-binary-search-tree": {
      "quesName": "Balance a Binary Search Tree",
      "quesLink": "https://leetcode.com/problems/balance-a-binary-search-tree/",
      "specialTag": "Medium",
      "tags": [
        "Divide and Conquer",
        "Greedy",
        "Tree",
        "Depth-First Search",
        "Binary Search Tree",
        "Binary Tree"
      ]
    }
  },
  {
    "maximum-performance-of-a-team": {
      "quesName": "Maximum Performance of a Team",
      "quesLink": "https://leetcode.com/problems/maximum-performance-of-a-team/",
      "specialTag": "Hard",
      "tags": ["Array", "Greedy", "Sorting", "Heap (Priority Queue)"]
    }
  },
  {
    "find-the-distance-value-between-two-arrays": {
      "quesName": "Find the Distance Value Between Two Arrays",
      "quesLink": "https://leetcode.com/problems/find-the-distance-value-between-two-arrays/",
      "specialTag": "Easy",
      "tags": ["Array", "Two Pointers", "Binary Search", "Sorting"]
    }
  },
  {
    "cinema-seat-allocation": {
      "quesName": "Cinema Seat Allocation",
      "quesLink": "https://leetcode.com/problems/cinema-seat-allocation/",
      "specialTag": "Medium",
      "tags": ["Array", "Hash Table", "Greedy", "Bit Manipulation"]
    }
  },
  {
    "sort-integers-by-the-power-value": {
      "quesName": "Sort Integers by The Power Value",
      "quesLink": "https://leetcode.com/problems/sort-integers-by-the-power-value/",
      "specialTag": "Medium",
      "tags": ["Dynamic Programming", "Memoization", "Sorting"]
    }
  },
  {
    "pizza-with-3n-slices": {
      "quesName": "Pizza With 3n Slices",
      "quesLink": "https://leetcode.com/problems/pizza-with-3n-slices/",
      "specialTag": "Hard",
      "tags": [
        "Array",
        "Dynamic Programming",
        "Greedy",
        "Heap (Priority Queue)"
      ]
    }
  },
  {
    "create-target-array-in-the-given-order": {
      "quesName": "Create Target Array in the Given Order",
      "quesLink": "https://leetcode.com/problems/create-target-array-in-the-given-order/",
      "specialTag": "Easy",
      "tags": ["Array", "Simulation"]
    }
  },
  {
    "four-divisors": {
      "quesName": "Four Divisors",
      "quesLink": "https://leetcode.com/problems/four-divisors/",
      "specialTag": "Medium",
      "tags": ["Array", "Math"]
    }
  },
  {
    "check-if-there-is-a-valid-path-in-a-grid": {
      "quesName": "Check if There is a Valid Path in a Grid",
      "quesLink": "https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid/",
      "specialTag": "Medium",
      "tags": [
        "Array",
        "Depth-First Search",
        "Breadth-First Search",
        "Union Find",
        "Matrix"
      ]
    }
  },
  {
    "longest-happy-prefix": {
      "quesName": "Longest Happy Prefix",
      "quesLink": "https://leetcode.com/problems/longest-happy-prefix/",
      "specialTag": "Hard",
      "tags": ["String", "Rolling Hash", "String Matching", "Hash Function"]
    }
  },
  {
    "capital-gainloss": {
      "quesName": "Capital Gain/Loss",
      "quesLink": "https://leetcode.com/problems/capital-gainloss/",
      "specialTag": "Medium",
      "tags": ["Database"]
    }
  },
  {
    "find-lucky-integer-in-an-array": {
      "quesName": "Find Lucky Integer in an Array",
      "quesLink": "https://leetcode.com/problems/find-lucky-integer-in-an-array/",
      "specialTag": "Easy",
      "tags": ["Array", "Hash Table", "Counting"]
    }
  },
  {
    "count-number-of-teams": {
      "quesName": "Count Number of Teams",
      "quesLink": "https://leetcode.com/problems/count-number-of-teams/",
      "specialTag": "Medium",
      "tags": ["Array", "Dynamic Programming", "Binary Indexed Tree"]
    }
  },
  {
    "design-underground-system": {
      "quesName": "Design Underground System",
      "quesLink": "https://leetcode.com/problems/design-underground-system/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Design"]
    }
  },
  {
    "find-all-good-strings": {
      "quesName": "Find All Good Strings",
      "quesLink": "https://leetcode.com/problems/find-all-good-strings/",
      "specialTag": "Hard",
      "tags": ["String", "Dynamic Programming", "String Matching"]
    }
  },
  {
    "count-largest-group": {
      "quesName": "Count Largest Group",
      "quesLink": "https://leetcode.com/problems/count-largest-group/",
      "specialTag": "Easy",
      "tags": ["Hash Table", "Math"]
    }
  },
  {
    "construct-k-palindrome-strings": {
      "quesName": "Construct K Palindrome Strings",
      "quesLink": "https://leetcode.com/problems/construct-k-palindrome-strings/",
      "specialTag": "Medium",
      "tags": ["Hash Table", "String", "Greedy", "Counting"]
    }
  }
]
